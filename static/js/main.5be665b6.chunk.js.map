{"version":3,"sources":["folds.mp3","lights.jpg","services/api.js","constants/P5ReactAdapter.js","components/presentational/CanvasImg.js","components/presentational/CanvasCard.js","containers/DisplayCanvases.js","containers/CanvasesContainer.js","CanvasesIndex.js","constants/firbaseConfig.js","components/Canvas.js","constants/index.js","components/presentational/PaintEdit.js","components/presentational/BurstEdit.js","components/presentational/ShapeEdit.js","components/presentational/CanvasSettings.js","containers/CanvasTools.js","containers/CanvasShowContainer.js","CanvasShow.js","components/LoginModal.js","Landing.js","About.js","containers/CreatedCanvasesContainer.js","UserShow.js","components/Navbar.js","App.js","serviceWorker.js","reducers/CanvasReducer.js","index.js"],"names":["module","exports","API_ROOT","HEADERS","Accept","api","getUser","fetch","localStorage","userLogin","user","method","headers","body","JSON","stringify","userCreate","bookmarkCanvas","canvasId","bookmark","user_id","picture_id","fetchCanvas","fetchCanvases","newCanvas","canvas","picture","editCanvas","data","deleteCanvas","newAnimation","modelName","editP5","shapeId","deleteP5","editMojs","burstId","deleteMojs","P5ReactAdapter","array","frequency","frequencyMapping","p5","i","length","readJsonShape","json","p","push","fill","stroke","width","height","amount","spin","orbit","shape","stagger_radius","stagger_place","radius","rotate","frameCount","translate","rectMode","CENTER","rect","pop","ellipseMode","ellipse","center","triangle","line","CanvasImg","props","sketch","background","mid_mapping_1","treble_mapping_1","bass_mapping_1","p5_shapes","setup","angleMode","DEGREES","createCanvas","readFrequencyShapes","myRef","React","createRef","this","myP5","current","ref","Component","CanvasCard","className","title","delete","onClick","DisplayCanvases","canvases","map","key","id","to","name","renderCanvases","CanvasesContainer","handleNewCanvas","state","then","resp","setState","prevState","catch","console","log","handleOnChange","event","target","value","loading","Form","onChange","Group","Field","Button","CircularProgress","connect","CanvasesIndex","history","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","actioncable","require","firebase","initializeApp","Canvas","toggleConnection","connected","fft","analyzer","preload","song","loadSound","folds","toggleBtn","createButton","uploadBtn","createFileInput","uploaded","addClass","mousePressed","toggleAudio","canvasChannel","cable","subscriptions","create","channel","paramsId","disconnected","received","dispatch","handleRecievedBurst","Amplitude","FFT","newDrawing","x","y","noStroke","file","uploadLoading","uploadedAudio","uploadedAudioPlay","mouseClicked","selected","mouseX","mouseY","send","canvas_id","burst","tune","winMouseX","winMouseY","uploading","isPlaying","pause","play","draw","mid_mapping_2","treble_mapping_2","bass_mapping_2","level","getLevel","analyze","bass","getEnergy","treble","mid","mapMid","mapTreble","mapBass","shapes","response","bursts","replay","createConsumer","disconnect","type","handleClick","canvasShapes","canvasBursts","animation","mojs","Burst","parent","document","getElementById","left","top","count","angle","0","radius_1","radius_2","children","color","strokeWidth","stroke_width","duration","PaintEdit","useEffect","setBurst","useState","handleInputChange","animate_mo","FormControl","Select","labelId","e","v","MenuItem","Typography","gutterBottom","Slider","orientation","label","valueLabelDisplay","max","Divider","RedSlider","withStyles","root","thumb","GreenSlider","BlueSlider","setShape","split","num","parseInt","handleColorChange","slice","p5_shape","join","defaultValue","min","aria-label","setBackground","setBass","setMid","setTreble","handleChange","lable","myBursts","myShapes","handleNewAnimation","renderMyAnimations","admin","CanvasShow","handleSaveCanvas","match","params","ButtonGroup","LoginModal","handleOnSignupChange","persist","signup","handleOnLoginChange","login","handleLoginClick","loginCallBack","handleSignupClick","error","message","toggleModal","setItem","email","password","Modal","open","modal","closeOnDimmerClick","onClose","size","Header","Icon","Content","image","Description","style","placeholder","fluid","horizontal","Landing","About","src","alt","exact","CreatedCanvasesContainer","handleRemoveCanvas","UserShow","pictures","filter","bookmarks","deletePath","handleLogout","clear","setModal","path","render","routerProps","Boolean","window","location","hostname","initialState","store","createStore","action","animate_mos","animation_id","myAnimations","canvasAnimations","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,2WCE9BC,EAAW,6CAKXC,EAAU,CACrB,eAAgB,mBAChBC,OAAQ,oBAqGGC,EACH,CACFC,QApGQ,kBAAMC,MAAM,GAAD,OAAIL,EAAJ,kBAAsBM,aAAY,MAqGrDC,UAnGU,SAACC,GACf,OAAOH,MAAM,GAAD,OAAIL,EAAJ,gBAA4B,CACxCS,OAAQ,OACRC,QAAST,EACTU,KAAMC,KAAKC,UAAU,CAACL,KAAMA,OAgGxBM,WA5FW,SAACN,GAChB,OAAOH,MAAM,GAAD,OAAIL,EAAJ,UAAsB,CAClCS,OAAQ,OACRC,QAAST,EACTU,KAAMC,KAAKC,UAAU,CAACL,KAAMA,QAoFnBL,EAMD,CACJY,eAvFe,SAACC,GACpB,OAAOX,MAAM,GAAD,OAAIL,EAAJ,kBAAsBM,aAAY,GAAlC,cAAsD,CAC9DG,OAAQ,OACRC,QAAST,EACTU,KAAMC,KAAKC,UAAU,CACjBI,SAAU,CACNC,QAASZ,aAAY,GACrBa,WAAYH,QAiFpBI,YA3EY,SAACJ,GAAD,OAAcX,MAAM,GAAD,OAAIL,EAAJ,qBAAyBgB,KA4ExDK,cA1Ec,kBAAMhB,MAAM,GAAD,OAAIL,EAAJ,eA2EzBsB,UAzEU,SAACC,GACf,OAAOlB,MAAM,GAAD,OAAIL,EAAJ,aAAyB,CACjCS,OAAQ,OACRC,QAAST,EACTU,KAAMC,KAAKC,UAAU,CAACW,QAASD,OAsE/BE,WAlEW,SAACT,EAAUU,GAC1B,OAAOrB,MAAM,GAAD,OAAIL,EAAJ,qBAAyBgB,GAAY,CAC7CP,OAAQ,QACRC,QAAST,EACTU,KAAMC,KAAKC,UAAUa,MA+DrBC,aA3Da,SAACX,GAClB,OAAOX,MAAM,GAAD,OAAIL,EAAJ,qBAAyBgB,GAAY,CAC7CP,OAAQ,SACRC,QAAST,MA4CJE,EAcE,CACPyB,aAxDa,SAACC,EAAWb,GAC7B,OAAOX,MAAM,GAAD,OAAIL,EAAJ,YAAgB6B,EAAhB,KAA8B,CACtCpB,OAAQ,OACRC,QAAST,EACTU,KAAMC,KAAKC,UAAL,yBACEgB,GAAc,CACdX,QAASZ,aAAY,GACrBa,WAAYH,SAkCfb,EAiBL,CACA2B,OA9CO,SAACC,EAASL,GACrB,OAAOrB,MAAM,GAAD,OAAIL,EAAJ,sBAA0B+B,GAAW,CAC7CtB,OAAQ,QACRC,QAAST,EACTU,KAAMC,KAAKC,UAAUa,MA2CrBM,SAvCS,SAACD,GACd,OAAO1B,MAAM,GAAD,OAAIL,EAAJ,sBAA0B+B,GAAW,CAC7CtB,OAAQ,SACRC,QAAST,MAiBJE,EAqBH,CACF8B,SAnCS,SAACC,EAASR,GACvB,OAAOrB,MAAM,GAAD,OAAIL,EAAJ,wBAA4BkC,GAAW,CAC/CzB,OAAQ,QACRC,QAAST,EACTU,KAAMC,KAAKC,UAAUa,MAgCrBS,WA7BW,SAACD,GAChB,OAAO7B,MAAM,GAAD,OAAIL,EAAJ,wBAA4BkC,GAAW,CAC/CzB,OAAQ,SACRC,QAAST,M,iBC5BFmC,E,iHA5EgBC,EAAOC,EAAWC,EAAkBC,GAC3D,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC1BJ,EAAMI,GAAGH,YAAcA,GACnBF,EAAeO,cAAcN,EAAMI,GAAIF,EAAkBC,K,oCAKpDI,EAAML,EAAkBM,GACzCA,EAAEC,OAEFD,EAAEE,KAAF,cAAcH,EAAKG,KAAnB,MACAF,EAAEG,OAAF,cAAgBJ,EAAKI,OAArB,MAJ4C,IAMrCC,EAA6EL,EAA7EK,MAAOC,EAAsEN,EAAtEM,OAAQC,EAA8DP,EAA9DO,OAAQC,EAAsDR,EAAtDQ,KAAMC,EAAgDT,EAAhDS,MAAOC,EAAyCV,EAAzCU,MAAOC,EAAkCX,EAAlCW,eAAgBC,EAAkBZ,EAAlBY,cAC5DC,EAASlB,EAAmBgB,EAElC,OADAV,EAAEa,OAAOL,EAAQR,EAAEc,WAAW,IACtBL,GACJ,IAAK,OAED,IAAK,IAAIb,EAAI,EAAGA,EAAIU,EAAQV,IACxBI,EAAEC,OACED,EAAEa,OAAQ,IAAIP,EAAUV,EAAIe,GAC5BX,EAAEC,OACED,EAAEe,UAAUH,EAAQA,GACpBZ,EAAEa,OAAON,EAAOP,EAAEc,WAAW,IAC7Bd,EAAEgB,SAAShB,EAAEiB,QACbjB,EAAEkB,KAAK,EAAG,EAAGd,EAAOC,GACxBL,EAAEmB,MACNnB,EAAEmB,MAEN,MACJ,IAAK,UACD,IAAK,IAAIvB,EAAI,EAAGA,EAAIU,EAAQV,IACxBI,EAAEC,OACED,EAAEa,OAAQ,IAAIP,EAAQV,EAAIe,GAC1BX,EAAEC,OACED,EAAEe,UAAUH,EAAQA,GACpBZ,EAAEa,OAAON,EAAOP,EAAEc,WAAW,IAC7Bd,EAAEoB,YAAYpB,EAAEiB,QAChBjB,EAAEqB,QAAQ,EAAG,EAAGjB,EAAOC,GAC3BL,EAAEmB,MACNnB,EAAEmB,MAEN,MACJ,IAAK,WACD,IAAK,IAAIvB,EAAI,EAAGA,EAAIU,EAAQV,IAAK,CAC7BI,EAAEC,OACED,EAAEa,OAAQ,IAAIP,EAAQV,EAAIe,GAC1BX,EAAEC,OACE,IAAMqB,EAAS,EAAIjB,EAAO,EAC1BL,EAAEe,UAAUH,EAAQA,GACpBZ,EAAEa,OAAON,EAAOP,EAAEc,WAAW,IAC7Bd,EAAEuB,SAAS,GAAID,EAAQlB,EAAOC,GAASD,EAAOC,GAClDL,EAAEmB,MACNnB,EAAEmB,MAEN,MACJ,IAAK,OACD,IAAK,IAAIvB,EAAI,EAAGA,EAAIU,EAAQV,IACxBI,EAAEC,OACED,EAAEa,OAAQ,IAAIP,EAAQV,EAAIe,GAC1BX,EAAEC,OACED,EAAEe,UAAUH,EAAQA,GACpBZ,EAAEa,OAAON,EAAOP,EAAEc,WAAW,IAC7Bd,EAAEwB,KAAK,EAAG,EAAGpB,EAAOC,GACxBL,EAAEmB,MACNnB,EAAEmB,MAKdnB,EAAEmB,U,KCxCKM,E,YA9BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAIVC,OAAS,SAAC3B,GAAO,IAAD,EACuE,EAAK0B,MAAMhD,OAAtFkD,EADI,EACJA,WAAYC,EADR,EACQA,cAAeC,EADvB,EACuBA,iBAAkBC,EADzC,EACyCA,eAAgBC,EADzD,EACyDA,UACrEhC,EAAEiC,MAAQ,WACNjC,EAAEkC,UAAUlC,EAAEmC,SACdnC,EAAEoC,aAAa,IAAI,KACnBpC,EAAE4B,WAAF,cAAoBA,EAApB,MACA5B,EAAEe,UAAUf,EAAEI,MAAQ,EAAGJ,EAAEK,OAAS,GACpCd,EAAe8C,oBAAoBL,EAAW,SAAUF,EAAkB9B,GAC1ET,EAAe8C,oBAAoBL,EAAW,MAAOH,EAAe7B,GACpET,EAAe8C,oBAAoBL,EAAW,OAAQD,EAAgB/B,KAZ1E,EAAKsC,MAAQC,IAAMC,YAFJ,E,iFAmBfC,KAAKC,KAAO,IAAI/C,IAAI8C,KAAKd,OAAQc,KAAKH,MAAMK,W,+BAI5C,OACA,yBAAKC,IAAKH,KAAKH,Y,GAzBCC,IAAMM,WCWfC,G,OAXI,SAAApB,GACf,OACI,yBAAKqB,UAAU,eACX,kBAAC,EAAD,CAAWrE,OAAQgD,EAAMhD,SAEzB,4BAAKgD,EAAMhD,OAAOsE,OACjBtB,EAAMuB,OAAS,4BAAQC,QAASxB,EAAMuB,QAAvB,UAAiD,kCAAQvB,EAAM/D,S,QCiB5EwF,EAvBS,SAACzB,GAerB,OACI,4BACKA,EAAMsB,MAAQ,4BAAKtB,EAAMsB,OAAc,GAhBzB,WACnB,GAAItB,EAAM0B,UAAY1B,EAAM0B,SAASvD,OAAS,EAC1C,OAAO6B,EAAM0B,SAASC,KAAI,SAAA3E,GACtB,OACI,wBAAI4E,IAAK5E,EAAO6E,IACZ,kBAAC,IAAD,CAAMD,IAAK5E,EAAO6E,GAAIC,GAAE,oBAAe9E,EAAO6E,KAC1C,kBAAC,EAAD,CAAY7E,OAAQA,EAAQf,KAAMe,EAAOf,KAAOe,EAAOf,KAAK8F,KAAO,UAWlFC,KCdPC,G,mBACF,WAAYjC,GAAQ,IAAD,8BACf,4CAAMA,KAwBVkC,gBAAkB,WACV,EAAKlC,MAAMrD,SACXf,EAAWmB,UAAU,EAAKoF,MAAMpF,WAC3BqF,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF,EAAK2B,MAAMkC,gBAAgB7D,GAC3B,EAAKiE,UAAS,SAAAC,GACV,MAAO,CACHb,SAAS,GAAD,mBAAMa,EAAUb,UAAhB,CAA0BrD,WAI7CmE,MAAMC,QAAQC,MArCR,EAyCnBC,eAAiB,SAACC,GACd,EAAKN,SAAS,CACVvF,UAAU,eACH,EAAKoF,MAAMpF,UADT,eAEJ6F,EAAMC,OAAOhB,GAAKe,EAAMC,OAAOC,WA3CxC,EAAKX,MAAQ,CACTY,SAAS,EACTrB,SAAU,GACV3E,UAAW,CACPuE,MAAO,GACP3E,QAAS,EAAKqD,MAAMrD,UAPb,E,iFAYE,IAAD,OAChBoE,KAAKuB,SAAS,CAACS,SAAS,IAAO,WAC3BnH,EAAWkB,gBACNsF,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF,EAAKiE,SAAS,CACVZ,SAAUrD,EACV0E,SAAS,Y,+BA+BnB,IAAD,OACL,OACI,oCACI,yBAAK1B,UAAU,eACX,+CACCN,KAAKf,MAAMrD,QAAU,kBAACqG,EAAA,EAAD,CAAMC,SAAUlC,KAAK4B,gBACvC,uCAAmB,6BACnB,kBAACK,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,KACI,2BAAOL,MAAO/B,KAAKoB,MAAMpF,UAAUuE,MAAOO,GAAG,WAEjD,kBAACuB,EAAA,EAAD,CAAQ5B,QAAS,kBAAM,EAAKU,oBAA5B,gBAEE,kFAEd,+CACA,yBAAKL,GAAG,YACR,yBAAKR,UAAU,eACVN,KAAKoB,MAAMY,QAAU,kBAACM,EAAA,EAAD,MAAuB,GAC7C,kBAAC,EAAD,CAAiB3B,SAAUX,KAAKoB,MAAMT,iB,GAtE1Bb,IAAMM,YAmFvBmC,eANS,SAAAnB,GACpB,MAAO,CACHxF,QAASwF,EAAMxF,WAIR2G,CAAyBrB,GC1EzBsB,EAdO,SAAAvD,GAMlB,OACI,yBAAKqB,UAAU,kBACX,kBAAC,EAAD,CAAmBa,gBANH,SAAClF,GACrBgD,EAAMwD,QAAQjF,KAAd,oBAAgCvB,EAAO6E,U,oCCKhC4B,G,OAXQ,CACnBC,OAAQC,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,kBCEbC,EAAcC,EAAQ,KAE5BC,IAASC,cAAcb,G,IAEjBc,E,YACF,WAAYvE,GAAQ,IAAD,8BACf,4CAAMA,KAOVwE,iBAAmB,WACf,EAAKlC,SAAS,CAACmC,WAAY,EAAKtC,MAAMsC,aATvB,EAiBnBxE,OAAS,SAAC3B,GACN,IAAIoG,EAAKC,EAETrG,EAAEsG,QAAU,WACR,EAAKC,KAAOvG,EAAEwG,UAAUC,MAG5BzG,EAAEiC,MAAQ,WACNjC,EAAEoC,aAAa,IAAK,KAEpB,EAAKsE,UAAY1G,EAAE2G,aAAa,gBAEhC,EAAKC,UAAY5G,EAAE6G,gBAAgB7G,EAAE8G,UAErC,EAAKF,UAAUG,SAAS,cAExB,EAAKL,UAAUK,SAAS,cAExB,EAAKL,UAAUM,aAAahH,EAAEiH,aAE9B,EAAKC,cAAgB,EAAKC,MAAMC,cAAcC,OAAO,CACjDC,QAAQ,kBACR/D,GAAI,EAAK7B,MAAM6F,UACjB,CACEpB,UAAW,WACPhC,QAAQC,IAAI,cACZ,EAAK8B,oBAETsB,aAAc,kBAAM,EAAKtB,oBACzBuB,SAAU,SAAA5I,GACF,SAAUA,EACV,EAAK6C,MAAMgG,SAAS7I,GAIpB,EAAK8I,oBAAoB9I,MAGrCwH,EAAW,IAAI1G,IAAGiI,UAClBxB,EAAM,IAAIzG,IAAGkI,IAEb7H,EAAEkC,UAAUlC,EAAEmC,UAGlBnC,EAAE8H,WAAa,SAACC,EAAEC,GACdhI,EAAEiI,WACFjI,EAAEE,KAAK,KACPF,EAAEqB,QAAQ0G,EAAGC,EAAG,EAAE,IAGtBhI,EAAE8G,SAAW,SAAAoB,GACT,EAAKC,eAAgB,EAYrB,EAAKC,cAAgBpI,EAAEwG,UAAU0B,EAAKrJ,KAAMmB,EAAEqI,oBAelDrI,EAAEsI,aAAe,WACe,WAAxB,EAAK5G,MAAM6G,UACPvI,EAAEwI,OAASxI,EAAEyI,OAAS,GAAKzI,EAAEwI,OAAS,KAAOxI,EAAEyI,OAAS,KACxD,EAAKvB,cAAcwB,KAAK,CACpBC,UAAW,EAAKjH,MAAM6F,SACtBqB,MAAO,CACHvK,QAASZ,aAAY,GACrBoL,KAAO,CACHd,EAAG/H,EAAE8I,UACLd,EAAGhI,EAAE+I,eAQ7B/I,EAAEqI,kBAAoB,SAACH,GACnB,EAAKc,WAAY,EAEb,EAAKzC,KAAK0C,aACV,EAAK1C,KAAK2C,QAGd,EAAK3C,KAAO2B,EAEZ,EAAK3B,KAAK4C,QAGdnJ,EAAEiH,YAAc,WACR,EAAKV,KAAK0C,YACd,EAAK1C,KAAK2C,QAEV,EAAK3C,KAAK4C,QAIdnJ,EAAEoJ,KAAO,WAAO,IAAD,EAC6G,EAAK1H,MAAMhD,OAA3HkD,EADG,EACHA,WAAYC,EADT,EACSA,cAAewH,EADxB,EACwBA,cAAevH,EADvC,EACuCA,iBAAkBwH,EADzD,EACyDA,iBAAkBvH,EAD3E,EAC2EA,eAAgBwH,EAD3F,EAC2FA,eAEtGvJ,EAAE4B,WAAF,cAAoBA,EAApB,MAEA5B,EAAEe,UAAUf,EAAEI,MAAQ,EAAGJ,EAAEK,OAAS,GAEpCL,EAAEwJ,MAAQnD,EAASoD,WACnBrD,EAAIsD,UAEJ,IAAIC,EAAOvD,EAAIwD,UAAU,QACrBC,EAASzD,EAAIwD,UAAU,UACvBE,EAAM1D,EAAIwD,UAAU,OAEpBG,EAAS/J,EAAEqD,IAAIyG,EAAK,EAAG,IAAKjI,EAAewH,GAC3CW,EAAYhK,EAAEqD,IAAIwG,EAAQ,EAAG,IAAK/H,EAAkBwH,GACpDW,EAAUjK,EAAEqD,IAAIsG,EAAM,EAAG,IAAK5H,EAAgBwH,GAElDhK,EAAe8C,oBAAqB,EAAKX,MAAMwI,OAAQ,SAAUF,EAAWhK,GAC5ET,EAAe8C,oBAAqB,EAAKX,MAAMwI,OAAQ,MAAOH,EAAQ/J,GACtET,EAAe8C,oBAAqB,EAAKX,MAAMwI,OAAQ,OAAQD,EAASjK,KAxJ7D,EAkKnB2H,oBAAsB,SAAAwC,GAAa,IAAD,EACNA,EAASvB,MAA1BvK,EADuB,EACvBA,QAASwK,EADc,EACdA,KACRuB,EAAW,EAAK1I,MAAhB0I,OACRjG,QAAQC,IAAI/F,EAASwK,GACrB,IAAK,IAAIjJ,EAAI,EAAGA,EAAIwK,EAAOvK,OAAQD,IAC3BwK,EAAOxK,GAAGvB,SAAWA,GACrB+L,EAAOxK,GAAGgJ,MAAMC,KAAKA,GAAMwB,UAtKnC,EAAK/H,MAAQC,IAAMC,YACnB,EAAKqB,MAAQ,CACTsC,WAAW,GAJA,E,iFAaf1D,KAAKC,KAAO,IAAI/C,IAAI8C,KAAKd,OAAQc,KAAKH,MAAMK,SAC5CF,KAAK0E,MAAQtB,EAAYyE,eC5BN,oD,6CD2KnB7H,KAAK0E,MAAMoD,aACX9H,KAAKf,MAAMgG,SAAS,CAAC8C,KAAM,kBAC3B/H,KAAK8D,KAAK2C,U,+BAeV,OACI,yBAAK3F,GAAG,SAASR,UAAU,SAASG,QAAST,KAAKgI,YAAa7H,IAAKH,KAAKH,Y,GAhLhEC,IAAMM,WAkNZmC,eA5BS,SAAAnB,GACpB,MAAO,CACHxF,QAASwF,EAAMxF,QACfK,OAAQmF,EAAMnF,OACd6J,SAAU1E,EAAM0E,SAChB2B,OAAQrG,EAAM6G,aACdN,OAAQvG,EAAM8G,aAAe9G,EAAM8G,aAAatH,KAAI,SAAAuH,GAChD,MAAO,CACHvM,QAASuM,EAAUvM,QACnBuK,MAAO,IAAIiC,IAAKC,MAAM,CAClBC,OAAQC,SAASC,eAAe,UAChCC,KAAM,EAAGC,IAAK,EACdC,MAAOR,EAAUQ,MACjBC,MAAO,CAACC,EAAGV,EAAUS,OACrBzK,OAAO,eAAGgK,EAAUW,SAAWX,EAAUY,UACzCC,SAAU,CACNhL,MAAOmK,EAAUnK,MACjBP,KAAS0K,EAAUc,MACnB9K,OAAY,GACZ+K,YAAaf,EAAUgB,aACvBC,SAA+B,IAAnBjB,EAAUiB,gBAIjC,MAIE7G,CAAyBiB,G,SEpNzB6F,EATG,SAAApK,GAEd,OACI,+B,uDC2IOsD,kBA5IG,SAAAtD,GAEdqK,qBAAU,WACFrK,EAAMkJ,UAAUrH,KAAOqF,EAAMrF,IAC7ByI,EAAS,eACFtK,EAAMkJ,eALE,MAUGqB,mBAAS,eAAIvK,EAAMkJ,YAVtB,mBAUhBhC,EAVgB,KAUToD,EAVS,KAYjBE,EAAoB,SAACzI,EAAMe,GAC7BwH,EAAS,eACEpD,EADH,eAECnF,EAAOe,MAyBpB,OACI,oCACA,yBAAKzB,UAAU,cACX,yBAAKA,UAAU,UACf,qCACA,kBAAC,IAAD,CAAQG,QA1BK,WACjB5F,EAASgC,WAAWoC,EAAMkJ,UAAUrH,GAAG,CAC/B4I,WAAW,eACJvD,KAIV9E,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF2B,EAAMgG,SAAS,CAAC8C,KAAM,kBAAmBI,UAAW7K,SAiBxD,cACA,kBAAC,IAAD,CAAQmD,QAdK,WACjB5F,EAASgC,WAAWoC,EAAMkJ,UAAUrH,IAC/BO,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF2B,EAAMgG,SAAS3H,QAUnB,gBACA,6BACI,kBAACqM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,QACHE,KAAK,QACLe,MAAOoE,EAAMnI,MACbkE,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEhI,OAAOC,SACvD,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,UAAhB,UACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,aACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,WAAhB,WACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,UAAhB,UACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,SAAhB,WAGR,kBAAC4H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,QACHE,KAAK,QACLe,MAAOoE,EAAM8C,MACb/G,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEhI,OAAOC,SACvD,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,OAAhB,OACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,UAAhB,UACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,QACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,QACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,QACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,WAAhB,cAIR,yBAAKzB,UAAU,UACX,kBAAC2J,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,YAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,WACLoJ,YAAY,WACZrI,MAAOoE,EAAK,SACZkE,MAAM,WACNC,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,YAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,WACLoJ,YAAY,WACZrI,MAAOoE,EAAK,SACZkE,MAAM,WACNC,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,SAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,QACLoJ,YAAY,WACZrI,MAAOoE,EAAMwC,MACb0B,MAAM,QACNE,IAAK,GACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,YAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,WACLe,MAAOoE,EAAMiD,SACbgB,YAAY,WACZC,MAAM,WACNC,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,SAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,QACLoJ,YAAY,WACZrI,MAAOoE,EAAMyC,MACbyB,MAAM,QACNC,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASM,SAI9D,kBAACS,GAAA,EAAD,U,SCpIFC,GAAYC,aAAW,CACzBC,KAAM,CACF1B,MAAO,OAEX2B,MAAO,CACH3B,MAAO,QALGyB,CAOfP,KAEGU,GAAcH,aAAW,CAC3BC,KAAM,CACF1B,MAAO,SAEX2B,MAAO,CACH3B,MAAO,UALKyB,CAOjBP,KAEGW,GAAaJ,aAAW,CAC1BC,KAAM,CACF1B,MAAO,QAEX2B,MAAO,CACH3B,MAAO,SALIyB,CAOhBP,KA6OY5H,kBA3OG,SAAAtD,GAEdqK,qBAAU,WACFrK,EAAMjB,MAAM8C,KAAO9C,EAAM8C,IACzBiK,EAAS,eACF9L,EAAMjB,MADL,CAEJP,KAAK,YAAKwB,EAAMjB,MAAMP,KAAKuN,MAAM,KAAKpK,KAAI,SAAAqK,GAAG,OAAIC,SAASD,OAC1DvN,OAAO,YAAKuB,EAAMjB,MAAMN,OAAOsN,MAAM,KAAKpK,KAAI,SAAAqK,GAAG,OAAIC,SAASD,aAPnD,MAYGzB,mBAAS,eAC5BvK,EAAMjB,MADqB,CAE9BP,KAAK,YAAKwB,EAAMjB,MAAMP,KAAKuN,MAAM,KAAKpK,KAAI,SAAAqK,GAAG,OAAIC,SAASD,OAC1DvN,OAAO,YAAKuB,EAAMjB,MAAMN,OAAOsN,MAAM,KAAKpK,KAAI,SAAAqK,GAAG,OAAIC,SAASD,UAf3C,mBAYhBjN,EAZgB,KAYT+M,EAZS,KAwCjBtB,EAAoB,SAACzI,EAAMe,GAC7BgJ,EAAS,eACE/M,EADH,eAECgD,EAAOe,MAIdoJ,EAAoB,SAACrK,EAAIE,EAAMe,GACjCgJ,EAAS,eACF/M,EADC,eAEHgD,EAFG,sBAEQhD,EAAMgD,GAAMoK,MAAM,EAAEtK,IAF5B,CAEiCiB,GAFjC,YAE2C/D,EAAMgD,GAAMoK,MAAMtK,EAAK,SAI9E,OACI,oCACA,yBAAKR,UAAU,eACX,kBAAC,IAAD,CAAQG,QAvCK,WACjB5F,EAAO2B,OAAOyC,EAAMjB,MAAM8C,GAAI,CAC1BuK,SAAS,eACFrN,EADC,CAEJN,OAAQM,EAAMN,OAAO4N,KAAK,KAC1B7N,KAAMO,EAAMP,KAAK6N,KAAK,SAGzBjK,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF2B,EAAMgG,SAAS,CAAC8C,KAAM,kBAAmBI,UAAW7K,SA6BxD,cACA,kBAAC,IAAD,CAAQmD,QA1BK,WACjB5F,EAAO6B,SAASuC,EAAMjB,MAAM8C,IACvBO,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF2B,EAAMgG,SAAS3H,QAsBnB,iBAEJ,yBAAKgD,UAAU,QACX,yBAAKA,UAAU,YACX,kBAACqJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,mBACR/I,GAAG,YACHE,KAAK,YACLuK,aAAc,GACdxJ,MAAO/D,EAAMhB,UACbkF,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,YAAaK,EAAEhI,OAAOC,SAC3D,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,UAAhB,UACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,OAAhB,OACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,UAGR,kBAAC4H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR/I,GAAG,QACHE,KAAK,QACLuK,aAAc,GACdxJ,MAAO/D,EAAMA,MACbkE,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEhI,OAAOC,SACvD,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,aACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,WAAhB,WACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,YAAhB,YACA,kBAACiI,EAAA,EAAD,CAAUjI,MAAM,QAAhB,UAGR,kBAACkI,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,kBAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,iBACLqJ,MAAM,iBACNmB,KAAM,GACNjB,IAAK,GACLxI,MAAO/D,EAAK,eACZsM,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,iBAAkBM,MAC3D,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,iBAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,gBACLqJ,MAAM,gBACNmB,KAAM,GACNjB,IAAK,GACLxI,MAAO/D,EAAK,cACZsM,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,gBAAiBM,OAE9D,yBAAKzJ,UAAU,YACH,kBAAC2J,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,cAGJ,kBAACO,GAAD,CACI1I,MAAO/D,EAAMP,KAAK,GAClB+N,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,OAAQpB,MACpD,kBAACc,GAAD,CACI9I,MAAO/D,EAAMP,KAAK,GAClB+N,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,OAAQpB,MACpD,kBAACe,GAAD,CACI/I,MAAO/D,EAAMP,KAAK,GAClB+N,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,OAAQpB,OAG5D,yBAAKzJ,UAAU,YACH,kBAAC2J,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,SAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,QACLqJ,MAAM,QACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZrI,MAAO/D,EAAML,MACb2M,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,UAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,SACLqJ,MAAM,SACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZrI,MAAO/D,EAAMJ,OACb0M,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,SAAUM,MACnD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,UAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,SACLqJ,MAAM,SACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZrI,MAAO/D,EAAMH,OACbyM,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,SAAUM,MAEnD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,SAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,QACLqJ,MAAM,QACNmB,KAAM,IACNpB,YAAY,WACZrI,MAAO/D,EAAMD,MACbuM,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,QAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,OACLqJ,MAAM,OACNmB,KAAM,IACNpB,YAAY,WACZrI,MAAO/D,EAAMF,KACbwM,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAASN,EAAkB,OAAQM,OAG7D,yBAAKzJ,UAAU,YACP,kBAAC2J,EAAA,EAAD,CAAYnJ,GAAG,SAASoJ,cAAY,GAApC,gBAGA,kBAACO,GAAD,CACIzJ,KAAK,SACLsJ,kBAAkB,OAClBvI,MAAO/D,EAAMN,OAAO,GACpB8N,IAAK,EACLjB,IAAK,IACLkB,aAAW,SACXvJ,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,SAAUpB,MACtD,kBAACc,GAAD,CACI7J,KAAK,SACLqJ,MAAM,SACNC,kBAAkB,OAClBvI,MAAO/D,EAAMN,OAAO,GACpB8N,IAAK,EACLjB,IAAK,IACLrI,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,SAAUpB,MACtD,kBAACe,GAAD,CACI9J,KAAK,SACLqJ,MAAM,SACNC,kBAAkB,OAClBvI,MAAO/D,EAAMN,OAAO,GACpB8N,IAAK,EACLjB,IAAK,IACLrI,SAAU,SAAC4H,EAAEC,GAAH,OAASoB,EAAkB,EAAG,SAAUpB,QAIlE,kBAACS,GAAA,EAAD,UC7PFC,GAAYC,aAAW,CACzBC,KAAM,CACF1B,MAAO,OAEX2B,MAAO,CACH3B,MAAO,QALGyB,CAOfP,KAEGU,GAAcH,aAAW,CAC3BC,KAAM,CACF1B,MAAO,SAEX2B,MAAO,CACH3B,MAAO,UALKyB,CAOjBP,KAEGW,GAAaJ,aAAW,CAC1BC,KAAM,CACF1B,MAAO,QAEX2B,MAAO,CACH3B,MAAO,SALIyB,CAOhBP,KAoGY5H,gBANS,SAAAnB,GACpB,MAAO,CACHnF,OAAQmF,EAAMnF,UAIPsG,EAlGQ,SAAAtD,GAAU,IAAD,EACQuK,mBAAS,YAAIvK,EAAMhD,OAAOkD,WAAW6L,MAAM,KAAKpK,KAAI,SAAAqK,GAAG,OAAIC,SAASD,QAD5E,mBACrB9L,EADqB,KACTuM,EADS,OAEJlC,mBAAS,CAACvK,EAAMhD,OAAOqD,eAAgBL,EAAMhD,OAAO6K,iBAFhD,mBAErBI,EAFqB,KAEfyE,EAFe,OAGNnC,mBAAS,CAACvK,EAAMhD,OAAOmD,cAAeH,EAAMhD,OAAO2K,gBAH7C,mBAGrBS,EAHqB,KAGhBuE,EAHgB,OAIApC,mBAAS,CAACvK,EAAMhD,OAAOoD,iBAAkBJ,EAAMhD,OAAO4K,mBAJtD,mBAIrBO,EAJqB,KAIbyE,EAJa,KAOtBC,EAAe,SAACb,EAAIlB,GACtB2B,EAAc,GAAD,mBAAKvM,EAAWiM,MAAM,EAAEH,IAAxB,CAA8BlB,GAA9B,YAAoC5K,EAAWiM,MAAMH,EAAI,OAmB1E,OACI,oCACI,yBAAK3K,UAAU,mBACX,kBAAC,IAAD,CAAQG,QAnBK,WACrB5F,EAAWsB,WAAW8C,EAAMhD,OAAO6E,GAAI,CACnC5E,QAAS,CACLiD,WAAYA,EAAWmM,KAAK,KAC5BhM,eAAgB4H,EAAK,GACrBJ,eAAgBI,EAAK,GACrB9H,cAAeiI,EAAI,GACnBT,cAAeS,EAAI,GACnBhI,iBAAkB+H,EAAO,GACzBP,iBAAkBO,EAAO,MAG5B/F,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,SAMF,eACA,gDACA,kBAAC,GAAD,CACIyE,MAAO5C,EAAW,GAClBqM,IAAK,EACLjB,IAAK,IACLwB,MAAM,MACNzB,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAAS+B,EAAa,EAAG/B,MACvC,kBAAC,GAAD,CACIhI,MAAO5C,EAAW,GAClBqM,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBD,MAAM,QACNnI,SAAU,SAAC4H,EAAEC,GAAH,OAAS+B,EAAa,EAAG/B,MACvC,kBAAC,GAAD,CACIhI,MAAO5C,EAAW,GAClBqM,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBD,MAAM,OACNnI,SAAU,SAAC4H,EAAEC,GAAH,OAAS+B,EAAa,EAAG/B,OAE3C,yBAAKzJ,UAAU,mBACX,4CACA,kBAAC2J,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,gBAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,OACLe,MAAOmF,EACPqD,IAAK,IACLF,MAAM,OACNC,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAAS4B,EAAQ5B,MAC/B,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,eAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,MACLe,MAAOsF,EACPgD,MAAM,MACNE,IAAK,IACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAAS6B,EAAO7B,MAC9B,kBAACE,EAAA,EAAD,CAAYnJ,GAAG,kBAAkBoJ,cAAY,GAA7C,kBAGA,kBAACC,EAAA,EAAD,CACInJ,KAAK,SACLe,MAAOqF,EACPiD,MAAM,SACNE,IAAK,IACLD,kBAAkB,OAClBpI,SAAU,SAAC4H,EAAEC,GAAH,OAAS8B,EAAU9B,OAErC,kBAACS,GAAA,EAAD,UCrDGjI,gBAVS,SAAAnB,GACpB,MAAO,CACHxF,QAASwF,EAAMxF,QACfsK,UAAW9E,EAAMnF,OAAO6E,GACxBkL,SAAU5K,EAAM4K,SAChBC,SAAU7K,EAAM6K,SAChBnG,SAAU1E,EAAM0E,YAITvD,EA7DK,SAACtD,GAEjB,IA6BMiN,EAAqB,SAAC3P,GACxB1B,EAAcyB,aAAaC,EAAW0C,EAAMiH,WACvC7E,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACe,cAAbf,EACA0C,EAAMgG,SAAS,CAAC8C,KAAM,iBAAkBI,UAAW7K,IAEnD2B,EAAMgG,SAAS,CAAC8C,KAAM,iBAAkBI,UAAW7K,QAKnE,OACI,oCA1CuB,WACvB,OAAQ2B,EAAM6G,UACV,IAAK,SACD,OACI,yBAAKxF,UAAU,mBACX,kBAAC,IAAD,CAAQG,QAAS,kBAAMyL,EAAmB,cAA1C,oBACCjN,EAAMgN,SAAWhN,EAAMgN,SAASrL,KAAI,SAAA5C,GAAK,OAAI,kBAAC,GAAD,CAAWA,MAAOA,OAAa,MAGzF,IAAK,SACD,OACI,yBAAKsC,UAAU,mBACX,kBAAC,IAAD,CAAQG,QAAS,kBAAMyL,EAAmB,gBAA1C,oBACCjN,EAAM+M,SAAW/M,EAAM+M,SAASpL,KAAI,SAAAuH,GAAS,OAAI,kBAAC,GAAD,CAAWA,UAAWA,OAAiB,MAGrG,IAAK,QACD,OAAO,kBAAC,EAAD,MACX,IAAK,WACD,OACI,yBAAK7H,UAAU,mBACX,kBAAC,GAAD,OAGZ,QACI,OAAO,sCAkBV6L,OC/BE5J,gBAPS,SAACnB,GACrB,MAAO,CACHnF,OAAQmF,EAAMnF,OACdmQ,MAAOhL,EAAMgL,SAIN7J,EAlBa,SAAAtD,GACxB,OACI,oCACI,yBAAK6B,GAAG,mBAAmBR,UAAU,oBACjC,kBAAC,EAAD,CAAQwE,SAAU7F,EAAM6F,WACxB,kBAAC,GAAD,W,UCHVuH,G,2MAUFC,iBAAmB,WACfzR,EAAWY,eAAe,EAAKwD,MAAMhD,OAAO6E,K,mFAT3B,IAAD,OAChBjG,EAAWiB,YAAYkE,KAAKf,MAAMsN,MAAMC,OAAO1L,IAC1CO,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF,EAAK2B,MAAMgG,SAAS,CAAC8C,KAAM,cAAe9L,OAAQqB,S,+BAQpD,IAAD,OACL,OACI,yBAAKgD,UAAU,eACX,yBAAKA,UAAU,iBACX,4BAAKN,KAAKf,MAAMhD,OAAOsE,OAErBP,KAAKf,MAAMrD,QAAU,kBAAC6Q,GAAA,EAAD,KAC3B,kBAAC,IAAD,CAAQhM,QAAS,kBAAM,EAAKxB,MAAMgG,SAAS,CAAC8C,KAAM,mBAAoBI,UAAW,aAAjF,UAGA,kBAAC,IAAD,CAAQ1H,QAAS,kBAAM,EAAKxB,MAAMgG,SAAS,CAAC8C,KAAM,mBAAoBI,UAAW,aAAjF,UAMCnI,KAAKf,MAAMrD,SAAWoE,KAAKf,MAAMmN,MAAQ,kBAAC,IAAD,CAAQ3L,QAAS,kBAAM,EAAKxB,MAAMgG,SAAS,CAAC8C,KAAM,mBAAoBI,UAAW,eAAjF,YAE9B,IACC,IAEb,kBAAC,GAAD,CACIrD,SAAU9E,KAAKf,MAAMsN,MAAMC,OAAO1L,U,GApC7BhB,IAAMM,WAkDhBmC,gBARS,SAACnB,GACrB,MAAO,CACHxF,QAASwF,EAAMxF,QACfK,OAAQmF,EAAMnF,OACdmQ,MAAOhL,EAAMgL,SAIN7J,CAAyB8J,I,iDCpDlCK,G,YACF,WAAYzN,GAAQ,IAAD,8BACf,4CAAMA,KAeV0N,qBAAuB,SAAC9K,GACpBA,EAAM+K,UACN,EAAKrL,UAAS,SAAAC,GACV,MAAO,CACHqL,OAAO,eACArL,EAAUqL,OADX,eAEDhL,EAAMC,OAAOhB,GAAKe,EAAMC,OAAOC,aAtB7B,EA4BnB+K,oBAAsB,SAACjL,GACnB,EAAKN,SAAS,CACVwL,MAAM,eACK,EAAK3L,MAAM2L,MADjB,eAEIlL,EAAMC,OAAOhB,GAAKe,EAAMC,OAAOC,WAhC7B,EAqCnBiL,iBAAmB,WACfnS,EAASI,UAAU,EAAKmG,MAAM2L,OACzB1L,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,KAAK,EAAK4L,gBAxCA,EA2CnBC,kBAAoB,WAChBrS,EAASW,WAAW,EAAK4F,MAAMyL,QAC1BxL,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,KAAK,EAAK4L,gBA9CA,EAiDnBA,cAAgB,SAAC3P,GACZA,EAAK6P,MAKN,EAAK5L,SAAS,CACV6L,QAAS9P,EAAK6P,SALlB,EAAKlO,MAAMoO,cACXrS,aAAasS,QAAQ,KAAMhQ,EAAKwD,IAChC,EAAK7B,MAAMgG,SAAS,CAAC8C,KAAM,QAASnM,QAAS0B,EAAKwD,OAnDlD,EAAKM,MAAO,CACR2L,MAAO,CACHQ,MAAO,GACPC,SAAU,IAEdX,OAAQ,CACJU,MAAO,GACPvM,KAAM,GACNwM,SAAU,IAEdJ,QAAS,IAZE,E,sEA+Df,OACI,kBAACK,GAAA,EAAD,CAAOC,KAAM1N,KAAKf,MAAM0O,MAAOC,oBAAoB,EAAMC,QAAS7N,KAAKf,MAAMoO,YAAaS,KAAK,SAC3F,kBAACL,GAAA,EAAMM,OAAP,KAAc,kBAACC,GAAA,EAAD,CAAMhN,KAAK,QAAQP,QAAST,KAAKf,MAAMoO,cAArD,kBACA,kBAACI,GAAA,EAAMQ,QAAP,CAAeC,OAAK,GACpB,kBAACT,GAAA,EAAMU,YAAP,KACI,wBAAIC,MAAO,CAACnF,MAAO,QAASjJ,KAAKoB,MAAMgM,SACvC,kBAACnL,EAAA,EAAD,CAAMC,SAAUlC,KAAK8M,oBAAqBjM,IAAI,SAC1C,kBAACoB,EAAA,EAAKG,MAAN,KACI,wCACA,2BAAOiM,YAAY,QAAQvN,GAAG,WAElC,kBAACmB,EAAA,EAAKG,MAAN,KACI,2CACA,2BAAO2F,KAAK,WAAWsG,YAAY,WAAWvN,GAAG,cAErD,kBAACmB,EAAA,EAAKI,OAAN,CAAa5B,QAAST,KAAKgN,iBAAkB1M,UAAU,QAAQgO,OAAO,EAAMrF,MAAM,SAAlF,UAEJ,kBAAC,KAAD,CAASsF,YAAU,GAAnB,MACA,kBAACR,GAAA,EAAD,gBACA,kBAAC9L,EAAA,EAAD,CAAMC,SAAUlC,KAAK2M,qBAAsB9L,IAAI,UAC/C,kBAACoB,EAAA,EAAKG,MAAN,KACQ,uCACA,2BAAOiM,YAAY,OAAOvN,GAAG,UAErC,kBAACmB,EAAA,EAAKG,MAAN,KACQ,wCACA,2BAAOiM,YAAY,QAAQvN,GAAG,WAElC,kBAACmB,EAAA,EAAKG,MAAN,KACI,2CACA,2BAAO2F,KAAK,WAAWsG,YAAY,WAAWvN,GAAG,cAErD,kBAACmB,EAAA,EAAKI,OAAN,CAAa/B,UAAU,QAAQG,QAAST,KAAKkN,kBAAmBoB,OAAO,EAAMrF,MAAM,UAAnF,mB,GAhGCnJ,IAAMM,WAyGhBmC,iBAAUmK,IC7FV8B,GAfC,WAEZ,OACI,oCACA,yBAAKlO,UAAU,cACX,yBAAKA,UAAU,eACX,kD,qBCwBDmO,GA5BD,WAEV,OACI,yBAAKnO,UAAU,mBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OAAOoO,IAAKR,KAAOS,IAAI,WACtC,yBAAKrO,UAAU,SACX,yBAAKA,UAAU,QACX,+CACoB,6BAAK,0DAEzB,iZAIJ,yBAAKA,UAAU,SACX,gCACI,kBAAC,IAAD,CAAMsO,OAAK,EAAC7N,GAAG,aACP,iDCerB8N,I,OAhCkB,SAAA5P,GAoB7B,OACI,oCACI,gDACA,yBAAKqB,UAAU,gBACX,4BAbDrB,EAAM0B,SAASC,KAAI,SAAA3E,GACtB,OACI,4BACI,kBAAC,EAAD,CAAYA,OAAQA,EAAQuE,OAAQ,kBAZ9BM,EAYiD7E,EAAO6E,QAX1EjG,EAAWwB,aAAayE,GACHO,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF2B,EAAM6P,mBAAmBhO,MAJhC,IAACA,cCkDXiO,G,YAnDX,WAAY9P,GAAQ,IAAD,8BACf,4CAAMA,KAOV6P,mBAAqB,SAAChO,GAClBY,QAAQC,IAAIb,GACZ,EAAKS,SAAS,CACVrG,KAAK,eACE,EAAKkG,MAAMlG,KADd,CAEA8T,SAAU,EAAK5N,MAAMlG,KAAK8T,SAASC,QAAO,SAAChT,GAAD,OAAYA,EAAO6E,KAAOA,UAX5E,EAAKM,MAAQ,CACTlG,KAAM,GACN4K,SAAU,YAJC,E,iFAkBE,IAAD,OAChBjL,EAASC,UACJuG,MAAK,SAAAC,GAAI,OAAIA,EAAKhE,UAClB+D,MAAK,SAAA/D,GACF,EAAKiE,SAAS,CACVrG,KAAMoC,S,+BAKZ,IAAD,EACsC0C,KAAKoB,MAAMlG,KAA/C8F,EADF,EACEA,KAAMuM,EADR,EACQA,MAAkByB,GAD1B,EACeE,UADf,EAC0BF,UAE/B,OACI,yBAAK1O,UAAU,aACX,gDAGA,sCACYiN,GAEZ,qCACWvM,GAEX,yBAAKV,UAAU,2BACT0O,EAAW,kBAAC,GAAD,CAA0BF,mBAAoB9O,KAAK8O,mBAAoBvO,MAAM,mBAAmBI,SAAUqO,EAAUG,WAAU,UZjDvI,6CYiDuI,gBAA+B,S,GA5CvKrP,IAAMM,WCgEdmC,I,OAAAA,aANS,SAACnB,GACrB,MAAO,CACHxF,QAASwF,EAAMxF,WAIR2G,EAhEA,SAAAtD,GAEX,IA2BMmQ,EAAe,WACjBpU,aAAaqU,QACbpQ,EAAMgG,SAAS,CAAC8C,KAAM,YAG1B,OACI,gCACI,yBAAKzH,UAAU,UACX,wBAAIA,UAAU,aACV,4BACI,kBAAC,IAAD,CAASsO,OAAK,EAAC7N,GAAG,KAAlB,SAIJ,4BACI,kBAAC,IAAD,CAAS6N,OAAK,EAAC7N,GAAG,aAAlB,aAIJ,iCA7CR9B,EAAMrD,QAEF,oCACI,4BACI,kBAAC,IAAD,CAASgT,OAAK,EAAC7N,GAAG,KACd,4BAAQN,QAAS2O,GAAjB,aAKR,4BACI,kBAAC,IAAD,CAASR,OAAK,EAAC7N,GAAG,SAAlB,aAQR,4BAAQN,QAAS,kBAAMxB,EAAMoO,gBAA7B,iBCuBD9K,I,OAAAA,aANS,SAAAnB,GACtB,MAAO,CACLxF,QAASwF,EAAMxF,WAIJ2G,EAtCH,SAAAtD,GAAU,IAAD,EAEMuK,oBAAS,GAFf,mBAEZmE,EAFY,KAEN2B,EAFM,KAIbjC,EAAc,kBAAMiC,GAAU3B,IAElC,OACI,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEA,MAAOA,EACPN,YAAaA,IAEf,kBAAC,GAAD,CACEA,YAAaA,IAEf,kBAAC,KAAD,CAAOuB,OAAK,EAACW,KAAK,IAAIC,OAAQ,WAC5B,OAAQ,oCACN,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGJ,kBAAC,KAAD,CAAOD,KAAK,SACTtQ,EAAMrD,QAAU,kBAAC,GAAD,MAAe,kBAAC,KAAD,CAAUmF,GAAG,OAE/C,kBAAC,KAAD,CAAO6N,OAAK,EAACW,KAAK,YAAYC,OAAQ,SAAAC,GAAW,OAAI,kBAAC,EAAkBA,MACxE,kBAAC,KAAD,CAAOb,OAAK,EAACW,KAAK,gBAAgBC,OAAQ,SAAAC,GAAW,OACnD,kBAAC,GAAeA,WC1BRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2D,cClBAuD,GAAe,CACjBlU,QAASZ,aAAY,GACrBiB,OAAQ,GACRiM,aAAc,GACd8D,SAAU,GACV/D,aAAc,GACdgE,SAAU,GACVnG,SAAU,GACVsG,MAAO,ICCX,IAAM2D,GAAQC,cDEC,WAAsD,IAA/B5O,EAA8B,uDAAtB0O,GAAcG,EAAQ,uCAEhE,OAAOA,EAAOlI,MACV,IAAK,QACD,OAAO,eACA3G,EADP,CAEIxF,QAASqU,EAAOrU,QAChBoQ,SAAU5K,EAAM8G,aAAa+G,QAAO,SAAA9G,GAAS,OAAIA,EAAUvM,SAAWZ,aAAY,MAClFiR,SAAU7K,EAAM6G,aAAagH,QAAO,SAAA9G,GAAS,OAAIA,EAAUvM,SAAWZ,aAAY,QAE1F,IAAK,SACD,OAAO,eACAoG,EADP,CAEIxF,SAAS,EACToQ,SAAU,GACVC,SAAU,KAElB,IAAK,cACD,OAAO,eACA7K,EADP,CAEInF,OAAQgU,EAAOhU,OACfiM,aAAc+H,EAAOhU,OAAOiU,YAC5BjI,aAAcgI,EAAOhU,OAAOsD,UAC5ByM,SAAUiE,EAAOhU,OAAOiU,YAAYjB,QAAO,SAAA9G,GAAS,OAAIA,EAAUvM,SAAWZ,aAAY,MACzFiR,SAAUgE,EAAOhU,OAAOsD,UAAU0P,QAAO,SAAA9G,GAAS,OAAIA,EAAUvM,SAAWZ,aAAY,MACvFoR,MAAO6D,EAAOhU,OAAOf,KAAK4F,KAElC,IAAK,eACD,OAAO,eACAM,EADP,CAEInF,OAAQgU,EAAOhU,OAAOC,UAE9B,IAAK,iBACD,OAAO,eACAkF,EADP,CAEI4K,SAAS,GAAD,mBAAM5K,EAAM4K,UAAZ,CAAsBiE,EAAO9H,cAE7C,IAAK,kBACD,IAAM6D,EAAW5K,EAAM4K,SAASpL,KAAI,SAAAuH,GAChC,OAAIA,EAAUrH,KAAOmP,EAAO9H,UAAUrH,GAC3BmP,EAAO9H,UAEPA,KAGf,OAAO,eACA/G,EADP,CAEI4K,SAAS,YAAKA,KAEtB,IAAK,oBACD,OAAO,eACA5K,EADP,CAEI4K,SAAU5K,EAAM4K,SAASiD,QAAO,SAAA9G,GAAS,OAAIA,EAAUrH,KAAOmP,EAAOE,kBAE7E,IAAK,iBACD,OAAO,eACA/O,EADP,CAEI6K,SAAS,GAAD,mBAAM7K,EAAM6K,UAAZ,CAAsBgE,EAAO9H,cAE7C,IAAK,kBACD,IAAM8D,EAAW7K,EAAM6K,SAASrL,KAAI,SAAAuH,GAChC,OAAIA,EAAUrH,KAAOmP,EAAO9H,UAAUrH,GAC3BmP,EAAO9H,UAEPA,KAEf,OAAO,eACA/G,EADP,CAEI6K,SAAS,YAAKA,KAEtB,IAAK,oBACD,OAAO,eACA7K,EADP,CAEI6K,SAAS,YAAK7K,EAAM6K,SAASgD,QAAO,SAAA9G,GAAS,OAAIA,EAAUrH,KAAOmP,EAAOE,mBAEjF,IAAK,qBACD,OAAO,eACA/O,EADP,CAEI6G,aAAa,GAAD,mBAAM7G,EAAM6G,cAAZ,CAA0BgI,EAAO9H,UAAUkD,aAE/D,IAAK,sBACD,IAAMpD,EAAe7G,EAAM6G,aAAarH,KAAI,SAAAuH,GACxC,OAAIA,EAAUrH,KAAOmP,EAAO9H,UAAUkD,SAASvK,GACpCmP,EAAO9H,UAAUkD,SAEjBlD,KAGf,OAAO,eACA/G,EADP,CAEI6G,aAAa,YAAKA,KAE1B,IAAK,uBACD,OAAO,eACA7G,EADP,CAEI6G,aAAa,YAAK7G,EAAM6G,aAAagH,QAAO,SAAA9G,GAAS,OAAIA,EAAUrH,KAAOmP,EAAOE,mBAEzF,IAAK,qBACD,OAAO,eACA/O,EADP,CAEI8G,aAAa,GAAD,mBAAM9G,EAAM8G,cAAZ,CAA0B+H,EAAO9H,UAAUuB,eAE/D,IAAK,sBAED,IAAMxB,EAAe9G,EAAM8G,aAAatH,KAAI,SAAAuH,GACxC,OAAIA,EAAUrH,KAAOmP,EAAO9H,UAAUuB,WAAW5I,GACtCmP,EAAO9H,UAAUuB,WAEjBvB,KAGf,OAAO,eACA/G,EADP,CAEI8G,aAAa,YAAKA,KAE1B,IAAK,uBACD,OAAO,eACA9G,EADP,CAEI8G,aAAa,YAAK9G,EAAM8G,aAAa+G,QAAO,SAAA9G,GAAS,OAAIA,EAAUrH,KAAOmP,EAAOE,mBAEzF,IAAK,mBACD,OAAO,eACA/O,EADP,CAEI0E,SAAUmK,EAAO9H,YAEzB,IAAK,gBACD,OAAO,eACA/G,EADP,CAEInF,OAAQ,GACRmU,aAAc,GACdC,iBAAkB,GAClBvK,SAAU,GACVsG,MAAO,KAEf,QAAS,OAAOhL,KCxIiBuO,OAAOW,8BAAgCX,OAAOW,gCAEvFC,IAASf,OAAO,kBAAC,IAAD,CAAUO,MAAOA,IACb,kBAAC,GAAD,OAEhBxH,SAASC,eAAe,SFqHtB,kBAAmBgI,WACrBA,UAAUC,cAAcC,MAAMrP,MAAK,SAAAsP,GACjCA,EAAaC,kB","file":"static/js/main.5be665b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/folds.bc4e5cac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lights.a713bd66.jpg\";","\n//Production\nexport const API_ROOT = 'https://intense-harbor-90528.herokuapp.com';\n\n//Development\n// export const API_ROOT = 'http://localhost:3000'\nexport const API_WS_ROOT = 'wss://intense-harbor-90528.herokuapp.com/cable';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nconst getUser = () => fetch(`${API_ROOT}/users/${localStorage[\"id\"]}`)\n\nconst userLogin = (user) => {\n    return fetch(`${API_ROOT}/users/login`, {\n    method: \"POST\",\n    headers: HEADERS,\n    body: JSON.stringify({user: user})\n  })\n}\n\nconst userCreate = (user) => {\n    return fetch(`${API_ROOT}/users`, {\n    method: \"POST\",\n    headers: HEADERS,\n    body: JSON.stringify({user: user})\n  })\n}\n\nconst bookmarkCanvas = (canvasId) => {\n    return fetch(`${API_ROOT}/users/${localStorage[\"id\"]}/bookmarks`, {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify({\n            bookmark: {\n                user_id: localStorage[\"id\"],\n                picture_id: canvasId\n            }\n        })\n    })\n}\n\nconst fetchCanvas = (canvasId) => fetch(`${API_ROOT}/pictures/${canvasId}`)\n\nconst fetchCanvases = () => fetch(`${API_ROOT}/pictures`)\n\nconst newCanvas = (canvas) => {\n    return fetch(`${API_ROOT}/pictures`, {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({picture: canvas})\n    })\n}\n\nconst editCanvas = (canvasId, data) => {\n    return fetch(`${API_ROOT}/pictures/${canvasId}`, {\n        method: \"PATCH\",\n        headers: HEADERS,\n        body: JSON.stringify(data)\n    })\n}\n\nconst deleteCanvas = (canvasId) => {\n    return fetch(`${API_ROOT}/pictures/${canvasId}`, {\n        method: 'DELETE',\n        headers: HEADERS\n    })\n}\nconst newAnimation = (modelName, canvasId) => {\n    return fetch(`${API_ROOT}/${modelName}s`, {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify({\n            [`${modelName}`]: {\n                user_id: localStorage[\"id\"],\n                picture_id: canvasId,\n            }\n        })\n    })\n}\n\nconst editP5 = (shapeId, data) => {\n    return fetch(`${API_ROOT}/p5_shapes/${shapeId}`, {\n        method: \"PATCH\",\n        headers: HEADERS,\n        body: JSON.stringify(data)}\n    )\n}\n\nconst deleteP5 = (shapeId) => {\n    return fetch(`${API_ROOT}/p5_shapes/${shapeId}`, {\n        method: \"DELETE\",\n        headers: HEADERS\n    })\n}\n\nconst editMojs = (burstId, data) => {\n    return fetch(`${API_ROOT}/animate_mos/${burstId}`, {\n        method: \"PATCH\",\n        headers: HEADERS,\n        body: JSON.stringify(data)})\n}\n\nconst deleteMojs = (burstId) => {\n    return fetch(`${API_ROOT}/animate_mos/${burstId}`, {\n        method: \"DELETE\",\n        headers: HEADERS\n    })\n}\nexport const api = {\n    user: {\n        getUser,\n        userLogin,\n        userCreate\n    },\n    canvas: {\n        bookmarkCanvas,\n        fetchCanvas,\n        fetchCanvases,\n        newCanvas,\n        editCanvas,\n        deleteCanvas\n    },\n    animation: {\n        newAnimation,\n    },\n    p5: {\n        editP5,\n        deleteP5\n    },\n    mojs: {\n        editMojs,\n        deleteMojs\n    }\n}","class P5ReactAdapter {\n\n    // Frequency takes in either 'treble', 'bass', or 'mid' as strings and the frequencyMapping parameter is supposed to be assigned the corresponding frequency mapping to sync with the music\n    static readFrequencyShapes(array, frequency, frequencyMapping, p5) {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i].frequency === frequency) {\n                    P5ReactAdapter.readJsonShape(array[i], frequencyMapping, p5)\n            }\n        }\n    }\n\n    static readJsonShape(json, frequencyMapping, p) {\n        p.push()\n\n        p.fill(`rgb(${json.fill})`)\n        p.stroke(`rgb(${json.stroke})`)\n\n        const {width, height, amount, spin, orbit, shape, stagger_radius, stagger_place } = json\n        const radius = frequencyMapping + stagger_radius\n        p.rotate(orbit * p.frameCount/10)\n        switch (shape) {\n            case \"rect\":\n                //This will allow the shape to rotate around its own axis\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount) * i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.rectMode(p.CENTER)\n                            p.rect(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"ellipse\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.ellipseMode(p.CENTER)\n                            p.ellipse(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"triangle\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            const center = 2 * height/3\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.triangle(0, -center, width, height, -width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"line\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.line(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            default:\n        }\n        p.pop()\n    }\n}\n\nexport default P5ReactAdapter","import React from 'react'\nimport p5 from 'p5'\nimport P5ReactAdapter from \"../../constants/P5ReactAdapter\"\n\nclass CanvasImg extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    sketch = (p) => {\n        const { background, mid_mapping_1, treble_mapping_1, bass_mapping_1, p5_shapes } = this.props.canvas\n        p.setup = () => {\n            p.angleMode(p.DEGREES)\n            p.createCanvas(300,150)\n            p.background(`rgb(${background})`)\n            p.translate(p.width / 2, p.height / 2);\n            P5ReactAdapter.readFrequencyShapes(p5_shapes, \"treble\", treble_mapping_1, p)\n            P5ReactAdapter.readFrequencyShapes(p5_shapes, \"mid\", mid_mapping_1, p)\n            P5ReactAdapter.readFrequencyShapes(p5_shapes, \"bass\", bass_mapping_1, p)\n        }\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5 (this.sketch, this.myRef.current)\n    }\n\n    render() {\n        return (\n        <div ref={this.myRef}>\n        </div>\n        )\n    }\n}\n\nexport default CanvasImg","import React from 'react'\nimport CanvasImg from './CanvasImg'\nimport \"./styles/CanvasCard.scss\"\n\nconst CanvasCard = props => {\n    return (\n        <div className=\"canvas-card\">\n            <CanvasImg canvas={props.canvas} />\n           \n            <h4>{props.canvas.title}</h4>\n            {props.delete ? <button onClick={props.delete}>Delete</button> : <p>By: {props.user}</p>}\n        </div>\n    )\n}\n\nexport default CanvasCard","import React from 'react';\nimport CanvasCard from '../components/presentational/CanvasCard'\nimport { Link } from 'react-router-dom';\n\nconst DisplayCanvases = (props) => {\n    const renderCanvases = () => {\n        if (props.canvases && props.canvases.length > 0) {\n            return props.canvases.map(canvas => {\n                return (\n                    <li key={canvas.id}>\n                        <Link key={canvas.id} to={`/canvases/${canvas.id}`} >\n                            <CanvasCard canvas={canvas} user={canvas.user ? canvas.user.name : \"\"} />\n                        </Link>\n                    </li>\n                )\n            })\n        }\n    }\n\n    return (\n        <ul>\n            {props.title ? <h3>{props.title}</h3> : \"\"}\n            {renderCanvases()}\n        </ul>\n    )\n}\n\nexport default DisplayCanvases","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Form } from 'semantic-ui-react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { api } from '../services/api'\nimport DisplayCanvases from './DisplayCanvases';\nimport \"./styles/CanvasesContainer.scss\"\n\nclass CanvasesContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            canvases: [],\n            newCanvas: {\n                title: \"\",\n                user_id: this.props.user_id\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({loading: true}, () => {\n            api.canvas.fetchCanvases()\n                .then(resp => resp.json())\n                .then(json => {\n                    this.setState({\n                        canvases: json,\n                        loading: false\n                    })\n                })\n        })\n    }\n\n    handleNewCanvas = () => {\n        if (this.props.user_id) {\n            api.canvas.newCanvas(this.state.newCanvas)\n                .then(resp => resp.json())\n                .then(json => {\n                    this.props.handleNewCanvas(json)\n                    this.setState(prevState => {\n                        return {\n                            canvases: [...prevState.canvases, json]\n                        }\n                    })\n                })\n                .catch(console.log)\n        }\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            newCanvas: {\n                ...this.state.newCanvas,\n                [event.target.id]: event.target.value\n            }\n        })\n    }\n    \n    render() {\n        return (\n            <>\n                <div className=\"canvas-form\">\n                    <h3>Create Your Own</h3>\n                    {this.props.user_id ? <Form onChange={this.handleOnChange}>\n                        <label>Name</label><br/>\n                        <Form.Group >\n                            <Form.Field >\n                                <input value={this.state.newCanvas.title} id=\"title\"/>\n                            </Form.Field>\n                            <Button onClick={() => this.handleNewCanvas()}>New Canvas</Button>\n                        </Form.Group>\n                    </Form> : <h4>Must login or create a profile to create a canvas</h4>}\n                </div>\n                <h3>Active Canvases</h3>\n                <div id='divider'/>\n                <div className=\"canvas-list\">\n                    {this.state.loading ? <CircularProgress /> : \"\"}\n                    <DisplayCanvases canvases={this.state.canvases} />\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.user_id\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasesContainer)\n\n","import React from 'react';\nimport CanvasesContainer from './containers/CanvasesContainer'\n\nconst CanvasesIndex = props => {\n\n    const handleNewCanvas = (canvas) => {\n        props.history.push(`/canvases/${canvas.id}`)\n    }\n\n    return (\n        <div className=\"canvases-index\" >\n            <CanvasesContainer handleNewCanvas={handleNewCanvas}/>\n        </div>\n    )\n    \n}\n\nexport default CanvasesIndex","const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: \"virtual-canvas.firebaseapp.com\",\n    databaseURL: \"https://virtual-canvas.firebaseio.com\",\n    projectId: \"virtual-canvas\",\n    storageBucket: \"virtual-canvas.appspot.com\",\n    messagingSenderId: \"331574050775\",\n    appId: \"1:331574050775:web:199288fb0d1e763ed81592\",\n    measurementId: \"G-KHGVVPE55P\"\n  };\n\nexport default firebaseConfig","import React from 'react';\nimport mojs from 'mo-js';\nimport { connect } from 'react-redux'\nimport folds from '../folds.mp3'\nimport p5 from 'p5';\nimport \"p5/lib/addons/p5.sound\";\nimport P5ReactAdapter from '../constants/P5ReactAdapter'\nimport { API_WS_ROOT } from '../constants/index'\nimport firebaseConfig from \"../constants/firbaseConfig\"\nimport firebase from 'firebase'\nconst actioncable = require(\"actioncable\")\n\nfirebase.initializeApp(firebaseConfig)\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.state = {\n            connected: false\n        }\n    }\n\n    toggleConnection = () => {\n        this.setState({connected: !this.state.connected})\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5 (this.sketch, this.myRef.current)\n        this.cable = actioncable.createConsumer(API_WS_ROOT)\n    }\n\n    sketch = (p) => {\n        let fft, analyzer\n\n        p.preload = () => {\n            this.song = p.loadSound(folds)\n        }\n      \n        p.setup = () => {\n            p.createCanvas(600, 600);\n        \n            this.toggleBtn = p.createButton(\"Play / Pause\")\n        \n            this.uploadBtn = p.createFileInput(p.uploaded)\n        \n            this.uploadBtn.addClass(\"upload-btn\")\n        \n            this.toggleBtn.addClass(\"toggle-btn\");\n        \n            this.toggleBtn.mousePressed(p.toggleAudio);\n\n            this.canvasChannel = this.cable.subscriptions.create({\n                channel: `PicturesChannel`, \n                id: this.props.paramsId\n            },{\n                connected: () => {\n                    console.log(\"connected!\")\n                    this.toggleConnection()\n                },\n                disconnected: () => this.toggleConnection(),\n                received: data => {\n                    if ('type' in data) {\n                        this.props.dispatch(data)\n                    // } else if ('draw' in data) {\n                    //     p.newDrawing(data.draw.x, data.draw.y)\n                    } else {\n                        this.handleRecievedBurst(data)\n                    } \n            }})\n            analyzer = new p5.Amplitude();\n            fft = new p5.FFT();\n      \n            p.angleMode(p.DEGREES)\n        };\n\n        p.newDrawing = (x,y) => {\n            p.noStroke()\n            p.fill(250)\n            p.ellipse(x, y, 5,5);\n        }\n      \n        p.uploaded = file => {\n            this.uploadLoading = true;\n            // console.log(file)\n            // const musicRef = firebase.storage().ref(`/music/canvas-${this.props.canvas.id}/${file.file.name}`)\n            // console.log(musicRef)\n            // musicRef.put(file.file).then(() => {\n            //     const storageRef = firebase.storage().ref(`/music/canvas-${this.props.canvas.id}`)\n            //     storageRef.child(file.file.name).getMetadata()\n            //         .then((metaData) => {\n            //             let url = metaData.downloadURLs\n            //             console.log(metaData.fullPath)\n            //         })\n            //     })\n            this.uploadedAudio = p.loadSound(file.data, p.uploadedAudioPlay);\n        }\n\n        // p.mouseDragged = () => {\n            // if (this.props.selected === \"paint\") {\n            //     this.canvasChannel.send({\n            //         canvas_id: this.props.paramsId,\n            //         draw: {\n            //             x: p.mouseX,\n            //             y: p.mouseY\n            //         }\n            //     })\n            // }\n        // }\n\n        p.mouseClicked = () => {\n            if (this.props.selected === \"bursts\") {\n                if (p.mouseX * p.mouseY > 0 && p.mouseX < 600 && p.mouseY < 600) {\n                    this.canvasChannel.send({\n                        canvas_id: this.props.paramsId,\n                        burst: {\n                            user_id: localStorage[\"id\"],\n                            tune : {\n                                x: p.winMouseX,\n                                y: p.winMouseY\n                            }\n                        }\n                    })\n                }\n            }\n        }\n      \n        p.uploadedAudioPlay = (file) => {\n            this.uploading = false;\n        \n            if (this.song.isPlaying()) {\n                this.song.pause()\n            }\n            \n            this.song = file\n\n            this.song.play() \n        }\n      \n        p.toggleAudio = () => {\n            if (this.song.isPlaying()) {\n            this.song.pause();\n            } else {\n            this.song.play();\n            }\n        }\n      \n        p.draw = () => {\n            const { background, mid_mapping_1, mid_mapping_2, treble_mapping_1, treble_mapping_2, bass_mapping_1, bass_mapping_2} = this.props.canvas\n    \n            p.background(`rgb(${background})`);\n\n            p.translate(p.width / 2, p.height / 2);\n\n            p.level = analyzer.getLevel();\n            fft.analyze();\n\n            var bass = fft.getEnergy('bass');\n            var treble = fft.getEnergy('treble');\n            var mid = fft.getEnergy(\"mid\");\n\n            var mapMid = p.map(mid, 0, 255, mid_mapping_1, mid_mapping_2);\n            var mapTreble = p.map(treble, 0, 255, treble_mapping_1, treble_mapping_2);\n            var mapBass = p.map(bass, 0, 255, bass_mapping_1, bass_mapping_2);\n\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"treble\", mapTreble, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"mid\", mapMid, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"bass\", mapBass, p)\n        };\n    }\n\n    componentWillUnmount() {\n        this.cable.disconnect()\n        this.props.dispatch({type: \"REMOVE_CANVAS\"})\n        this.song.pause()\n    }\n\n    handleRecievedBurst = response => {\n        const {user_id, tune} = response.burst\n        const { bursts } = this.props\n        console.log(user_id, tune)\n        for (let i = 0; i < bursts.length; i++) {\n            if (bursts[i].user_id == user_id) {\n                bursts[i].burst.tune(tune).replay()\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"canvas\" className=\"canvas\" onClick={this.handleClick} ref={this.myRef}>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.user_id,\n        canvas: state.canvas,\n        selected: state.selected,\n        shapes: state.canvasShapes,\n        bursts: state.canvasBursts ? state.canvasBursts.map(animation => {\n            return {\n                user_id: animation.user_id,\n                burst: new mojs.Burst({\n                    parent: document.getElementById(\"canvas\"),\n                    left: 0, top: 0,\n                    count: animation.count,\n                    angle: {0: animation.angle},\n                    radius: {[animation.radius_1]: animation.radius_2},\n                    children: {\n                        shape: animation.shape,\n                        fill:    animation.color,\n                        radius:     20,\n                        strokeWidth: animation.stroke_width,\n                        duration:   animation.duration*100\n                    }\n                })\n            }\n        }) : []\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas)\n\n","export const API_ROOT = 'https://intense-harbor-90528.herokuapp.com';\nexport const API_WS_ROOT = 'wss://intense-harbor-90528.herokuapp.com/cable';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\n\n// 'http://localhost:3000'","import React from 'react'\n\n\nconst PaintEdit = props => {\n\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default PaintEdit","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { api } from '../../services/api';\nimport { Slider, Button, Typography, FormControl, MenuItem, Select, Divider } from '@material-ui/core';\n\nconst BurstEdit = props => {\n\n    useEffect(() => {\n        if (props.animation.id !== burst.id) {\n            setBurst({\n                ...props.animation\n            })\n        }\n    })\n  \n    const [burst, setBurst] = useState({...props.animation})\n\n    const handleInputChange = (name, value) => {\n        setBurst({\n                ...burst, \n                [name]: value\n            })\n    }\n\n    const handleSubmit = () => {\n        api.mojs.deleteMojs(props.animation.id,{\n                animate_mo: {\n                    ...burst\n                }\n            }\n        )\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_BURST\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        api.mojs.deleteMojs(props.animation.id)\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n    \n    return (\n        <>\n        <div className=\"tool-burst\">\n            <div className=\"burst1\">\n            <h3>Burst</h3>\n            <Button onClick={handleSubmit}>Save Burst</Button>\n            <Button onClick={handleDelete}>Delete Burst</Button>\n            <div>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        value={burst.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"circle\" >Circle</MenuItem>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"polygon\" >Polygon</MenuItem>\n                        <MenuItem value=\"zigzag\" >Zigzag</MenuItem>\n                        <MenuItem value=\"curve\" >Curve</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"color-select\"\n                        id=\"color\"\n                        name=\"color\"\n                        value={burst.color} \n                        onChange={(e,v) => handleInputChange(\"color\", e.target.value)}>\n                        <MenuItem value=\"red\" >Red</MenuItem>\n                        <MenuItem value=\"yellow\" >Yellow</MenuItem>\n                        <MenuItem value=\"pink\" >Pink</MenuItem>\n                        <MenuItem value=\"blue\" >Blue</MenuItem>\n                        <MenuItem value=\"cyan\" >Cyan</MenuItem>\n                        <MenuItem value=\"magenta\">Magenta</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n                <div className=\"burst2\">\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 1\n                    </Typography>\n                    <Slider\n                        name=\"radius_1\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_1\"]}\n                        label=\"Radius 1\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_1\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 2\n                    </Typography>\n                    <Slider \n                        name=\"radius_2\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_2\"]}\n                        label=\"Radius 2\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_2\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Count\n                    </Typography>\n                    <Slider \n                        name=\"count\"\n                        orientation=\"vertical\"\n                        value={burst.count}\n                        label=\"Count\"\n                        max={20}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"count\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Duration\n                    </Typography>\n                    <Slider \n                        name=\"duration\"\n                        value={burst.duration}\n                        orientation=\"vertical\"\n                        label=\"Duration\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"duration\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Angle\n                    </Typography>\n                    <Slider \n                        name=\"angle\"\n                        orientation=\"vertical\"\n                        value={burst.angle}\n                        label=\"Angle\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"angle\", v)} />\n                </div>\n            </div>\n        </div>\n        <Divider />\n    </>\n    )\n}\n\n\n\nexport default connect()(BurstEdit)","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Button, FormControl, MenuItem, Select, Typography, Divider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\nimport { api } from '../../services/api';\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\nconst ShapeEdit = props => {\n\n    useEffect(() => {\n        if (props.shape.id !== shape.id) {\n            setShape({\n                ...props.shape,\n                fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n                stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n            })\n        }\n    })\n\n    const [shape, setShape] = useState({\n        ...props.shape,\n        fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n        stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n    })\n\n    const handleSubmit = () => {\n        api.p5.editP5(props.shape.id, {\n            p5_shape: {\n                ...shape,\n                stroke: shape.stroke.join(','),\n                fill: shape.fill.join(',')\n            }\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_SHAPE\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        api.p5.deleteP5(props.shape.id)\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n\n    const handleInputChange = (name, value) => {\n        setShape({\n                ...shape, \n                [name]: value\n            })\n    }\n\n    const handleColorChange = (id, name, value) => {\n        setShape({\n            ...shape,\n            [name]: [...shape[name].slice(0,id), value, ...shape[name].slice(id + 1)]\n        })\n    }\n\n    return (\n        <>\n        <div className=\"tool-header\">\n            <Button onClick={handleSubmit}>Save Shape</Button>\n            <Button onClick={handleDelete}>Delete Shape</Button>\n        </div>\n        <div className=\"tool\" >\n            <div className=\"toolbox1\">\n                <FormControl>\n                    <Select \n                        labelId=\"frequency-select\"\n                        id=\"frequency\"\n                        name=\"frequency\"\n                        defaultValue={\"\"}\n                        value={shape.frequency} \n                        onChange={(e,v) => handleInputChange(\"frequency\", e.target.value)}>\n                        <MenuItem value=\"treble\" >Treble</MenuItem>\n                        <MenuItem value=\"mid\" >Mid</MenuItem>\n                        <MenuItem value=\"bass\" >Bass</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        defaultValue={\"\"}\n                        value={shape.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"ellipse\" >Ellipse</MenuItem>\n                        <MenuItem value=\"triangle\" >Triangle</MenuItem>\n                        <MenuItem value=\"line\" >Line</MenuItem>\n                    </Select>\n                </FormControl>\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Radius \n                </Typography>\n                <Slider \n                    name=\"stagger_radius\"\n                    label=\"stagger_radius\"\n                    min={-20}\n                    max={20}\n                    value={shape[\"stagger_radius\"]}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_radius\", v)} />\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Place\n                </Typography>\n                <Slider \n                    name=\"stagger_place\"\n                    label=\"stagger_place\"\n                    min={-20}\n                    max={20}\n                    value={shape['stagger_place']}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_place\", v)} />\n            </div>\n            <div className=\"toolbox2\">\n                        <Typography id=\"slider\" gutterBottom>\n                            Fill Color\n                        </Typography>\n                    <RedSlider \n                        value={shape.fill[0]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(0, \"fill\", v)} />\n                    <GreenSlider \n                        value={shape.fill[1]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(1, \"fill\", v)} />\n                    <BlueSlider \n                        value={shape.fill[2]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(2, \"fill\", v)} />\n          \n            </div>\n            <div className=\"toolbox4\">\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Width\n                        </Typography>\n                        <Slider \n                            name=\"width\"\n                            label=\"Width\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.width}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"width\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Height\n                        </Typography>\n                        <Slider \n                            name=\"height\"\n                            label=\"height\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.height}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"height\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Amount\n                        </Typography>\n                        <Slider \n                            name=\"amount\"\n                            label=\"Amount\"\n                            min={0}\n                            max={20}\n                            orientation=\"vertical\"\n                            value={shape.amount}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"amount\", v)}\n                            />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Orbit\n                        </Typography>\n                        <Slider\n                            name=\"orbit\"\n                            label=\"Orbit\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.orbit}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"orbit\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Spin\n                        </Typography>\n                        <Slider\n                            name=\"spin\"\n                            label=\"Spin\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.spin}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"spin\", v)}\n                            />\n            </div>\n            <div className=\"toolbox3\">\n                    <Typography id=\"slider\" gutterBottom>\n                            Stroke Color\n                        </Typography>\n                    <RedSlider \n                        name=\"stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[0]}\n                        min={0}\n                        max={255}\n                        aria-label=\"Stroke\"\n                        onChange={(e,v) => handleColorChange(0, \"stroke\", v)} />\n                    <GreenSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[1]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(1, \"stroke\", v)} />\n                    <BlueSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[2]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(2, \"stroke\", v)} />\n            </div>  \n            \n        </div>\n        <Divider />\n        </>\n    )\n}\n\n\nexport default connect()(ShapeEdit)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport { api } from '../../services/api';\nimport { withStyles } from '@material-ui/core/styles'\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\nconst CanvasSettings = props => {\n    const [background, setBackground] = useState([...props.canvas.background.split(',').map(num => parseInt(num))])\n    const [bass, setBass] = useState([props.canvas.bass_mapping_1, props.canvas.bass_mapping_2])\n    const [mid, setMid] = useState([props.canvas.mid_mapping_1, props.canvas.mid_mapping_2])\n    const [treble, setTreble] = useState([props.canvas.treble_mapping_1, props.canvas.treble_mapping_2])\n\n\n    const handleChange = (num,v) => {\n        setBackground([...background.slice(0,num), v, ...background.slice(num+1)])\n    }\n\n    const handleSaveCanvas = () => {\n        api.canvas.editCanvas(props.canvas.id, {\n            picture: {\n                background: background.join(','),\n                bass_mapping_1: bass[0],\n                bass_mapping_2: bass[1],\n                mid_mapping_1: mid[0],\n                mid_mapping_2: mid[1],\n                treble_mapping_1: treble[0],\n                treble_mapping_2: treble[1]\n            }\n        })\n            .then(resp => resp.json())\n            .then(json => {return })\n    }\n\n    return (\n        <>\n            <div className=\"canvas-settings\">\n                <Button onClick={handleSaveCanvas}>Save Canvas</Button>\n                <h3>Background Color</h3>\n                <RedSlider \n                    value={background[0]}\n                    min={0}\n                    max={255}\n                    lable=\"Red\" \n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleChange(0, v)} />\n                <GreenSlider \n                    value={background[1]}\n                    min={0}\n                    max={255}\n                    valueLabelDisplay='auto'\n                    label=\"Green\" \n                    onChange={(e,v) => handleChange(1, v)} />\n                <BlueSlider \n                    value={background[2]}\n                    min={0}\n                    max={255}\n                    valueLabelDisplay='auto'\n                    label=\"Blue\" \n                    onChange={(e,v) => handleChange(2, v)} />\n            </div>\n            <div className=\"canvas-settings\">\n                <h3>Frequencies </h3>\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Bass Mapping\n                </Typography>\n                <Slider\n                    name=\"bass\"\n                    value={bass}\n                    max={300}\n                    label=\"bass\"\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => setBass(v)} />\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Mid Mapping\n                </Typography>\n                <Slider\n                    name=\"mid\"\n                    value={mid}\n                    label=\"mid\"\n                    max={300}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => setMid(v)} />\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Treble Mapping\n                </Typography>\n                <Slider\n                    name=\"treble\"\n                    value={treble}\n                    label=\"treble\"\n                    max={300}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => setTreble(v)} />\n            </div>\n            <Divider />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        canvas: state.canvas\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasSettings)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport { api } from '../services/api'\nimport PaintEdit from '../components/presentational/PaintEdit'\nimport BurstEdit from '../components/presentational/BurstEdit'\nimport ShapeEdit from '../components/presentational/ShapeEdit'\nimport CanvasSettings from '../components/presentational/CanvasSettings'\n\nconst CanvasTools = (props) => {\n\n    const renderMyAnimations = () => {\n        switch (props.selected) {\n            case \"shapes\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('p5_shape')}>Create New Shape</Button>\n                        {props.myShapes ? props.myShapes.map(shape => <ShapeEdit shape={shape} />) : null}\n                    </div>\n                )\n            case \"bursts\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('animate_mo')} >Create New Burst</Button>\n                        {props.myBursts ? props.myBursts.map(animation => <BurstEdit animation={animation} />) : null}\n                    </div>\n                )\n            case \"paint\":\n                return <PaintEdit />\n            case \"settings\":\n                return (\n                    <div className='tools-container' >\n                        <CanvasSettings />\n                    </div> \n                )\n            default:\n                return <></>\n        }\n    }\n    \n    const handleNewAnimation = (modelName) => {\n        api.animation.newAnimation(modelName, props.canvas_id)\n            .then(resp => resp.json())\n            .then(json => {\n                if (modelName == 'animate_mo') {\n                    props.dispatch({type: \"HTTP_NEW_BURST\", animation: json})\n                } else {\n                    props.dispatch({type: \"HTTP_NEW_SHAPE\", animation: json})\n                }\n            })\n    }\n\n    return (\n        <>\n            {renderMyAnimations()}\n        </>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.user_id,\n        canvas_id: state.canvas.id,\n        myBursts: state.myBursts,\n        myShapes: state.myShapes,\n        selected: state.selected\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasTools)","import React from 'react';\nimport Canvas from '../components/Canvas';\nimport { connect } from 'react-redux'\nimport CanvasTools from './CanvasTools';\n\nconst CanvasShowContainer = props => {\n    return (\n        <>\n            <div id=\"canvas-container\" className=\"canvas-container\">\n                <Canvas paramsId={props.paramsId} />\n                <CanvasTools />\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShowContainer)","import React from 'react';\nimport CanvasShowContainer from './containers/CanvasShowContainer'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport { connect } from 'react-redux'\nimport { api } from './services/api'\n\nclass CanvasShow extends React.Component {\n\n    componentDidMount() {\n        api.canvas.fetchCanvas(this.props.match.params.id)\n            .then(resp => resp.json())\n            .then(json => {\n                this.props.dispatch({type: \"LOAD_CANVAS\", canvas: json})\n            })\n    }\n\n    handleSaveCanvas = () => {\n        api.canvas.bookmarkCanvas(this.props.canvas.id)\n    }\n\n    render() {\n        return (\n            <div className=\"canvas-show\">\n                <div className=\"canvas-header\">\n                    <h2>{this.props.canvas.title}</h2> \n                    {/* {localStorage[\"id\"] && !this.props.admin ? <Button onClick={this.handleSaveCanvas}>Bookmark Canvas</Button> : null} */}\n                    { this.props.user_id ? <ButtonGroup >\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"shapes\"})}>\n                    Shapes\n                </Button>\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"bursts\"})}>\n                    Bursts\n                </Button>\n                {/* <Button onClick={() => props.dispatch({type: 'SELECT_ANIMATION', animation: \"paint\"})}>\n                    Paint\n                </Button>  */}\n                {this.props.user_id == this.props.admin ? <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"settings\"})}>\n                    Settings\n                </Button> : \"\"}\n            </ButtonGroup> : \"\" }\n                </div>\n                <CanvasShowContainer \n                    paramsId={this.props.match.params.id} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user_id: state.user_id,\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShow)","import React from 'react'\nimport { Header, Modal , Form, Divider, Icon} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { api } from '../services/api'\n\nclass LoginModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            login: {\n                email: \"\",\n                password: \"\"\n            },\n            signup: {\n                email: \"\",\n                name: \"\",\n                password: \"\"\n            },\n            message: ''\n        }\n    }\n\n    handleOnSignupChange = (event) => {\n        event.persist()\n        this.setState(prevState => {\n            return {\n                signup: {\n                    ...prevState.signup,\n                    [event.target.id]: event.target.value\n                }\n            }\n        })\n    }\n\n    handleOnLoginChange = (event) => {\n        this.setState({\n            login: {\n                    ...this.state.login,\n                    [event.target.id]: event.target.value\n                }\n        })\n    }\n\n    handleLoginClick = () => {\n        api.user.userLogin(this.state.login)\n            .then(resp => resp.json())\n            .then(this.loginCallBack)\n    }\n\n    handleSignupClick = () => {\n        api.user.userCreate(this.state.signup)\n            .then(resp => resp.json())\n            .then(this.loginCallBack)\n    }\n    \n    loginCallBack = (json) => {\n    if (!json.error) {\n        this.props.toggleModal()\n        localStorage.setItem('id', json.id) \n        this.props.dispatch({type: \"LOGIN\", user_id: json.id}) \n    } else {\n        this.setState({\n            message: json.error\n        })\n    }\n    }\n\n\n    render() {\n        return (\n            <Modal open={this.props.modal} closeOnDimmerClick={true} onClose={this.props.toggleModal} size=\"small\">\n                <Modal.Header><Icon name=\"times\" onClick={this.props.toggleModal}/>Log in/Sign up</Modal.Header>\n                <Modal.Content image>\n                <Modal.Description>\n                    <h4 style={{color: \"red\"}}>{this.state.message}</h4>\n                    <Form onChange={this.handleOnLoginChange} key=\"login\">\n                        <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        <Form.Field >\n                            <label>Password</label>\n                            <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n                        </Form.Field>\n                        <Form.Button onClick={this.handleLoginClick} className=\"login\" fluid={true} color=\"green\">Login</Form.Button>\n                    </Form>\n                    <Divider horizontal>Or</Divider>\n                    <Header>Sign Up</Header>\n                    <Form onChange={this.handleOnSignupChange} key=\"signup\">\n                    <Form.Field >\n                            <label>Name</label>\n                            <input placeholder=\"Name\" id=\"name\"/>\n                        </Form.Field>\n                    <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        <Form.Field >\n                            <label>Password</label>\n                            <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n                        </Form.Field>\n                        <Form.Button className=\"login\" onClick={this.handleSignupClick} fluid={true} color=\"yellow\">Sign Up</Form.Button>\n                    </Form>\n                </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default connect()(LoginModal);","import React from 'react'\n\nconst Landing = () => {\n\n    return (\n        <>\n        <div className=\"banner-img\">\n            <div className=\"banner-text\">\n                <h1>\n                    Virtual Canvas\n                </h1>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Landing","import React from 'react'\nimport image from './lights.jpg'\nimport { Link } from 'react-router-dom'\n\nconst About = () => {\n\n    return (\n        <div className=\"about-container\" >\n            <div className=\"about-card\">\n                <img className=\"left\" src={image} alt=\"lights\" />\n                <div className=\"right\" >\n                    <div className=\"text\">\n                        <h2>\n                            SHARED CANVASES <br/><span>FOR AUDIO VISUALIZATION</span>\n                        </h2>\n                        <p>\n                            Virtual Canvas is an app that lets you and any of your friends jump on the same canvas to create a visualizer together. Shapes, bursts, and canvas settings all render in real time across your screen and anyone else who wants to join. Using the same technology as instant messaging, users create, update, and delete visualizer shapes in a live and creative shared space.\n                        </p>\n                    </div>\n                    <div className=\"links\">\n                        <button>\n                            <Link exact to=\"/canvases\" >\n                                    <b>GET STARTED</b>\n                            </Link>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\nimport './styles/CreatedCanvasesContainer.scss'\nimport CanvasCard from '../components/presentational/CanvasCard'\nimport { api } from '../services/api'\n\nconst CreatedCanvasesContainer = props => {\n\n    const handleDelete = (id) => {\n        api.canvas.deleteCanvas(id)\n                            .then(resp => resp.json())\n                            .then(json => {\n                                props.handleRemoveCanvas(id)\n                            })\n    }\n\n    const renderRows = () => {\n        return props.canvases.map(canvas => {\n            return (\n                <li>\n                    <CanvasCard canvas={canvas} delete={() => handleDelete(canvas.id)}/>\n                </li>\n            )\n        })\n    }\n\n    return (\n        <>\n            <h3>Created Canvases</h3>\n            <div className=\"canvas-table\">\n                <ul>\n                {renderRows()}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default CreatedCanvasesContainer","import React from 'react';\nimport { API_ROOT } from './constants/index'\nimport CreatedCanvasesContainer from './containers/CreatedCanvasesContainer'\nimport { api } from './services/api'\n\nclass UserShow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            selected: \"canvases\"\n        }\n    }\n\n    handleRemoveCanvas = (id) => {\n        console.log(id)\n        this.setState({\n            user: {\n                ...this.state.user,\n                pictures: this.state.user.pictures.filter((canvas) => canvas.id !== id)\n            }\n        })\n    }\n\n    componentDidMount() {\n        api.user.getUser()\n            .then(resp => resp.json())\n            .then(json => {\n                this.setState({\n                    user: json\n                })\n            })\n    }\n\n    render() {\n        const {name, email, bookmarks, pictures} = this.state.user\n        // const bookmarkCanvases = bookmarks ? bookmarks.map(bookmark => bookmark.picture) : []\n        return (\n            <div className=\"user-show\" >\n                <h2>\n                    Account overview\n                </h2>\n                <h4>\n                    Email: {email}\n                </h4>\n                <h4>\n                    Name: {name}\n                </h4>\n                <div className=\"user-canvases-container\">\n                    { pictures ? <CreatedCanvasesContainer handleRemoveCanvas={this.handleRemoveCanvas} title=\"Created Canvases\" canvases={pictures} deletePath={`${API_ROOT}/pictures/`}/> : \"\" }\n                    {/* { bookmarkCanvases.length > 0 ? <CreatedCanvasesContainer title=\"Bookmarked Canvases\" canvases={bookmarkCanvases} deletePath={`${API_ROOT}/bookmarks/`}/> : \"\"} */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserShow","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './styles/NavBar.scss'\n\nconst Navbar = props => {\n\n    const conditionalUserLink = () => {\n        if (props.user_id) {\n            return (\n                <>\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            <button onClick={handleLogout}>\n                                Log out\n                            </button>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/user\" >  \n                            Profile\n                        </NavLink>\n                    </li>\n                </>\n            ) \n        } else {\n            return (\n                <button onClick={() => props.toggleModal()}>\n                    Log in\n                </button>\n            )\n        }\n    }\n\n    const handleLogout = () => {\n        localStorage.clear()\n        props.dispatch({type: \"LOGOUT\"})\n      }\n\n    return (\n        <header >\n            <nav className=\"navbar\">\n                <ul className=\"nav-links\">\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            Home\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/canvases\" >\n                            Canvases\n                        </NavLink>\n                    </li>\n                    <li>\n                        |\n                    </li>\n                    {conditionalUserLink()}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user_id: state.user_id\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport CanvasesIndex from \"./CanvasesIndex\"\nimport CanvasShow from './CanvasShow'\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom'\nimport LoginModal from './components/LoginModal'\nimport Landing from './Landing'\nimport About from \"./About\"\nimport UserShow from './UserShow'\nimport Navbar from './components/Navbar';\nimport './App.scss'\n\nconst App = props => {\n\n  const [modal,setModal] = useState(false)\n\n  const toggleModal = () => setModal(!modal)\n  \n    return (\n        <Router >\n          <LoginModal \n            modal={modal} \n            toggleModal={toggleModal}\n          />\n          <Navbar\n            toggleModal={toggleModal} \n          />\n          <Route exact path=\"/\" render={() => {\n            return (<>\n              <Landing />\n              <About />\n            </>)\n          }}/>\n          <Route path=\"/user\" >\n            {props.user_id ? <UserShow /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact path=\"/canvases\" render={routerProps => <CanvasesIndex {...routerProps} />} />\n          <Route exact path=\"/canvases/:id\" render={routerProps => (\n            <CanvasShow {...routerProps} />\n          )} />\n        </Router>\n    );\n  }\n\nconst mapStateToProps = state => {\n  return {\n    user_id: state.user_id\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    user_id: localStorage[\"id\"], \n    canvas: {}, \n    canvasBursts: [], \n    myBursts: [], \n    canvasShapes: [], \n    myShapes: [],\n    selected: '',\n    admin: ''\n}\n\nexport default function canvasReducer(state = initialState, action) {\n\n    switch(action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                user_id: action.user_id,\n                myBursts: state.canvasBursts.filter(animation => animation.user_id == localStorage[\"id\"]),\n                myShapes: state.canvasShapes.filter(animation => animation.user_id == localStorage[\"id\"])\n            }\n        case \"LOGOUT\":\n            return {\n                ...state,\n                user_id: false,\n                myBursts: [],\n                myShapes: []\n            }\n        case \"LOAD_CANVAS\": \n            return {\n                ...state,\n                canvas: action.canvas,\n                canvasBursts: action.canvas.animate_mos,\n                canvasShapes: action.canvas.p5_shapes,\n                myBursts: action.canvas.animate_mos.filter(animation => animation.user_id == localStorage[\"id\"]),\n                myShapes: action.canvas.p5_shapes.filter(animation => animation.user_id == localStorage[\"id\"]),\n                admin: action.canvas.user.id\n            }\n        case \"PATCH_CANVAS\":\n            return {\n                ...state,\n                canvas: action.canvas.picture\n            }\n        case \"HTTP_NEW_BURST\":\n            return {\n                ...state,\n                myBursts: [...state.myBursts, action.animation]\n            }\n        case \"HTTP_EDIT_BURST\":\n            const myBursts = state.myBursts.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }       \n            })\n            return {\n                ...state,\n                myBursts: [...myBursts]\n            }\n        case \"HTTP_DELETE_BURST\":\n            return {\n                ...state,\n                myBursts: state.myBursts.filter(animation => animation.id !== action.animation_id)\n            }\n        case \"HTTP_NEW_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes, action.animation]\n            }\n        case \"HTTP_EDIT_SHAPE\":\n            const myShapes = state.myShapes.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }})\n            return {\n                ...state,\n                myShapes: [...myShapes]\n            }\n        case \"HTTP_DELETE_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes, action.animation.p5_shape]\n            }\n        case \"CHANNEL_PATCH_SHAPE\":\n            const canvasShapes = state.canvasShapes.map(animation => {\n                if (animation.id === action.animation.p5_shape.id) {\n                    return action.animation.p5_shape\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasShapes: [...canvasShapes]\n            }\n        case \"CHANNEL_DELETE_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts, action.animation.animate_mo]\n            }\n        case \"CHANNEL_PATCH_BURST\":\n            // const unalteredBursts = state.canvasBursts.filter(animation => animation.id !== action.animation.animate_mo.id)\n            const canvasBursts = state.canvasBursts.map(animation => {\n                if (animation.id === action.animation.animate_mo.id) {\n                    return action.animation.animate_mo\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasBursts: [...canvasBursts]\n            }\n        case \"CHANNEL_DELETE_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"SELECT_ANIMATION\":\n            return {\n                ...state,\n                selected: action.animation\n            }\n        case \"REMOVE_CANVAS\":\n            return {\n                ...state,\n                canvas: {},\n                myAnimations: [],\n                canvasAnimations: [],\n                selected: '',\n                admin: ''\n            }\n        default: return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport CanvasReducer from './reducers/CanvasReducer'\n\nconst store = createStore(CanvasReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}