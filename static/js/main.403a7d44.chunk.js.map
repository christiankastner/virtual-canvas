{"version":3,"sources":["folds.mp3","lights.jpg","constants/index.js","components/presentational/CanvasCard.js","containers/DisplayCanvases.js","containers/CanvasesContainer.js","CanvasesIndex.js","constants/P5ReactAdapter.js","components/Canvas.js","components/presentational/PaintEdit.js","components/presentational/BurstEdit.js","components/presentational/ShapeEdit.js","components/presentational/CanvasSettings.js","containers/CanvasTools.js","containers/CanvasShowContainer.js","CanvasShow.js","components/LoginModal.js","Landing.js","About.js","containers/CreatedCanvasesContainer.js","UserShow.js","components/Navbar.js","App.js","serviceWorker.js","reducers/CanvasReducer.js","index.js"],"names":["module","exports","API_ROOT","HEADERS","Accept","useStyles","makeStyles","card","width","margin","title","fontSize","pos","marginBottom","CanvasCard","props","classes","Card","className","CardContent","Typography","color","gutterBottom","user","variant","component","canvas","DisplayCanvases","canvases","length","map","key","id","to","name","renderCanvases","CanvasesContainer","handleNewCanvas","user_id","fetch","method","headers","body","JSON","stringify","picture","state","newCanvas","then","resp","json","console","log","setState","prevState","handleOnChange","event","target","value","this","Form","onChange","Group","Field","Button","onClick","React","Component","connect","CanvasesIndex","history","push","P5ReactAdapter","array","frequency","frequencyMapping","p5","i","readJsonShape","p","fill","stroke","height","amount","spin","orbit","shape","stagger_radius","stagger_place","radius","rotate","frameCount","translate","rectMode","CENTER","rect","pop","ellipseMode","ellipse","center","triangle","line","actioncable","require","Canvas","toggleConnection","connected","sketch","fft","analyzer","preload","song","loadSound","folds","setup","createCanvas","toggleBtn","createButton","uploadBtn","createFileInput","uploaded","addClass","mousePressed","toggleAudio","canvasChannel","cable","subscriptions","create","channel","paramsId","disconnected","received","data","dispatch","handleRecievedBurst","Amplitude","FFT","angleMode","DEGREES","newDrawing","x","y","noStroke","file","uploadLoading","uploadedAudio","uploadedAudioPlay","mouseClicked","selected","mouseX","mouseY","send","canvas_id","burst","localStorage","tune","winMouseX","winMouseY","uploading","isPlaying","pause","play","draw","background","mid_mapping_1","mid_mapping_2","treble_mapping_1","treble_mapping_2","bass_mapping_1","bass_mapping_2","level","getLevel","analyze","bass","getEnergy","treble","mid","mapMid","mapTreble","mapBass","readFrequencyShapes","shapes","response","bursts","replay","myRef","createRef","myP5","current","createConsumer","disconnect","type","handleClick","ref","canvasShapes","canvasBursts","animation","mojs","Burst","parent","document","getElementById","left","top","count","angle","0","radius_1","radius_2","children","strokeWidth","stroke_width","duration","PaintEdit","useEffect","setBurst","useState","handleInputChange","animate_mo","FormControl","Select","labelId","e","v","MenuItem","Slider","orientation","label","valueLabelDisplay","max","Divider","RedSlider","withStyles","root","thumb","GreenSlider","BlueSlider","setShape","split","num","parseInt","handleColorChange","slice","p5_shape","join","defaultValue","min","aria-label","setBackground","setBass","setMid","setTreble","handleChange","lable","myBursts","myShapes","handleNewAnimation","modelName","picture_id","renderMyAnimations","admin","CanvasShow","handleSaveCanvas","bookmark","match","params","ButtonGroup","LoginModal","handleOnSignupChange","persist","signup","handleLoginClick","handleOnLogin","login","handleSignupClick","handleOnSignup","handleOnLoginChange","email","password","Modal","open","modal","size","Header","Icon","toggleModal","Content","image","Description","style","message","placeholder","fluid","horizontal","Landing","About","src","alt","exact","CreatedCanvasesContainer","creator","filter","UserShow","bookmarks","pictures","deletePath","Navbar","loggedin","handleLogout","App","clear","handleUserFetch","fetch_route","fetchUser","path","loginCallBack","error","setItem","render","routerProps","Boolean","window","location","hostname","initialState","store","createStore","action","animate_mos","p5_shapes","animation_id","myAnimations","canvasAnimations","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.403a7d44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/folds.bc4e5cac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lights.a713bd66.jpg\";","export const API_ROOT = 'https://intense-harbor-90528.herokuapp.com';\nexport const API_WS_ROOT = 'wss://intense-harbor-90528.herokuapp.com/cable';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\n\n// 'http://localhost:3000'","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    card: {\n        width: 200,\n        margin: 10\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst CanvasCard = props => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.title}>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.user}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {props.canvas.title}\n                </Typography>\n            </CardContent>  \n        </Card>\n    )\n}\n\nexport default CanvasCard","import React from 'react';\nimport CanvasCard from '../components/presentational/CanvasCard'\nimport { Link } from 'react-router-dom';\n\nconst DisplayCanvases = (props) => {\n    const renderCanvases = () => {\n        if (props.canvases && props.canvases.length > 0) {\n            return props.canvases.map(canvas => {\n                return (\n                    <li key={canvas.id}>\n                        <Link key={canvas.id} to={`/canvases/${canvas.id}`} >\n                            <CanvasCard canvas={canvas} user={canvas.user ? canvas.user.name : \"\"} />\n                        </Link>\n                    </li>\n                )\n            })\n        }\n    }\n\n    return (\n        <ul>\n            {props.title ? <h3>{props.title}</h3> : \"\"}\n            {renderCanvases()}\n        </ul>\n    )\n}\n\nexport default DisplayCanvases","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Form } from 'semantic-ui-react'\nimport { API_ROOT, HEADERS } from '../constants/index'\nimport DisplayCanvases from './DisplayCanvases';\n\nclass CanvasesContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            canvases: [],\n            newCanvas: {\n                title: \"\",\n                user_id: this.props.user_id\n            }\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/pictures`)\n            .then(resp => resp.json())\n            .then(json => {\n                this.setState({\n                    canvases: json\n                })\n            })\n    }\n\n    handleNewCanvas = () => {\n        if (this.props.user_id) {\n            fetch(`${API_ROOT}/pictures`, {\n                method: 'POST',\n                headers: HEADERS,\n                body: JSON.stringify({\n                    picture: this.state.newCanvas,\n                })\n            })\n                .then(resp => resp.json())\n                .then(json => {\n                    console.log(json)\n                    this.props.handleNewCanvas(json)\n                    this.setState(prevState => {\n                        return {\n                            canvases: [...prevState.canvases, json]\n                        }\n                    })\n                })\n        }\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            newCanvas: {\n                ...this.state.newCanvas,\n                [event.target.id]: event.target.value\n            }\n        })\n    }\n    \n    render() {\n        return (\n            <>\n                <div className=\"canvas-form\">\n                    <h3>Create Your Own</h3>\n                    {this.props.user_id ? <Form onChange={this.handleOnChange}>\n                        <label>Name</label><br/>\n                        <Form.Group >\n                            <Form.Field >\n                                <input value={this.state.newCanvas.title} id=\"title\"/>\n                            </Form.Field>\n                            <Button onClick={() => this.handleNewCanvas()}>New Canvas</Button>\n                        </Form.Group>\n                    </Form> : <h4>Must login or create a profile to create a canvas</h4>}\n                </div>\n                <div className=\"canvas-list\">\n                    <h3>Active Canvases</h3>\n                    <DisplayCanvases canvases={this.state.canvases} />\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.user_id\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasesContainer)\n\n","import React from 'react';\nimport CanvasesContainer from './containers/CanvasesContainer'\n\nconst CanvasesIndex = props => {\n\n    const handleNewCanvas = (canvas) => {\n        props.history.push(`/canvases/${canvas.id}`)\n    }\n\n    return (\n        <div className=\"canvases-index\" >\n            <CanvasesContainer handleNewCanvas={handleNewCanvas}/>\n        </div>\n    )\n    \n}\n\nexport default CanvasesIndex","class P5ReactAdapter {\n\n    // Frequency takes in either 'treble', 'bass', or 'mid' as strings and the frequencyMapping parameter is supposed to be assigned the corresponding frequency mapping to sync with the music\n    static readFrequencyShapes(array, frequency, frequencyMapping, p5) {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i].frequency === frequency) {\n                    P5ReactAdapter.readJsonShape(array[i], frequencyMapping, p5)\n            }\n        }\n    }\n\n    static readJsonShape(json, frequencyMapping, p) {\n        p.push()\n\n        p.fill(`rgb(${json.fill})`)\n        p.stroke(`rgb(${json.stroke})`)\n\n        const {width, height, amount, spin, orbit, shape, stagger_radius, stagger_place } = json\n        const radius = frequencyMapping + stagger_radius\n        p.rotate(orbit * p.frameCount/10)\n        switch (shape) {\n            case \"rect\":\n                //This will allow the shape to rotate around its own axis\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount) * i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.rectMode(p.CENTER)\n                            p.rect(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"ellipse\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.ellipseMode(p.CENTER)\n                            p.ellipse(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"triangle\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            const center = 2 * height/3\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.triangle(0, -center, width, height, -width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"line\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.line(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            default:\n        }\n        p.pop()\n    }\n}\n\nexport default P5ReactAdapter","import React from 'react';\nimport mojs from 'mo-js';\nimport { connect } from 'react-redux'\nimport folds from '../folds.mp3'\nimport p5 from 'p5';\nimport \"p5/lib/addons/p5.sound\";\nimport P5ReactAdapter from '../constants/P5ReactAdapter'\nimport { API_WS_ROOT } from '../constants/index'\nconst actioncable = require(\"actioncable\")\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.state = {\n            connected: false\n        }\n    }\n\n    toggleConnection = () => {\n        this.setState({connected: !this.state.connected})\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5 (this.sketch, this.myRef.current)\n        this.cable = actioncable.createConsumer(API_WS_ROOT)\n    }\n\n    sketch = (p) => {\n        let fft, analyzer\n\n        p.preload = () => {\n            this.song = p.loadSound(folds)\n        }\n      \n        p.setup = () => {\n            p.createCanvas(600, 600);\n        \n            this.toggleBtn = p.createButton(\"Play / Pause\")\n        \n            this.uploadBtn = p.createFileInput(p.uploaded)\n        \n            this.uploadBtn.addClass(\"upload-btn\")\n        \n            this.toggleBtn.addClass(\"toggle-btn\");\n        \n            this.toggleBtn.mousePressed(p.toggleAudio);\n\n            this.canvasChannel = this.cable.subscriptions.create({\n                channel: `PicturesChannel`, \n                id: this.props.paramsId\n            },{\n                connected: () => {\n                    console.log(\"connected!\")\n                    this.toggleConnection()\n                },\n                disconnected: () => this.toggleConnection(),\n                received: data => {\n                    if ('type' in data) {\n                        this.props.dispatch(data)\n                    // } else if ('draw' in data) {\n                    //     p.newDrawing(data.draw.x, data.draw.y)\n                    } else {\n                        this.handleRecievedBurst(data)\n                    } \n            }})\n            analyzer = new p5.Amplitude();\n            fft = new p5.FFT();\n      \n            p.angleMode(p.DEGREES)\n        };\n\n        p.newDrawing = (x,y) => {\n            p.noStroke()\n            p.fill(250)\n            p.ellipse(x, y, 5,5);\n        }\n      \n        p.uploaded = file => {\n          this.uploadLoading = true;\n          this.uploadedAudio = p.loadSound(file.data, p.uploadedAudioPlay);\n        }\n\n        // p.mouseDragged = () => {\n            // if (this.props.selected === \"paint\") {\n            //     this.canvasChannel.send({\n            //         canvas_id: this.props.paramsId,\n            //         draw: {\n            //             x: p.mouseX,\n            //             y: p.mouseY\n            //         }\n            //     })\n            // }\n        // }\n\n        p.mouseClicked = () => {\n            if (this.props.selected === \"bursts\") {\n                if (p.mouseX * p.mouseY > 0 && p.mouseX < 600 && p.mouseY < 600) {\n                    this.canvasChannel.send({\n                        canvas_id: this.props.paramsId,\n                        burst: {\n                            user_id: localStorage[\"id\"],\n                            tune : {\n                                x: p.winMouseX,\n                                y: p.winMouseY\n                            }\n                        }\n                    })\n                }\n            }\n        }\n      \n        p.uploadedAudioPlay = (file) => {\n            this.uploading = false;\n        \n            if (this.song.isPlaying()) {\n                this.song.pause()\n            }\n        \n            this.song = file\n            this.song.play() \n        }\n      \n        p.toggleAudio = () => {\n            if (this.song.isPlaying()) {\n            this.song.pause();\n            } else {\n            this.song.play();\n            }\n        }\n      \n        p.draw = () => {\n            const { background, mid_mapping_1, mid_mapping_2, treble_mapping_1, treble_mapping_2, bass_mapping_1, bass_mapping_2} = this.props.canvas\n    \n            p.background(`rgb(${background})`);\n\n            p.translate(p.width / 2, p.height / 2);\n\n            p.level = analyzer.getLevel();\n            fft.analyze();\n\n            var bass = fft.getEnergy('bass');\n            var treble = fft.getEnergy('treble');\n            var mid = fft.getEnergy(\"mid\");\n\n            var mapMid = p.map(mid, 0, 255, mid_mapping_1, mid_mapping_2);\n            var mapTreble = p.map(treble, 0, 255, treble_mapping_1, treble_mapping_2);\n            var mapBass = p.map(bass, 0, 255, bass_mapping_1, bass_mapping_2);\n\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"treble\", mapTreble, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"mid\", mapMid, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"bass\", mapBass, p)\n        };\n    }\n\n    componentWillUnmount() {\n        this.cable.disconnect()\n        this.props.dispatch({type: \"REMOVE_CANVAS\"})\n        this.song.pause()\n    }\n\n    handleRecievedBurst = response => {\n        const {user_id, tune} = response.burst\n        const { bursts } = this.props\n        console.log(user_id, tune)\n        for (let i = 0; i < bursts.length; i++) {\n            if (bursts[i].user_id == user_id) {\n                bursts[i].burst.tune(tune).replay()\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"canvas\" className=\"canvas\" onClick={this.handleClick} ref={this.myRef}>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.user_id,\n        canvas: state.canvas,\n        selected: state.selected,\n        shapes: state.canvasShapes,\n        bursts: state.canvasBursts ? state.canvasBursts.map(animation => {\n            return {\n                user_id: animation.user_id,\n                burst: new mojs.Burst({\n                    parent: document.getElementById(\"canvas\"),\n                    left: 0, top: 0,\n                    count: animation.count,\n                    angle: {0: animation.angle},\n                    radius: {[animation.radius_1]: animation.radius_2},\n                    children: {\n                        shape: animation.shape,\n                        fill:    animation.color,\n                        radius:     20,\n                        strokeWidth: animation.stroke_width,\n                        duration:   animation.duration*100\n                    }\n                })\n            }\n        }) : []\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas)\n\n","import React from 'react'\n\n\nconst PaintEdit = props => {\n\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default PaintEdit","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT, HEADERS } from '../../constants/index';\nimport { Slider, Button, Typography, FormControl, MenuItem, Select, Divider } from '@material-ui/core';\n\nconst BurstEdit = props => {\n\n    useEffect(() => {\n        if (props.animation.id !== burst.id) {\n            setBurst({\n                ...props.animation\n            })\n        }\n    })\n  \n    const [burst, setBurst] = useState({...props.animation})\n\n    const handleInputChange = (name, value) => {\n        console.log(name,value)\n        setBurst({\n                ...burst, \n                [name]: value\n            })\n    }\n\n    const handleSubmit = () => {\n        fetch(`${API_ROOT}/animate_mos/${props.animation.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                animate_mo: {\n                    ...burst\n                }\n            })}\n        )\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_BURST\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        fetch(`${API_ROOT}/animate_mos/${props.animation.id}`, {\n            method: \"DELETE\",\n            headers: HEADERS\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n    \n    return (\n        <>\n        <div className=\"tool-burst\">\n            <div className=\"burst1\">\n            <h3>Burst</h3>\n            <Button onClick={handleSubmit}>Save Burst</Button>\n            <Button onClick={handleDelete}>Delete Burst</Button>\n            <div>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        value={burst.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"circle\" >Circle</MenuItem>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"polygon\" >Polygon</MenuItem>\n                        <MenuItem value=\"zigzag\" >Zigzag</MenuItem>\n                        <MenuItem value=\"curve\" >Curve</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"color-select\"\n                        id=\"color\"\n                        name=\"color\"\n                        value={burst.color} \n                        onChange={(e,v) => handleInputChange(\"color\", e.target.value)}>\n                        <MenuItem value=\"red\" >Red</MenuItem>\n                        <MenuItem value=\"yellow\" >Yellow</MenuItem>\n                        <MenuItem value=\"pink\" >Pink</MenuItem>\n                        <MenuItem value=\"blue\" >Blue</MenuItem>\n                        <MenuItem value=\"cyan\" >Cyan</MenuItem>\n                        <MenuItem value=\"magenta\">Magenta</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n                <div className=\"burst2\">\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 1\n                    </Typography>\n                    <Slider\n                        name=\"radius_1\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_1\"]}\n                        label=\"Radius 1\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_1\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 2\n                    </Typography>\n                    <Slider \n                        name=\"radius_2\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_2\"]}\n                        label=\"Radius 2\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_2\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Count\n                    </Typography>\n                    <Slider \n                        name=\"count\"\n                        orientation=\"vertical\"\n                        value={burst.count}\n                        label=\"Count\"\n                        max={20}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"count\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Duration\n                    </Typography>\n                    <Slider \n                        name=\"duration\"\n                        value={burst.duration}\n                        orientation=\"vertical\"\n                        label=\"Duration\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"duration\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Angle\n                    </Typography>\n                    <Slider \n                        name=\"angle\"\n                        orientation=\"vertical\"\n                        value={burst.angle}\n                        label=\"Angle\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"angle\", v)} />\n                    {/* <Typography id=\"slider\" gutterBottom>\n                        Stroke Width\n                    </Typography>\n                    <Slider\n                        name=\"stroke_width\"\n                        orientation=\"vertical\"\n                        value={burst[\"stroke_width\"]}\n                        label=\"Stroke Width\"\n                        max={10}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"stroke_width\", v)} /> */}\n                </div>\n            </div>\n        </div>\n        <Divider />\n    </>\n    )\n}\n\n\n\nexport default connect()(BurstEdit)","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT, HEADERS } from '../../constants/index';\nimport { Slider, Button, FormControl, MenuItem, Select, Typography, Divider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\nconst ShapeEdit = props => {\n\n    useEffect(() => {\n        if (props.shape.id !== shape.id) {\n            setShape({\n                ...props.shape,\n                fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n                stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n            })\n        }\n    })\n\n    const [shape, setShape] = useState({\n        ...props.shape,\n        fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n        stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n    })\n\n    const handleSubmit = () => {\n        fetch(`${API_ROOT}/p5_shapes/${props.shape.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                p5_shape: {\n                    ...shape,\n                    stroke: shape.stroke.join(','),\n                    fill: shape.fill.join(',')\n                }\n            })}\n        )\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_SHAPE\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        fetch(`${API_ROOT}/p5_shapes/${props.shape.id}`, {\n            method: \"DELETE\",\n            headers: HEADERS\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n\n    const handleInputChange = (name, value) => {\n        setShape({\n                ...shape, \n                [name]: value\n            })\n    }\n\n    const handleColorChange = (id, name, value) => {\n        setShape({\n            ...shape,\n            [name]: [...shape[name].slice(0,id), value, ...shape[name].slice(id + 1)]\n        })\n    }\n\n    return (\n        <>\n        <div className=\"tool-header\">\n            <Button onClick={handleSubmit}>Save Shape</Button>\n            <Button onClick={handleDelete}>Delete Shape</Button>\n        </div>\n        <div className=\"tool\" >\n            <div className=\"toolbox1\">\n                <FormControl>\n                    <Select \n                        labelId=\"frequency-select\"\n                        id=\"frequency\"\n                        name=\"frequency\"\n                        defaultValue={\"\"}\n                        value={shape.frequency} \n                        onChange={(e,v) => handleInputChange(\"frequency\", e.target.value)}>\n                        <MenuItem value=\"treble\" >Treble</MenuItem>\n                        <MenuItem value=\"mid\" >Mid</MenuItem>\n                        <MenuItem value=\"bass\" >Bass</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        defaultValue={\"\"}\n                        value={shape.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"ellipse\" >Ellipse</MenuItem>\n                        <MenuItem value=\"triangle\" >Triangle</MenuItem>\n                        <MenuItem value=\"line\" >Line</MenuItem>\n                    </Select>\n                </FormControl>\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Radius \n                </Typography>\n                <Slider \n                    name=\"stagger_radius\"\n                    label=\"stagger_radius\"\n                    min={-20}\n                    max={20}\n                    value={shape[\"stagger_radius\"]}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_radius\", v)} />\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Place\n                </Typography>\n                <Slider \n                    name=\"stagger_place\"\n                    label=\"stagger_place\"\n                    min={-20}\n                    max={20}\n                    value={shape['stagger_place']}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_place\", v)} />\n            </div>\n            <div className=\"toolbox2\">\n                        <Typography id=\"slider\" gutterBottom>\n                            Fill Color\n                        </Typography>\n                    <RedSlider \n                        value={shape.fill[0]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(0, \"fill\", v)} />\n                    <GreenSlider \n                        value={shape.fill[1]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(1, \"fill\", v)} />\n                    <BlueSlider \n                        value={shape.fill[2]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(2, \"fill\", v)} />\n          \n            </div>\n            <div className=\"toolbox4\">\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Width\n                        </Typography>\n                        <Slider \n                            name=\"width\"\n                            label=\"Width\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.width}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"width\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Height\n                        </Typography>\n                        <Slider \n                            name=\"height\"\n                            label=\"height\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.height}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"height\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Amount\n                        </Typography>\n                        <Slider \n                            name=\"amount\"\n                            label=\"Amount\"\n                            min={0}\n                            max={20}\n                            orientation=\"vertical\"\n                            value={shape.amount}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"amount\", v)}\n                            />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Orbit\n                        </Typography>\n                        <Slider\n                            name=\"orbit\"\n                            label=\"Orbit\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.orbit}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"orbit\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Spin\n                        </Typography>\n                        <Slider\n                            name=\"spin\"\n                            label=\"Spin\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.spin}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"spin\", v)}\n                            />\n            </div>\n            <div className=\"toolbox3\">\n                    <Typography id=\"slider\" gutterBottom>\n                            Stroke Color\n                        </Typography>\n                    <RedSlider \n                        name=\"stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[0]}\n                        min={0}\n                        max={255}\n                        aria-label=\"Stroke\"\n                        onChange={(e,v) => handleColorChange(0, \"stroke\", v)} />\n                    <GreenSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[1]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(1, \"stroke\", v)} />\n                    <BlueSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[2]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(2, \"stroke\", v)} />\n            </div>  \n            \n        </div>\n        <Divider />\n        </>\n    )\n}\n\n\nexport default connect()(ShapeEdit)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport { HEADERS, API_ROOT } from '../../constants';\nimport { withStyles } from '@material-ui/core/styles'\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\n// const theme = createMuiTheme({\n//     status: {\n//         red: 'red',\n//         green: 'green',\n//         blue: 'blue'\n//     }\n// })\n\nconst CanvasSettings = props => {\n    const [background, setBackground] = useState([...props.canvas.background.split(',').map(num => parseInt(num))])\n    const [bass, setBass] = useState([props.canvas.bass_mapping_1, props.canvas.bass_mapping_2])\n    const [mid, setMid] = useState([props.canvas.mid_mapping_1, props.canvas.mid_mapping_2])\n    const [treble, setTreble] = useState([props.canvas.treble_mapping_1, props.canvas.treble_mapping_2])\n\n\n    const handleChange = (num,v) => {\n        setBackground([...background.slice(0,num), v, ...background.slice(num+1)])\n    }\n\n    const handleSaveCanvas = () => {\n        fetch(`${API_ROOT}/pictures/${props.canvas.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                picture: {\n                    background: background.join(','),\n                    bass_mapping_1: bass[0],\n                    bass_mapping_2: bass[1],\n                    mid_mapping_1: mid[0],\n                    mid_mapping_2: mid[1],\n                    treble_mapping_1: treble[0],\n                    treble_mapping_2: treble[1]\n                }\n            })\n        })\n            .then(resp => resp.json())\n            .then(json => {\n            })\n    }\n\n    return (\n        <>\n        <div className=\"canvas-settings\">\n            <Button onClick={handleSaveCanvas}>Save Canvas</Button>\n            <h3>Background Color</h3>\n            <RedSlider \n                value={background[0]}\n                min={0}\n                max={255}\n                lable=\"Red\" \n                valueLabelDisplay='auto'\n                onChange={(e,v) => handleChange(0, v)} />\n            <GreenSlider \n                value={background[1]}\n                min={0}\n                max={255}\n                valueLabelDisplay='auto'\n                label=\"Green\" \n                onChange={(e,v) => handleChange(1, v)} />\n            <BlueSlider \n                value={background[2]}\n                min={0}\n                max={255}\n                valueLabelDisplay='auto'\n                label=\"Blue\" \n                onChange={(e,v) => handleChange(2, v)} />\n        </div>\n        <div className=\"canvas-settings\">\n            <h3>Frequencies </h3>\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Bass Mapping\n            </Typography>\n            <Slider\n                name=\"bass\"\n                value={bass}\n                max={300}\n                label=\"bass\"\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setBass(v)} />\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Mid Mapping\n            </Typography>\n            <Slider\n                name=\"mid\"\n                value={mid}\n                label=\"mid\"\n                max={300}\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setMid(v)} />\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Treble Mapping\n            </Typography>\n            <Slider\n                name=\"treble\"\n                value={treble}\n                label=\"treble\"\n                max={300}\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setTreble(v)} />\n        </div>\n        <Divider />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        canvas: state.canvas\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasSettings)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport { API_ROOT, HEADERS } from '../constants/index'\nimport PaintEdit from '../components/presentational/PaintEdit'\nimport BurstEdit from '../components/presentational/BurstEdit'\nimport ShapeEdit from '../components/presentational/ShapeEdit'\nimport CanvasSettings from '../components/presentational/CanvasSettings'\n\nconst CanvasTools = (props) => {\n\n    const renderMyAnimations = () => {\n        switch (props.selected) {\n            case \"shapes\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('p5_shape')}>Create New Shape</Button>\n                        {props.myShapes ? props.myShapes.map(shape => <ShapeEdit shape={shape} />) : null}\n                    </div>\n                )\n            case \"bursts\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('animate_mo')} >Create New Burst</Button>\n                        {props.myBursts ? props.myBursts.map(animation => <BurstEdit animation={animation} />) : null}\n                    </div>\n                )\n            case \"paint\":\n                return <PaintEdit />\n            case \"settings\":\n                return (\n                    <div className='tools-container' >\n                        <CanvasSettings />\n                    </div> \n                )\n            default:\n                return <></>\n        }\n    }\n    \n    const handleNewAnimation = (modelName) => {\n        fetch(`${API_ROOT}/${modelName}s`, {\n            method: \"POST\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                [`${modelName}`]: {\n                    user_id: localStorage[\"id\"],\n                    picture_id: props.canvas_id,\n                }\n            })\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                if (modelName == 'animate_mo') {\n                    props.dispatch({type: \"HTTP_NEW_BURST\", animation: json})\n                } else {\n                    props.dispatch({type: \"HTTP_NEW_SHAPE\", animation: json})\n                }\n            })\n    }\n\n    return (\n        <>\n            {renderMyAnimations()}\n        </>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        canvas_id: state.canvas.id,\n        myBursts: state.myBursts,\n        myShapes: state.myShapes,\n        selected: state.selected\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasTools)","import React from 'react';\nimport Canvas from '../components/Canvas';\nimport { connect } from 'react-redux'\nimport CanvasTools from './CanvasTools';\n\nconst CanvasShowContainer = props => {\n    return (\n        <>\n            <div id=\"canvas-container\" className=\"canvas-container\">\n                <Canvas paramsId={props.paramsId} />\n                <CanvasTools />\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShowContainer)","import React from 'react';\nimport CanvasShowContainer from './containers/CanvasShowContainer'\nimport { API_ROOT, HEADERS } from './constants/index'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport { connect } from 'react-redux'\n\nclass CanvasShow extends React.Component {\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/pictures/${this.props.match.params.id}`)\n            .then(resp => resp.json())\n            .then(json => {\n                this.props.dispatch({type: \"LOAD_CANVAS\", canvas: json})\n            })\n    }\n\n    handleSaveCanvas = () => {\n        fetch(`${API_ROOT}/users/${localStorage[\"id\"]}/bookmarks`, {\n            method: \"POST\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                bookmark: {\n                    user_id: localStorage[\"id\"],\n                    picture_id: this.props.canvas.id\n                }\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"canvas-show\">\n                <div className=\"canvas-header\">\n                    <h2>{this.props.canvas.title}</h2> \n                    {/* {localStorage[\"id\"] && !this.props.admin ? <Button onClick={this.handleSaveCanvas}>Bookmark Canvas</Button> : null} */}\n                    { this.props.user_id ? <ButtonGroup >\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"shapes\"})}>\n                    Shapes\n                </Button>\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"bursts\"})}>\n                    Bursts\n                </Button>\n                {/* <Button onClick={() => props.dispatch({type: 'SELECT_ANIMATION', animation: \"paint\"})}>\n                    Paint\n                </Button>  */}\n                {this.props.user_id == this.props.admin ? <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"settings\"})}>\n                    Settings\n                </Button> : \"\"}\n            </ButtonGroup> : \"\" }\n                </div>\n                <CanvasShowContainer \n                    paramsId={this.props.match.params.id} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user_id: state.user_id,\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShow)","import React from 'react'\nimport { Header, Modal , Form, Divider, Icon} from 'semantic-ui-react'\n\nclass LoginModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            login: {\n                email: \"\",\n                password: \"\"\n            },\n            signup: {\n                email: \"\",\n                name: \"\",\n                password: \"\"\n            }\n        }\n    }\n\n    handleOnSignupChange = (event) => {\n        event.persist()\n        this.setState(prevState => {\n            return {\n                signup: {\n                    ...prevState.signup,\n                    [event.target.id]: event.target.value\n                }\n            }\n        })\n    }\n\n    handleLoginClick = () => {\n        this.props.handleOnLogin(this.state.login)\n    }\n\n    handleSignupClick = () => {\n        this.props.handleOnSignup(this.state.signup)\n    }\n\n    handleOnLoginChange = (event) => {\n        this.setState({\n            login: {\n                    ...this.state.login,\n                    [event.target.id]: event.target.value\n                }\n        })\n    }\n\n    render() {\n        return (\n            <Modal open={this.props.modal} size=\"small\">\n                <Modal.Header><Icon name=\"times\" onClick={this.props.toggleModal}/>Log in/Sign up</Modal.Header>\n                <Modal.Content image>\n                <Modal.Description>\n                    <h4 style={{color: \"red\"}}>{this.props.message}</h4>\n                    <Form onChange={this.handleOnLoginChange} key=\"login\">\n                        <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        <Form.Field >\n                            <label>Password</label>\n                            <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n                        </Form.Field>\n                        <Form.Button onClick={this.handleLoginClick} className=\"login\" fluid={true} color=\"green\">Login</Form.Button>\n                    </Form>\n                    <Divider horizontal>Or</Divider>\n                    <Header>Sign Up</Header>\n                    <Form onChange={this.handleOnSignupChange} key=\"signup\">\n                    <Form.Field >\n                            <label>Name</label>\n                            <input placeholder=\"Name\" id=\"name\"/>\n                        </Form.Field>\n                    <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        <Form.Field >\n                            <label>Password</label>\n                            <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n                        </Form.Field>\n                        <Form.Button className=\"login\" onClick={this.handleSignupClick} fluid={true} color=\"yellow\">Sign Up</Form.Button>\n                    </Form>\n                </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default LoginModal","import React from 'react'\n\nconst Landing = () => {\n\n    return (\n        <>\n        <div className=\"banner-img\">\n            <div className=\"banner-text\">\n                <h1>\n                    Virtual Canvas\n                </h1>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Landing","import React from 'react'\nimport image from './lights.jpg'\nimport { Link } from 'react-router-dom'\n\nconst About = () => {\n\n    return (\n        <div className=\"about-container\" >\n            <div className=\"about-card\">\n                <img className=\"left\" src={image} alt=\"lights\" />\n                <div className=\"right\" >\n                    <div className=\"text\">\n                        <h2>\n                            SHARED CANVASES <br/><span>FOR AUDIO VISUALIZATION</span>\n                        </h2>\n                        <p>\n                            Virtual Canvas is an app that lets you and any of your friends jump on the same canvas to create a visualizer together. Shapes, bursts, and canvas settings all render in real time across your screen and anyone else who wants to join. Using the same technology as instant messaging, users create, update, and delete visualizer shapes in a live and creative shared space.\n                        </p>\n                    </div>\n                    <div className=\"links\">\n                        <button>\n                            <Link exact to=\"/canvases\" >\n                                    <b>GET STARTED</b>\n                            </Link>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { API_ROOT, HEADERS } from '../constants/index'\n\nconst CreatedCanvasesContainer = props => {\n    const [state, setState] = useState({\n        data: [\n            ...props.canvases.map(canvas => {\n                return {title: canvas.title, creator: canvas.user ? canvas.user.name : '', id: canvas.id}\n            })\n        ]\n    })\n\n    const handleDelete = (id) => {\n        fetch(`${API_ROOT}/pictures/${id}`, {\n                            method: 'DELETE',\n                            headers: HEADERS\n                        })\n                            .then(resp => resp.json())\n                            .then(json => {\n                                if (json.message === \"Successful\") {\n                                    setState(prevState => {\n                                        return { data: [...prevState.data.filter(canvas => canvas.id !== id)]}\n                                    })\n                                }\n    \n                            })\n    }\n\n    const renderRows = () => {\n        return state.data.map(canvas => {\n            return (\n                <tr>\n                    <td><Button onClick={() => handleDelete(canvas.id)}>Delete</Button></td>   \n                    <td>{canvas.title}</td>\n                </tr>\n            )\n        })\n    }\n\n    return (\n        <div className=\"canvas-table\">\n            <h3>Created Canvases</h3>\n            <table >\n                <tr>\n                    <th>Action</th>\n                    <th>Title</th>\n                </tr>\n                {renderRows()}\n            </table>\n        </div>\n    )\n}\n\nexport default CreatedCanvasesContainer","import React from 'react';\nimport { API_ROOT } from './constants/index'\nimport CreatedCanvasesContainer from './containers/CreatedCanvasesContainer'\n\nclass UserShow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/users/${localStorage[\"id\"]}`)\n            .then(resp => resp.json())\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    user: json\n                })\n            })\n    }\n\n    render() {\n        const {name, email, bookmarks, pictures} = this.state.user\n        const bookmarkCanvases = bookmarks ? bookmarks.map(bookmark => bookmark.picture) : []\n        return (\n            <div className=\"user-show\" >\n                <h2>\n                    Account overview\n                </h2>\n                <h4>\n                    Email: {email}\n                </h4>\n                <h4>\n                    Name: {name}\n                </h4>\n                <div className=\"user-canvases-container\">\n                    { pictures ? <CreatedCanvasesContainer title=\"Created Canvases\" canvases={pictures} deletePath={`${API_ROOT}/pictures/`}/> : \"\" }\n                    {/* { bookmarkCanvases.length > 0 ? <CreatedCanvasesContainer title=\"Bookmarked Canvases\" canvases={bookmarkCanvases} deletePath={`${API_ROOT}/bookmarks/`}/> : \"\"} */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserShow","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst Navbar = props => {\n\n    const conditionalUserLink = () => {\n        if (props.loggedin) {\n            return (\n                <>\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            <button onClick={props.handleLogout}>\n                                Log out\n                            </button>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/user\" >  \n                            Profile\n                        </NavLink>\n                    </li>\n                </>\n            ) \n        } else {\n            return (\n                <button onClick={() => props.toggleModal()}>\n                    Log in\n                </button>\n            )\n        }\n    }\n\n    return (\n        <header >\n            <nav className=\"navbar\">\n                <ul className=\"nav-links\">\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            Home\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/canvases\" >\n                            Canvases\n                        </NavLink>\n                    </li>\n                    <li>\n                        |\n                    </li>\n                    {conditionalUserLink()}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { connect } from 'react-redux'\nimport CanvasesIndex from \"./CanvasesIndex\"\nimport CanvasShow from './CanvasShow'\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { API_ROOT, HEADERS } from './constants/index'\nimport LoginModal from './components/LoginModal'\nimport './App.css';\nimport Landing from './Landing'\nimport About from \"./About\"\nimport UserShow from './UserShow'\nimport Navbar from './components/Navbar';\n\nclass App extends React.Component {\n\n  state = {\n    loggedin: !!localStorage[\"id\"],\n    modal: false,\n    message: \"\"\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      loggedin: false\n    }, () => {\n      localStorage.clear()\n      this.props.dispatch({type: \"LOGOUT\"})\n    })\n  }\n\n  // This takes in a string to specify whether the fetch is to find a user to login or create a user to sign up\n  handleUserFetch = (fetch_route) => {\n    return (user) => {\n      this.fetchUser(`${API_ROOT}/${fetch_route}`, user)\n    }\n  }\n\n  fetchUser = (path, user) => {\n    return fetch(path, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({user: user})\n    })\n        .then(resp => resp.json())\n        .then(this.loginCallBack)\n  }\n\n  loginCallBack = (json) => {\n    if (!json.error) {\n        this.setState({\n            loggedin: true,\n            modal: false\n        }, () => {\n            localStorage.setItem('id', json.id) \n            this.props.dispatch({type: \"LOGIN\", user_id: json.id}) \n        })\n    } else {\n        this.setState({\n          message: json.error\n        })\n    }\n  }\n  \n  render() {\n      return (\n          <Router >\n            <LoginModal \n              modal={this.state.modal} \n              handleOnLogin={this.handleUserFetch(\"users/login\")} \n              handleOnSignup={this.handleUserFetch(\"users\")} \n              toggleModal={this.toggleModal}\n              message={this.state.message}\n            />\n            <Navbar loggedin={this.state.loggedin} \n              toggleModal={this.toggleModal} \n              handleLogout={this.handleLogout} \n            />\n            <Route exact path=\"/\" render={() => {\n              return (<>\n                <Landing />\n                <About />\n              </>)\n            }}/>\n            <Route path=\"/user\" >\n              {this.state.loggedin ? <UserShow /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route exact path=\"/canvases\" render={routerProps => <CanvasesIndex {...routerProps} />} />\n            <Route exact path=\"/canvases/:id\" render={routerProps => (\n              <CanvasShow {...routerProps} />\n            )} />\n          </Router>\n      );\n    }\n  }\nconst mapStateToProps = state => {\n  return {\n    user_id: state.user_id\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    user_id: localStorage[\"id\"], \n    canvas: {}, \n    canvasBursts: [], \n    myBursts: [], \n    canvasShapes: [], \n    myShapes: [],\n    selected: '',\n    admin: ''\n}\n\nexport default function canvasReducer(state = initialState, action) {\n\n    switch(action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                user_id: action.user_id\n            }\n        case \"LOGOUT\":\n            return {\n                ...state,\n                user_id: false\n            }\n        case \"LOAD_CANVAS\": \n            return {\n                ...state,\n                canvas: action.canvas,\n                canvasBursts: action.canvas.animate_mos,\n                canvasShapes: action.canvas.p5_shapes,\n                myBursts: action.canvas.animate_mos.filter(animation => animation.user_id == localStorage[\"id\"]),\n                myShapes: action.canvas.p5_shapes.filter(animation => animation.user_id == localStorage[\"id\"]),\n                admin: action.canvas.user.id\n            }\n        case \"PATCH_CANVAS\":\n            return {\n                ...state,\n                canvas: action.canvas.picture\n            }\n        case \"HTTP_NEW_BURST\":\n            return {\n                ...state,\n                myBursts: [...state.myBursts, action.animation]\n            }\n        case \"HTTP_EDIT_BURST\":\n            const myBursts = state.myBursts.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }       \n            })\n            return {\n                ...state,\n                myBursts: [...myBursts]\n            }\n        case \"HTTP_DELETE_BURST\":\n            return {\n                ...state,\n                myBursts: state.myBursts.filter(animation => animation.id !== action.animation_id)\n            }\n        case \"HTTP_NEW_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes, action.animation]\n            }\n        case \"HTTP_EDIT_SHAPE\":\n            const myShapes = state.myShapes.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }})\n            return {\n                ...state,\n                myShapes: [...myShapes]\n            }\n        case \"HTTP_DELETE_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes, action.animation.p5_shape]\n            }\n        case \"CHANNEL_PATCH_SHAPE\":\n            const canvasShapes = state.canvasShapes.map(animation => {\n                if (animation.id === action.animation.p5_shape.id) {\n                    return action.animation.p5_shape\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasShapes: [...canvasShapes]\n            }\n        case \"CHANNEL_DELETE_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts, action.animation.animate_mo]\n            }\n        case \"CHANNEL_PATCH_BURST\":\n            // const unalteredBursts = state.canvasBursts.filter(animation => animation.id !== action.animation.animate_mo.id)\n            const canvasBursts = state.canvasBursts.map(animation => {\n                if (animation.id === action.animation.animate_mo.id) {\n                    return action.animation.animate_mo\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasBursts: [...canvasBursts]\n            }\n        case \"CHANNEL_DELETE_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"SELECT_ANIMATION\":\n            return {\n                ...state,\n                selected: action.animation\n            }\n        case \"REMOVE_CANVAS\":\n            return {\n                ...state,\n                canvas: {},\n                myAnimations: [],\n                canvasAnimations: [],\n                selected: '',\n                admin: ''\n            }\n        default: return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport CanvasReducer from './reducers/CanvasReducer'\n\nconst store = createStore(CanvasReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}