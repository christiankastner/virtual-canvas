{"version":3,"sources":["folds.mp3","lights.jpg","constants/index.js","components/presentational/CanvasCard.js","containers/DisplayCanvases.js","containers/CanvasesContainer.js","CanvasesIndex.js","constants/P5ReactAdapter.js","components/Canvas.js","components/presentational/PaintEdit.js","components/presentational/BurstEdit.js","components/presentational/ShapeEdit.js","components/presentational/CanvasSettings.js","containers/CanvasTools.js","containers/CanvasShowContainer.js","CanvasShow.js","components/LoginModal.js","Landing.js","About.js","containers/CreatedCanvasesContainer.js","UserShow.js","components/Navbar.js","constants/firbaseConfig.js","App.js","serviceWorker.js","reducers/CanvasReducer.js","index.js"],"names":["module","exports","API_ROOT","HEADERS","Accept","useStyles","makeStyles","card","width","margin","title","fontSize","pos","marginBottom","CanvasCard","props","classes","Card","className","CardContent","Typography","color","gutterBottom","user","variant","component","canvas","DisplayCanvases","canvases","length","map","key","id","to","name","renderCanvases","CanvasesContainer","handleNewCanvas","localStorage","fetch","method","headers","body","JSON","stringify","picture","state","newCanvas","then","resp","json","console","log","setState","prevState","handleOnChange","event","target","value","user_id","this","Form","onChange","Group","Field","Button","onClick","React","Component","CanvasesIndex","P5ReactAdapter","array","frequency","frequencyMapping","p5","i","readJsonShape","p","push","fill","stroke","height","amount","spin","orbit","shape","stagger_radius","stagger_place","radius","rotate","frameCount","translate","rectMode","CENTER","rect","pop","ellipseMode","ellipse","center","triangle","line","actioncable","require","Canvas","toggleConnection","connected","sketch","fft","analyzer","preload","song","loadSound","folds","setup","createCanvas","toggleBtn","createButton","uploadBtn","createFileInput","uploaded","addClass","mousePressed","toggleAudio","canvasChannel","cable","subscriptions","create","channel","paramsId","disconnected","received","data","dispatch","handleRecievedBurst","Amplitude","FFT","angleMode","DEGREES","newDrawing","x","y","noStroke","file","uploadLoading","uploadedAudio","uploadedAudioPlay","mouseClicked","selected","mouseX","mouseY","send","canvas_id","burst","tune","winMouseX","winMouseY","uploading","isPlaying","pause","play","draw","background","mid_mapping_1","mid_mapping_2","treble_mapping_1","treble_mapping_2","bass_mapping_1","bass_mapping_2","level","getLevel","analyze","bass","getEnergy","treble","mid","mapMid","mapTreble","mapBass","readFrequencyShapes","shapes","response","bursts","replay","myRef","createRef","myP5","current","createConsumer","disconnect","type","handleClick","ref","connect","canvasShapes","canvasBursts","animation","mojs","Burst","parent","document","getElementById","left","top","count","angle","0","radius_1","radius_2","children","strokeWidth","stroke_width","duration","PaintEdit","useEffect","setBurst","useState","handleInputChange","animate_mo","FormControl","Select","labelId","e","v","MenuItem","Slider","orientation","label","valueLabelDisplay","max","Divider","RedSlider","withStyles","root","thumb","GreenSlider","BlueSlider","setShape","split","num","parseInt","handleColorChange","slice","p5_shape","join","defaultValue","min","aria-label","setBackground","setBass","setMid","setTreble","handleChange","lable","myBursts","myShapes","handleNewAnimation","modelName","picture_id","renderMyAnimations","admin","CanvasShow","handleSaveCanvas","bookmark","match","params","ButtonGroup","LoginModal","handleOnSignupChange","persist","signup","handleLoginClick","handleOnLogin","login","handleSignupClick","handleOnSignup","handleOnLoginChange","email","Modal","open","modal","size","Header","Icon","toggleModal","Content","image","Description","placeholder","fluid","horizontal","Landing","About","src","alt","exact","CreatedCanvasesContainer","creator","message","filter","UserShow","bookmarks","pictures","bookmarkCanvases","deletePath","Navbar","loggedin","handleLogout","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAppAuth","firebase","auth","providers","googleProvider","GoogleAuthProvider","App","clear","handleUserFetch","fetch_route","fetchUser","path","loginCallBack","error","setItem","signOut","signInWithGoogle","render","routerProps","withFirebaseAuth","Boolean","window","location","hostname","initialState","store","createStore","action","animate_mos","p5_shapes","animation_id","myAnimations","canvasAnimations","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,kQCA9BC,EAAW,wBAEXC,EAAU,CACrB,eAAgB,mBAChBC,OAAQ,oB,oCCEJC,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,IACPC,OAAQ,IAEZC,MAAO,CACHC,SAAU,IAEdC,IAAK,CACDC,aAAc,MAoBPC,EAhBI,SAAAC,GACf,IAAMC,EAAUX,IAChB,OACI,kBAACY,EAAA,EAAD,CAAMC,UAAWF,EAAQT,MACrB,kBAACY,EAAA,EAAD,CAAaD,UAAWF,EAAQN,OAC5B,kBAACU,EAAA,EAAD,CAAYF,UAAWF,EAAQN,MAAOW,MAAM,gBAAgBC,cAAY,GACnEP,EAAMQ,MAEX,kBAACH,EAAA,EAAD,CAAYI,QAAQ,KAAKC,UAAU,MAC9BV,EAAMW,OAAOhB,U,QCDnBiB,EAvBS,SAACZ,GAerB,OACI,4BACKA,EAAML,MAAQ,4BAAKK,EAAML,OAAc,GAhBzB,WACnB,GAAIK,EAAMa,UAAYb,EAAMa,SAASC,OAAS,EAC1C,OAAOd,EAAMa,SAASE,KAAI,SAAAJ,GACtB,OACI,wBAAIK,IAAKL,EAAOM,IACZ,kBAAC,IAAD,CAAMD,IAAKL,EAAOM,GAAIC,GAAE,oBAAeP,EAAOM,KAC1C,kBAAC,EAAD,CAAYN,OAAQA,EAAQH,KAAMG,EAAOH,KAAOG,EAAOH,KAAKW,KAAO,UAWlFC,KC2DEC,E,YA3EX,WAAYrB,GAAQ,IAAD,8BACf,4CAAMA,KAoBVsB,gBAAkB,WACVC,aAAY,IACZC,MAAM,GAAD,OAAIrC,EAAJ,aAAyB,CAC1BsC,OAAQ,OACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAU,CACjBC,QAAS,EAAKC,MAAMC,cAGvBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACZ,EAAKG,UAAS,SAAAC,GACV,MAAO,CACH1B,SAAS,GAAD,mBAAM0B,EAAU1B,UAAhB,CAA0BsB,YAnCvC,EA0CnBK,eAAiB,SAACC,GACd,EAAKH,SAAS,CACVN,UAAU,eACH,EAAKD,MAAMC,UADT,eAEJS,EAAMC,OAAOzB,GAAKwB,EAAMC,OAAOC,WA5CxC,EAAKZ,MAAQ,CACTlB,SAAU,GACVmB,UAAW,CACPrC,MAAO,GACPiD,QAASrB,aAAY,KANd,E,iFAWE,IAAD,OAChBC,MAAM,GAAD,OAAIrC,EAAJ,cACA8C,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACF,EAAKG,SAAS,CACVzB,SAAUsB,S,+BAmChB,IAAD,OACL,OACI,oCACI,yBAAKhC,UAAU,eACX,+CACA,kBAAC,EAAD,CAAiBU,SAAUgC,KAAKd,MAAMlB,YAE1C,yBAAKV,UAAU,eACX,+CACCoB,aAAY,GAAS,kBAACuB,EAAA,EAAD,CAAMC,SAAUF,KAAKL,gBACvC,uCAAmB,6BACnB,kBAACM,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,KACI,2BAAON,MAAOE,KAAKd,MAAMC,UAAUrC,MAAOsB,GAAG,WAEjD,kBAACiC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAK7B,oBAA5B,gBAEE,S,GArEE8B,IAAMC,WCQvBC,EAVO,SAAAtD,GAElB,OACI,yBAAKG,UAAU,kBACX,kBAAC,EAAD,Q,sDCwEGoD,G,wHA5EgBC,EAAOC,EAAWC,EAAkBC,GAC3D,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAM1C,OAAQ8C,IAC1BJ,EAAMI,GAAGH,YAAcA,GACnBF,EAAeM,cAAcL,EAAMI,GAAIF,EAAkBC,K,oCAKpDxB,EAAMuB,EAAkBI,GACzCA,EAAEC,OAEFD,EAAEE,KAAF,cAAc7B,EAAK6B,KAAnB,MACAF,EAAEG,OAAF,cAAgB9B,EAAK8B,OAArB,MAJ4C,IAMrCxE,EAA6E0C,EAA7E1C,MAAOyE,EAAsE/B,EAAtE+B,OAAQC,EAA8DhC,EAA9DgC,OAAQC,EAAsDjC,EAAtDiC,KAAMC,EAAgDlC,EAAhDkC,MAAOC,EAAyCnC,EAAzCmC,MAAOC,EAAkCpC,EAAlCoC,eAAgBC,EAAkBrC,EAAlBqC,cAC5DC,EAASf,EAAmBa,EAElC,OADAT,EAAEY,OAAOL,EAAQP,EAAEa,WAAW,IACtBL,GACJ,IAAK,OAED,IAAK,IAAIV,EAAI,EAAGA,EAAIO,EAAQP,IACxBE,EAAEC,OACED,EAAEY,OAAQ,IAAIP,EAAUP,EAAIY,GAC5BV,EAAEC,OACED,EAAEc,UAAUH,EAAQA,GACpBX,EAAEY,OAAON,EAAON,EAAEa,WAAW,IAC7Bb,EAAEe,SAASf,EAAEgB,QACbhB,EAAEiB,KAAK,EAAG,EAAGtF,EAAOyE,GACxBJ,EAAEkB,MACNlB,EAAEkB,MAEN,MACJ,IAAK,UACD,IAAK,IAAIpB,EAAI,EAAGA,EAAIO,EAAQP,IACxBE,EAAEC,OACED,EAAEY,OAAQ,IAAIP,EAAQP,EAAIY,GAC1BV,EAAEC,OACED,EAAEc,UAAUH,EAAQA,GACpBX,EAAEY,OAAON,EAAON,EAAEa,WAAW,IAC7Bb,EAAEmB,YAAYnB,EAAEgB,QAChBhB,EAAEoB,QAAQ,EAAG,EAAGzF,EAAOyE,GAC3BJ,EAAEkB,MACNlB,EAAEkB,MAEN,MACJ,IAAK,WACD,IAAK,IAAIpB,EAAI,EAAGA,EAAIO,EAAQP,IAAK,CAC7BE,EAAEC,OACED,EAAEY,OAAQ,IAAIP,EAAQP,EAAIY,GAC1BV,EAAEC,OACE,IAAMoB,EAAS,EAAIjB,EAAO,EAC1BJ,EAAEc,UAAUH,EAAQA,GACpBX,EAAEY,OAAON,EAAON,EAAEa,WAAW,IAC7Bb,EAAEsB,SAAS,GAAID,EAAQ1F,EAAOyE,GAASzE,EAAOyE,GAClDJ,EAAEkB,MACNlB,EAAEkB,MAEN,MACJ,IAAK,OACD,IAAK,IAAIpB,EAAI,EAAGA,EAAIO,EAAQP,IACxBE,EAAEC,OACED,EAAEY,OAAQ,IAAIP,EAAQP,EAAIY,GAC1BV,EAAEC,OACED,EAAEc,UAAUH,EAAQA,GACpBX,EAAEY,OAAON,EAAON,EAAEa,WAAW,IAC7Bb,EAAEuB,KAAK,EAAG,EAAG5F,EAAOyE,GACxBJ,EAAEkB,MACNlB,EAAEkB,MAKdlB,EAAEkB,U,MCnEJM,EAAcC,EAAQ,KAEtBC,E,YACF,WAAYxF,GAAQ,IAAD,8BACf,4CAAMA,KAOVyF,iBAAmB,WACf,EAAKnD,SAAS,CAACoD,WAAY,EAAK3D,MAAM2D,aATvB,EAiBnBC,OAAS,SAAC7B,GACN,IAAI8B,EAAKC,EAET/B,EAAEgC,QAAU,WACR,EAAKC,KAAOjC,EAAEkC,UAAUC,MAG5BnC,EAAEoC,MAAQ,WACNpC,EAAEqC,aAAa,IAAK,KAEpB,EAAKC,UAAYtC,EAAEuC,aAAa,gBAEhC,EAAKC,UAAYxC,EAAEyC,gBAAgBzC,EAAE0C,UAErC,EAAKF,UAAUG,SAAS,cAExB,EAAKL,UAAUK,SAAS,cAExB,EAAKL,UAAUM,aAAa5C,EAAE6C,aAE9B,EAAKC,cAAgB,EAAKC,MAAMC,cAAcC,OAAO,CACjDC,QAAQ,kBACR/F,GAAI,EAAKjB,MAAMiH,UACjB,CACEvB,UAAW,WACPtD,QAAQC,IAAI,cACZ,EAAKoD,oBAETyB,aAAc,kBAAM,EAAKzB,oBACzB0B,SAAU,SAAAC,GACF,SAAUA,EACV,EAAKpH,MAAMqH,SAASD,GAIpB,EAAKE,oBAAoBF,MAGrCvB,EAAW,IAAIlC,IAAG4D,UAClB3B,EAAM,IAAIjC,IAAG6D,IAEb1D,EAAE2D,UAAU3D,EAAE4D,UAGlB5D,EAAE6D,WAAa,SAACC,EAAEC,GACd/D,EAAEgE,WACFhE,EAAEE,KAAK,KACPF,EAAEoB,QAAQ0C,EAAGC,EAAG,EAAE,IAGtB/D,EAAE0C,SAAW,SAAAuB,GACX,EAAKC,eAAgB,EACrB,EAAKC,cAAgBnE,EAAEkC,UAAU+B,EAAKX,KAAMtD,EAAEoE,oBAehDpE,EAAEqE,aAAe,WACe,WAAxB,EAAKnI,MAAMoI,UACPtE,EAAEuE,OAASvE,EAAEwE,OAAS,GAAKxE,EAAEuE,OAAS,KAAOvE,EAAEwE,OAAS,KACxD,EAAK1B,cAAc2B,KAAK,CACpBC,UAAW,EAAKxI,MAAMiH,SACtBwB,MAAO,CACH7F,QAASrB,aAAY,GACrBmH,KAAO,CACHd,EAAG9D,EAAE6E,UACLd,EAAG/D,EAAE8E,eAQ7B9E,EAAEoE,kBAAoB,SAACH,GACnB,EAAKc,WAAY,EAEb,EAAK9C,KAAK+C,aACV,EAAK/C,KAAKgD,QAGd,EAAKhD,KAAOgC,EACZ,EAAKhC,KAAKiD,QAGdlF,EAAE6C,YAAc,WACR,EAAKZ,KAAK+C,YACd,EAAK/C,KAAKgD,QAEV,EAAKhD,KAAKiD,QAIdlF,EAAEmF,KAAO,WAAO,IAAD,EAC6G,EAAKjJ,MAAMW,OAA3HuI,EADG,EACHA,WAAYC,EADT,EACSA,cAAeC,EADxB,EACwBA,cAAeC,EADvC,EACuCA,iBAAkBC,EADzD,EACyDA,iBAAkBC,EAD3E,EAC2EA,eAAgBC,EAD3F,EAC2FA,eAEtG1F,EAAEoF,WAAF,cAAoBA,EAApB,MAEApF,EAAEc,UAAUd,EAAErE,MAAQ,EAAGqE,EAAEI,OAAS,GAEpCJ,EAAE2F,MAAQ5D,EAAS6D,WACnB9D,EAAI+D,UAEJ,IAAIC,EAAOhE,EAAIiE,UAAU,QACrBC,EAASlE,EAAIiE,UAAU,UACvBE,EAAMnE,EAAIiE,UAAU,OAEpBG,EAASlG,EAAE/C,IAAIgJ,EAAK,EAAG,IAAKZ,EAAeC,GAC3Ca,EAAYnG,EAAE/C,IAAI+I,EAAQ,EAAG,IAAKT,EAAkBC,GACpDY,EAAUpG,EAAE/C,IAAI6I,EAAM,EAAG,IAAKL,EAAgBC,GAElDjG,EAAe4G,oBAAqB,EAAKnK,MAAMoK,OAAQ,SAAUH,EAAWnG,GAC5EP,EAAe4G,oBAAqB,EAAKnK,MAAMoK,OAAQ,MAAOJ,EAAQlG,GACtEP,EAAe4G,oBAAqB,EAAKnK,MAAMoK,OAAQ,OAAQF,EAASpG,KA5I7D,EAsJnBwD,oBAAsB,SAAA+C,GAAa,IAAD,EACNA,EAAS5B,MAA1B7F,EADuB,EACvBA,QAAS8F,EADc,EACdA,KACR4B,EAAW,EAAKtK,MAAhBsK,OACRlI,QAAQC,IAAIO,EAAS8F,GACrB,IAAK,IAAI9E,EAAI,EAAGA,EAAI0G,EAAOxJ,OAAQ8C,IAC3B0G,EAAO1G,GAAGhB,SAAWA,GACrB0H,EAAO1G,GAAG6E,MAAMC,KAAKA,GAAM6B,UA1JnC,EAAKC,MAAQpH,IAAMqH,YACnB,EAAK1I,MAAQ,CACT2D,WAAW,GAJA,E,iFAaf7C,KAAK6H,KAAO,IAAI/G,IAAId,KAAK8C,OAAQ9C,KAAK2H,MAAMG,SAC5C9H,KAAKgE,MAAQvB,EAAYsF,eNxBN,+B,6CM2JnB/H,KAAKgE,MAAMgE,aACXhI,KAAK7C,MAAMqH,SAAS,CAACyD,KAAM,kBAC3BjI,KAAKkD,KAAKgD,U,+BAeV,OACI,yBAAK9H,GAAG,SAASd,UAAU,SAASgD,QAASN,KAAKkI,YAAaC,IAAKnI,KAAK2H,Y,GApKhEpH,IAAMC,WAqMZ4H,eA3BS,SAAAlJ,GACpB,MAAO,CACHpB,OAAQoB,EAAMpB,OACdyH,SAAUrG,EAAMqG,SAChBgC,OAAQrI,EAAMmJ,aACdZ,OAAQvI,EAAMoJ,aAAepJ,EAAMoJ,aAAapK,KAAI,SAAAqK,GAChD,MAAO,CACHxI,QAASwI,EAAUxI,QACnB6F,MAAO,IAAI4C,IAAKC,MAAM,CAClBC,OAAQC,SAASC,eAAe,UAChCC,KAAM,EAAGC,IAAK,EACdC,MAAOR,EAAUQ,MACjBC,MAAO,CAACC,EAAGV,EAAUS,OACrBpH,OAAO,eAAG2G,EAAUW,SAAWX,EAAUY,UACzCC,SAAU,CACN3H,MAAO8G,EAAU9G,MACjBN,KAASoH,EAAU9K,MACnBmE,OAAY,GACZyH,YAAad,EAAUe,aACvBC,SAA+B,IAAnBhB,EAAUgB,gBAIjC,MAIEnB,CAAyBzF,G,SCnMzB6G,EATG,SAAArM,GAEd,OACI,+B,qDC6JOiL,iBA9JG,SAAAjL,GAEdsM,qBAAU,WACFtM,EAAMoL,UAAUnK,KAAOwH,EAAMxH,IAC7BsL,EAAS,eACFvM,EAAMoL,eALE,MAUGoB,mBAAS,eAAIxM,EAAMoL,YAVtB,mBAUhB3C,EAVgB,KAUT8D,EAVS,KAYjBE,EAAoB,SAACtL,EAAMwB,GAC7BP,QAAQC,IAAIlB,EAAKwB,GACjB4J,EAAS,eACE9D,EADH,eAECtH,EAAOwB,MA+BpB,OACI,oCACA,yBAAKxC,UAAU,cACX,yBAAKA,UAAU,UACf,qCACA,kBAAC,IAAD,CAAQgD,QAhCK,WACjB3B,MAAM,GAAD,OAAIrC,EAAJ,wBAA4Ba,EAAMoL,UAAUnK,IAAM,CACnDQ,OAAQ,QACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAU,CACjB6K,WAAW,eACJjE,OAIVxG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFnC,EAAMqH,SAAS,CAACyD,KAAM,kBAAmBM,UAAWjJ,SAoBxD,cACA,kBAAC,IAAD,CAAQgB,QAjBK,WACjB3B,MAAM,GAAD,OAAIrC,EAAJ,wBAA4Ba,EAAMoL,UAAUnK,IAAM,CACnDQ,OAAQ,SACRC,QAAStC,IAER6C,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFnC,EAAMqH,SAASlF,QAUnB,gBACA,6BACI,kBAACwK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR5L,GAAG,QACHE,KAAK,QACLwB,MAAO8F,EAAMnE,MACbvB,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEpK,OAAOC,SACvD,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,UAAhB,UACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,aACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,WAAhB,WACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,UAAhB,UACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,SAAhB,WAGR,kBAACgK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR5L,GAAG,QACHE,KAAK,QACLwB,MAAO8F,EAAMnI,MACbyC,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEpK,OAAOC,SACvD,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,OAAhB,OACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,UAAhB,UACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,QACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,QACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,QACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,WAAhB,cAIR,yBAAKxC,UAAU,UACX,kBAACE,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,YAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,WACL+L,YAAY,WACZvK,MAAO8F,EAAK,SACZ0E,MAAM,WACNC,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,YAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,WACL+L,YAAY,WACZvK,MAAO8F,EAAK,SACZ0E,MAAM,WACNC,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,SAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,QACL+L,YAAY,WACZvK,MAAO8F,EAAMmD,MACbuB,MAAM,QACNE,IAAK,GACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,YAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,WACLwB,MAAO8F,EAAM2D,SACbc,YAAY,WACZC,MAAM,WACNC,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,WAAYM,MACrD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,SAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,QACL+L,YAAY,WACZvK,MAAO8F,EAAMoD,MACbsB,MAAM,QACNC,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASM,SAe9D,kBAACO,EAAA,EAAD,U,QCtJFC,EAAYC,YAAW,CACzBC,KAAM,CACFnN,MAAO,OAEXoN,MAAO,CACHpN,MAAO,QALGkN,CAOfP,KAEGU,EAAcH,YAAW,CAC3BC,KAAM,CACFnN,MAAO,SAEXoN,MAAO,CACHpN,MAAO,UALKkN,CAOjBP,KAEGW,EAAaJ,YAAW,CAC1BC,KAAM,CACFnN,MAAO,QAEXoN,MAAO,CACHpN,MAAO,SALIkN,CAOhBP,KAoPYhC,iBAlPG,SAAAjL,GAEdsM,qBAAU,WACFtM,EAAMsE,MAAMrD,KAAOqD,EAAMrD,IACzB4M,EAAS,eACF7N,EAAMsE,MADL,CAEJN,KAAK,YAAKhE,EAAMsE,MAAMN,KAAK8J,MAAM,KAAK/M,KAAI,SAAAgN,GAAG,OAAIC,SAASD,OAC1D9J,OAAO,YAAKjE,EAAMsE,MAAML,OAAO6J,MAAM,KAAK/M,KAAI,SAAAgN,GAAG,OAAIC,SAASD,aAPnD,MAYGvB,mBAAS,eAC5BxM,EAAMsE,MADqB,CAE9BN,KAAK,YAAKhE,EAAMsE,MAAMN,KAAK8J,MAAM,KAAK/M,KAAI,SAAAgN,GAAG,OAAIC,SAASD,OAC1D9J,OAAO,YAAKjE,EAAMsE,MAAML,OAAO6J,MAAM,KAAK/M,KAAI,SAAAgN,GAAG,OAAIC,SAASD,UAf3C,mBAYhBzJ,EAZgB,KAYTuJ,EAZS,KA+CjBpB,EAAoB,SAACtL,EAAMwB,GAC7BkL,EAAS,eACEvJ,EADH,eAECnD,EAAOwB,MAIdsL,EAAoB,SAAChN,EAAIE,EAAMwB,GACjCkL,EAAS,eACFvJ,EADC,eAEHnD,EAFG,sBAEQmD,EAAMnD,GAAM+M,MAAM,EAAEjN,IAF5B,CAEiC0B,GAFjC,YAE2C2B,EAAMnD,GAAM+M,MAAMjN,EAAK,SAI9E,OACI,oCACA,yBAAKd,UAAU,eACX,kBAAC,IAAD,CAAQgD,QA9CK,WACjB3B,MAAM,GAAD,OAAIrC,EAAJ,sBAA0Ba,EAAMsE,MAAMrD,IAAM,CAC7CQ,OAAQ,QACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAU,CACjBsM,SAAS,eACF7J,EADC,CAEJL,OAAQK,EAAML,OAAOmK,KAAK,KAC1BpK,KAAMM,EAAMN,KAAKoK,KAAK,WAI7BnM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFnC,EAAMqH,SAAS,CAACyD,KAAM,kBAAmBM,UAAWjJ,SAgCxD,cACA,kBAAC,IAAD,CAAQgB,QA7BK,WACjB3B,MAAM,GAAD,OAAIrC,EAAJ,sBAA0Ba,EAAMsE,MAAMrD,IAAM,CAC7CQ,OAAQ,SACRC,QAAStC,IAER6C,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFnC,EAAMqH,SAASlF,QAsBnB,iBAEJ,yBAAKhC,UAAU,QACX,yBAAKA,UAAU,YACX,kBAACwM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,mBACR5L,GAAG,YACHE,KAAK,YACLkN,aAAc,GACd1L,MAAO2B,EAAMb,UACbV,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,YAAaK,EAAEpK,OAAOC,SAC3D,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,UAAhB,UACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,OAAhB,OACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,UAGR,kBAACgK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,eACR5L,GAAG,QACHE,KAAK,QACLkN,aAAc,GACd1L,MAAO2B,EAAMA,MACbvB,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASK,EAAEpK,OAAOC,SACvD,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,aACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,WAAhB,WACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,YAAhB,YACA,kBAACqK,EAAA,EAAD,CAAUrK,MAAM,QAAhB,UAGR,kBAACtC,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,kBAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,iBACLgM,MAAM,iBACNmB,KAAM,GACNjB,IAAK,GACL1K,MAAO2B,EAAK,eACZ8I,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,iBAAkBM,MAC3D,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,iBAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,gBACLgM,MAAM,gBACNmB,KAAM,GACNjB,IAAK,GACL1K,MAAO2B,EAAK,cACZ8I,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,gBAAiBM,OAE9D,yBAAK5M,UAAU,YACH,kBAACE,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,cAGJ,kBAACgN,EAAD,CACI5K,MAAO2B,EAAMN,KAAK,GAClBsK,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,OAAQlB,MACpD,kBAACY,EAAD,CACIhL,MAAO2B,EAAMN,KAAK,GAClBsK,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,OAAQlB,MACpD,kBAACa,EAAD,CACIjL,MAAO2B,EAAMN,KAAK,GAClBsK,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,OAAQlB,OAG5D,yBAAK5M,UAAU,YACH,kBAACE,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,SAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,QACLgM,MAAM,QACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZvK,MAAO2B,EAAM7E,MACb2N,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,UAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,SACLgM,MAAM,SACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZvK,MAAO2B,EAAMJ,OACbkJ,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,SAAUM,MACnD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,UAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,SACLgM,MAAM,SACNmB,IAAK,EACLjB,IAAK,GACLH,YAAY,WACZvK,MAAO2B,EAAMH,OACbiJ,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,SAAUM,MAEnD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,SAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,QACLgM,MAAM,QACNmB,KAAM,IACNpB,YAAY,WACZvK,MAAO2B,EAAMD,MACb+I,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,QAASM,MAClD,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,QAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,OACLgM,MAAM,OACNmB,KAAM,IACNpB,YAAY,WACZvK,MAAO2B,EAAMF,KACbgJ,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAASN,EAAkB,OAAQM,OAG7D,yBAAK5M,UAAU,YACP,kBAACE,EAAA,EAAD,CAAYY,GAAG,SAASV,cAAY,GAApC,gBAGA,kBAACgN,EAAD,CACIpM,KAAK,SACLiM,kBAAkB,OAClBzK,MAAO2B,EAAML,OAAO,GACpBqK,IAAK,EACLjB,IAAK,IACLkB,aAAW,SACXxL,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,SAAUlB,MACtD,kBAACY,EAAD,CACIxM,KAAK,SACLgM,MAAM,SACNC,kBAAkB,OAClBzK,MAAO2B,EAAML,OAAO,GACpBqK,IAAK,EACLjB,IAAK,IACLtK,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,SAAUlB,MACtD,kBAACa,EAAD,CACIzM,KAAK,SACLgM,MAAM,SACNC,kBAAkB,OAClBzK,MAAO2B,EAAML,OAAO,GACpBqK,IAAK,EACLjB,IAAK,IACLtK,SAAU,SAAC+J,EAAEC,GAAH,OAASkB,EAAkB,EAAG,SAAUlB,QAIlE,kBAACO,EAAA,EAAD,UCpQFC,GAAYC,YAAW,CACzBC,KAAM,CACFnN,MAAO,OAEXoN,MAAO,CACHpN,MAAO,QALGkN,CAOfP,KAEGU,GAAcH,YAAW,CAC3BC,KAAM,CACFnN,MAAO,SAEXoN,MAAO,CACHpN,MAAO,UALKkN,CAOjBP,KAEGW,GAAaJ,YAAW,CAC1BC,KAAM,CACFnN,MAAO,QAEXoN,MAAO,CACHpN,MAAO,SALIkN,CAOhBP,KAiHYhC,gBANS,SAAAlJ,GACpB,MAAO,CACHpB,OAAQoB,EAAMpB,UAIPsK,EAvGQ,SAAAjL,GAAU,IAAD,EACQwM,mBAAS,YAAIxM,EAAMW,OAAOuI,WAAW4E,MAAM,KAAK/M,KAAI,SAAAgN,GAAG,OAAIC,SAASD,QAD5E,mBACrB7E,EADqB,KACTsF,EADS,OAEJhC,mBAAS,CAACxM,EAAMW,OAAO4I,eAAgBvJ,EAAMW,OAAO6I,iBAFhD,mBAErBI,EAFqB,KAEf6E,EAFe,OAGNjC,mBAAS,CAACxM,EAAMW,OAAOwI,cAAenJ,EAAMW,OAAOyI,gBAH7C,mBAGrBW,EAHqB,KAGhB2E,EAHgB,OAIAlC,mBAAS,CAACxM,EAAMW,OAAO0I,iBAAkBrJ,EAAMW,OAAO2I,mBAJtD,mBAIrBQ,EAJqB,KAIb6E,EAJa,KAOtBC,EAAe,SAACb,EAAIhB,GACtByB,EAAc,GAAD,mBAAKtF,EAAWgF,MAAM,EAAEH,IAAxB,CAA8BhB,GAA9B,YAAoC7D,EAAWgF,MAAMH,EAAI,OAwB1E,OACI,oCACA,yBAAK5N,UAAU,mBACX,kBAAC,IAAD,CAAQgD,QAxBS,WACrB3B,MAAM,GAAD,OAAIrC,EAAJ,qBAAyBa,EAAMW,OAAOM,IAAM,CAC7CQ,OAAQ,QACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAU,CACjBC,QAAS,CACLoH,WAAYA,EAAWkF,KAAK,KAC5B7E,eAAgBK,EAAK,GACrBJ,eAAgBI,EAAK,GACrBT,cAAeY,EAAI,GACnBX,cAAeW,EAAI,GACnBV,iBAAkBS,EAAO,GACzBR,iBAAkBQ,EAAO,QAIhC7H,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,SAON,eACA,gDACA,kBAAC,GAAD,CACIQ,MAAOuG,EAAW,GAClBoF,IAAK,EACLjB,IAAK,IACLwB,MAAM,MACNzB,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAAS6B,EAAa,EAAG7B,MACvC,kBAAC,GAAD,CACIpK,MAAOuG,EAAW,GAClBoF,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBD,MAAM,QACNpK,SAAU,SAAC+J,EAAEC,GAAH,OAAS6B,EAAa,EAAG7B,MACvC,kBAAC,GAAD,CACIpK,MAAOuG,EAAW,GAClBoF,IAAK,EACLjB,IAAK,IACLD,kBAAkB,OAClBD,MAAM,OACNpK,SAAU,SAAC+J,EAAEC,GAAH,OAAS6B,EAAa,EAAG7B,OAE3C,yBAAK5M,UAAU,mBACX,4CACA,kBAACE,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,gBAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,OACLwB,MAAOiH,EACPyD,IAAK,IACLF,MAAM,OACNC,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAAS0B,EAAQ1B,MAC/B,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,eAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,MACLwB,MAAOoH,EACPoD,MAAM,MACNE,IAAK,IACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAAS2B,EAAO3B,MAC9B,kBAAC1M,EAAA,EAAD,CAAYY,GAAG,kBAAkBV,cAAY,GAA7C,kBAGA,kBAAC0M,EAAA,EAAD,CACI9L,KAAK,SACLwB,MAAOmH,EACPqD,MAAM,SACNE,IAAK,IACLD,kBAAkB,OAClBrK,SAAU,SAAC+J,EAAEC,GAAH,OAAS4B,EAAU5B,OAErC,kBAACO,EAAA,EAAD,UC1DOrC,gBATS,SAAAlJ,GACpB,MAAO,CACHyG,UAAWzG,EAAMpB,OAAOM,GACxB6N,SAAU/M,EAAM+M,SAChBC,SAAUhN,EAAMgN,SAChB3G,SAAUrG,EAAMqG,YAIT6C,EArEK,SAACjL,GAEjB,IA6BMgP,EAAqB,SAACC,GACxBzN,MAAM,GAAD,OAAIrC,EAAJ,YAAgB8P,EAAhB,KAA8B,CAC/BxN,OAAQ,OACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAL,yBACEoN,GAAc,CACdrM,QAASrB,aAAY,GACrB2N,WAAYlP,EAAMwI,eAIzBvG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACe,cAAb8M,EACAjP,EAAMqH,SAAS,CAACyD,KAAM,iBAAkBM,UAAWjJ,IAEnDnC,EAAMqH,SAAS,CAACyD,KAAM,iBAAkBM,UAAWjJ,QAKnE,OACI,oCAnDuB,WACvB,OAAQnC,EAAMoI,UACV,IAAK,SACD,OACI,yBAAKjI,UAAU,mBACX,kBAAC,IAAD,CAAQgD,QAAS,kBAAM6L,EAAmB,cAA1C,oBACChP,EAAM+O,SAAW/O,EAAM+O,SAAShO,KAAI,SAAAuD,GAAK,OAAI,kBAAC,EAAD,CAAWA,MAAOA,OAAa,MAGzF,IAAK,SACD,OACI,yBAAKnE,UAAU,mBACX,kBAAC,IAAD,CAAQgD,QAAS,kBAAM6L,EAAmB,gBAA1C,oBACChP,EAAM8O,SAAW9O,EAAM8O,SAAS/N,KAAI,SAAAqK,GAAS,OAAI,kBAAC,EAAD,CAAWA,UAAWA,OAAiB,MAGrG,IAAK,QACD,OAAO,kBAAC,EAAD,MACX,IAAK,WACD,OACI,yBAAKjL,UAAU,mBACX,kBAAC,GAAD,OAGZ,QACI,OAAO,sCA2BVgP,OCxCElE,gBAPS,SAAClJ,GACrB,MAAO,CACHpB,OAAQoB,EAAMpB,OACdyO,MAAOrN,EAAMqN,SAINnE,EAlBa,SAAAjL,GACxB,OACI,oCACI,yBAAKiB,GAAG,mBAAmBd,UAAU,oBACjC,kBAAC,EAAD,CAAQ8G,SAAUjH,EAAMiH,WACxB,kBAAC,GAAD,W,UCHVoI,G,2MAUFC,iBAAmB,WACf9N,MAAM,GAAD,OAAIrC,EAAJ,kBAAsBoC,aAAY,GAAlC,cAAsD,CACvDE,OAAQ,OACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAU,CACjB0N,SAAU,CACN3M,QAASrB,aAAY,GACrB2N,WAAY,EAAKlP,MAAMW,OAAOM,S,mFAfzB,IAAD,OAChBO,MAAM,GAAD,OAAIrC,EAAJ,qBAAyB0D,KAAK7C,MAAMwP,MAAMC,OAAOxO,KACjDgB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACF,EAAKnC,MAAMqH,SAAS,CAACyD,KAAM,cAAenK,OAAQwB,S,+BAiBpD,IAAD,OACL,OACI,yBAAKhC,UAAU,eACX,yBAAKA,UAAU,iBACX,4BAAK0C,KAAK7C,MAAMW,OAAOhB,OACtB4B,aAAY,KAAWsB,KAAK7C,MAAMoP,MAAQ,kBAAC,IAAD,CAAQjM,QAASN,KAAKyM,kBAAtB,mBAAmE,KAC5G/N,aAAY,GAAS,kBAACmO,GAAA,EAAD,KAC3B,kBAAC,IAAD,CAAQvM,QAAS,kBAAM,EAAKnD,MAAMqH,SAAS,CAACyD,KAAM,mBAAoBM,UAAW,aAAjF,UAGA,kBAAC,IAAD,CAAQjI,QAAS,kBAAM,EAAKnD,MAAMqH,SAAS,CAACyD,KAAM,mBAAoBM,UAAW,aAAjF,UAMC7J,aAAY,IAAUsB,KAAK7C,MAAMoP,MAAQ,kBAAC,IAAD,CAAQjM,QAAS,kBAAM,EAAKnD,MAAMqH,SAAS,CAACyD,KAAM,mBAAoBM,UAAW,eAAjF,YAE9B,IACC,IAEb,kBAAC,GAAD,CACInE,SAAUpE,KAAK7C,MAAMwP,MAAMC,OAAOxO,U,GA7C7BmC,IAAMC,WA0DhB4H,gBAPS,SAAClJ,GACrB,MAAO,CACHpB,OAAQoB,EAAMpB,OACdyO,MAAOrN,EAAMqN,SAINnE,CAAyBoE,I,gDC0BzBM,G,YAtFX,WAAY3P,GAAQ,IAAD,8BACf,4CAAMA,KAYV4P,qBAAuB,SAACnN,GACpBA,EAAMoN,UACN,EAAKvN,UAAS,SAAAC,GACV,MAAO,CACHuN,OAAO,eACAvN,EAAUuN,OADX,eAEDrN,EAAMC,OAAOzB,GAAKwB,EAAMC,OAAOC,aAnB7B,EAyBnBoN,iBAAmB,WACf,EAAK/P,MAAMgQ,cAAc,EAAKjO,MAAMkO,QA1BrB,EA6BnBC,kBAAoB,WAChB,EAAKlQ,MAAMmQ,eAAe,EAAKpO,MAAM+N,SA9BtB,EAiCnBM,oBAAsB,SAAC3N,GACnB,EAAKH,SAAS,CACV2N,MAAO,CACHI,MAAO5N,EAAMC,OAAOC,UAlC5B,EAAKZ,MAAO,CACRkO,MAAO,CACHI,MAAO,IAEXP,OAAQ,CACJO,MAAO,GACPlP,KAAM,KARC,E,sEA0Cf,OACI,kBAACmP,GAAA,EAAD,CAAOC,KAAM1N,KAAK7C,MAAMwQ,MAAOC,KAAK,SAChC,kBAACH,GAAA,EAAMI,OAAP,KAAc,kBAACC,GAAA,EAAD,CAAMxP,KAAK,QAAQgC,QAASN,KAAK7C,MAAM4Q,cAArD,kBACA,kBAACN,GAAA,EAAMO,QAAP,CAAeC,OAAK,GACpB,kBAACR,GAAA,EAAMS,YAAP,KACI,kBAACjO,EAAA,EAAD,CAAMC,SAAUF,KAAKuN,oBAAqBpP,IAAI,SAC1C,kBAAC8B,EAAA,EAAKG,MAAN,KACI,wCACA,2BAAO+N,YAAY,QAAQ/P,GAAG,WAMlC,kBAAC6B,EAAA,EAAKI,OAAN,CAAaC,QAASN,KAAKkN,iBAAkB5P,UAAU,QAAQ8Q,OAAO,EAAM3Q,MAAM,SAAlF,UAEJ,kBAAC,KAAD,CAAS4Q,YAAU,GAAnB,MACA,kBAACR,GAAA,EAAD,gBACA,kBAAC5N,EAAA,EAAD,CAAMC,SAAUF,KAAK+M,qBAAsB5O,IAAI,UAC/C,kBAAC8B,EAAA,EAAKG,MAAN,KACQ,uCACA,2BAAO+N,YAAY,OAAO/P,GAAG,UAErC,kBAAC6B,EAAA,EAAKG,MAAN,KACQ,wCACA,2BAAO+N,YAAY,QAAQ/P,GAAG,WAUlC,kBAAC6B,EAAA,EAAKI,OAAN,CAAa/C,UAAU,QAAQgD,QAASN,KAAKqN,kBAAmBe,OAAO,EAAM3Q,MAAM,UAAnF,mB,GA/EC8C,IAAMC,WCchB8N,I,OAfC,WAEZ,OACI,oCACA,yBAAKhR,UAAU,cACX,yBAAKA,UAAU,eACX,mD,qBC6BDiR,GAjCD,WAEV,OACI,yBAAKjR,UAAU,mBACX,yBAAKA,UAAU,QACX,yBAAKkR,IAAKP,KAAOQ,IAAI,YAEzB,yBAAKnR,UAAU,SACX,yBAAKA,UAAU,QACX,+CACoB,6BAAK,0DAEzB,iZAIJ,yBAAKA,UAAU,SACX,gCACI,kBAAC,IAAD,CAAMoR,OAAK,EAACrQ,GAAG,aAAf,gBAIJ,gCACI,kBAAC,IAAD,CAAMA,GAAG,IAAT,mBC4BTsQ,GAlDkB,SAAAxR,GAAU,IAAD,EACZwM,mBAAS,CAC/BpF,KAAK,YACEpH,EAAMa,SAASE,KAAI,SAAAJ,GAClB,MAAO,CAAChB,MAAOgB,EAAOhB,MAAO8R,QAAS9Q,EAAOH,KAAOG,EAAOH,KAAKW,KAAO,GAAIF,GAAIN,EAAOM,UAJ5D,mBAC/Bc,EAD+B,KACxBO,EADwB,KAoCtC,OACI,yBAAKnC,UAAU,gBACX,gDACA,+BACI,4BACI,sCACA,sCAhBL4B,EAAMqF,KAAKrG,KAAI,SAAAJ,GAClB,OACI,4BACI,4BAAI,kBAAC,IAAD,CAAQwC,QAAS,kBApBflC,EAoBkCN,EAAOM,QAnB3DO,MAAM,GAAD,OAAIrC,EAAJ,qBAAyB8B,GAAM,CAChBQ,OAAQ,SACRC,QAAStC,IAER6C,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACmB,eAAjBA,EAAKuP,SACLpP,GAAS,SAAAC,GACL,MAAO,CAAE6E,KAAK,YAAK7E,EAAU6E,KAAKuK,QAAO,SAAAhR,GAAM,OAAIA,EAAOM,KAAOA,aAThF,IAACA,IAoBF,WACJ,4BAAKN,EAAOhB,cCYjBiS,G,YA1CX,WAAY5R,GAAQ,IAAD,8BACf,4CAAMA,KACD+B,MAAQ,CACTvB,KAAM,IAHK,E,iFAOE,IAAD,OAChBgB,MAAM,GAAD,OAAIrC,EAAJ,kBAAsBoC,aAAY,KAClCU,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACV9B,KAAM2B,S,+BAKZ,IAAD,EACsCU,KAAKd,MAAMvB,KAA/CW,EADF,EACEA,KAAMkP,EADR,EACQA,MAAOwB,EADf,EACeA,UAAWC,EAD1B,EAC0BA,SACzBC,EAAmBF,EAAYA,EAAU9Q,KAAI,SAAAwO,GAAQ,OAAIA,EAASzN,WAAW,GAEnF,OADAM,QAAQC,IAAI0P,GAER,yBAAK5R,UAAU,aACX,gDAGA,sCACYkQ,GAEZ,qCACWlP,GAEX,yBAAKhB,UAAU,2BACT2R,EAAW,kBAAC,GAAD,CAA0BnS,MAAM,mBAAmBkB,SAAUiR,EAAUE,WAAU,UAAK7S,EAAL,gBAA+B,S,GAnC1HiE,IAAMC,WCoDd4O,GArDA,SAAAjS,GA6BX,OACI,gCACI,yBAAKG,UAAU,UACX,wBAAIA,UAAU,aACV,4BACI,kBAAC,IAAD,CAASoR,OAAK,EAACrQ,GAAG,KAAlB,SAIJ,4BACI,kBAAC,IAAD,CAASqQ,OAAK,EAACrQ,GAAG,aAAlB,aAIJ,iCAxCRlB,EAAMkS,SAEF,oCACI,4BACI,kBAAC,IAAD,CAASX,OAAK,EAACrQ,GAAG,KACd,4BAAQiC,QAASnD,EAAMmS,cAAvB,aAKR,4BACI,kBAAC,IAAD,CAASZ,OAAK,EAACrQ,GAAG,SAAlB,aAQR,4BAAQiC,QAAS,kBAAMnD,EAAM4Q,gBAA7B,c,oBCdDwB,I,OAXQ,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCWbC,GAFcC,iBAAuBV,IAEPW,OAC9BC,GAAY,CAChBC,eAAgB,IAAIH,QAAcI,oBAG9BC,G,2MAEJpR,MAAQ,CACNmQ,WAAY3Q,aAAY,GACxBiP,OAAO,G,EAGTI,YAAc,WACZ,EAAKtO,SAAS,CACZkO,OAAQ,EAAKzO,MAAMyO,S,EAIvB2B,aAAe,WACb,EAAK7P,SAAS,CACZ4P,UAAU,IACT,kBAAM3Q,aAAa6R,Y,EAIxBC,gBAAkB,SAACC,GACjB,OAAO,SAAC9S,GACN,EAAK+S,UAAL,UAAkBpU,EAAlB,YAA8BmU,GAAe9S,K,EAIjD+S,UAAY,SAACC,EAAMhT,GACjB,OAAOgB,MAAMgS,EAAM,CACjB/R,OAAQ,OACRC,QAAStC,EACTuC,KAAMC,KAAKC,UAAUrB,KAElByB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,KAAK,EAAKwR,gB,EAGjBA,cAAgB,SAACtR,GACVA,EAAKuR,MASNtR,QAAQC,IAAIF,GARZ,EAAKG,SAAS,CACV4P,UAAU,EACV1B,OAAO,IACR,WACCjP,aAAaoS,QAAQ,KAAMxR,EAAKlB,IAChCM,aAAaoS,QAAQ,QAASxR,EAAKkO,W,wEAOnC,IAAD,EACqCxN,KAAK7C,MAD1C,EACCQ,KADD,EACOoT,QADP,EACgBC,iBACrB,OACI,kBAAC,IAAD,KACE,kBAAC,GAAD,CACErD,MAAO3N,KAAKd,MAAMyO,MAClBR,cAAenN,KAAKwQ,gBAAgB,eACpClD,eAAgBtN,KAAKwQ,gBAAgB,SACrCzC,YAAa/N,KAAK+N,cAgBpB,kBAAC,GAAD,CAAQsB,SAAUrP,KAAKd,MAAMmQ,SAC3BtB,YAAa/N,KAAK+N,YAClBuB,aAActP,KAAKsP,eAErB,kBAAC,KAAD,CAAOZ,OAAK,EAACiC,KAAK,IAAIM,OAAQ,WAC5B,OAAQ,oCACN,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGJ,kBAAC,KAAD,CAAON,KAAK,SACT3Q,KAAKd,MAAMmQ,SAAW,kBAAC,GAAD,MAAe,kBAAC,KAAD,CAAUhR,GAAG,OAErD,kBAAC,KAAD,CAAOqQ,OAAK,EAACiC,KAAK,YAAYM,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,KAAD,CAAOvC,OAAK,EAACiC,KAAK,gBAAgBM,OAAQ,SAAAC,GAAW,OACnD,kBAAC,GAAeA,W,GAzFZ3Q,IAAMC,WAgGT2Q,gBAAiB,CAC9BhB,aACAH,oBAFamB,CAGZ/I,cAAUkI,KC/GOc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5E,MACvB,2D,cClBA6E,GAAe,CACjBzR,QAAS,GACTjC,OAAQ,GACRwK,aAAc,GACd2D,SAAU,GACV5D,aAAc,GACd6D,SAAU,GACV3G,SAAU,GACVgH,MAAO,ICCX,IAAMkF,GAAQC,cDEC,WAAsD,IAA/BxS,EAA8B,uDAAtBsS,GAAcG,EAAQ,uCAEhE,OAAOA,EAAO1J,MAWV,IAAK,cACD,OAAO,eACA/I,EADP,CAEIpB,OAAQ6T,EAAO7T,OACfwK,aAAcqJ,EAAO7T,OAAO8T,YAC5BvJ,aAAcsJ,EAAO7T,OAAO+T,UAC5B5F,SAAU0F,EAAO7T,OAAO8T,YAAY9C,QAAO,SAAAvG,GAAS,OAAIA,EAAUxI,SAAWrB,aAAY,MACzFwN,SAAUyF,EAAO7T,OAAO+T,UAAU/C,QAAO,SAAAvG,GAAS,OAAIA,EAAUxI,SAAWrB,aAAY,MACvF6N,MAAOoF,EAAO7T,OAAOH,KAAKS,KAElC,IAAK,eACD,OAAO,eACAc,EADP,CAEIpB,OAAQ6T,EAAO7T,OAAOmB,UAE9B,IAAK,iBACD,OAAO,eACAC,EADP,CAEI+M,SAAS,GAAD,mBAAM/M,EAAM+M,UAAZ,CAAsB0F,EAAOpJ,cAE7C,IAAK,kBACD,IAAM0D,EAAW/M,EAAM+M,SAAS/N,KAAI,SAAAqK,GAChC,OAAIA,EAAUnK,KAAOuT,EAAOpJ,UAAUnK,GAC3BuT,EAAOpJ,UAEPA,KAGf,OAAO,eACArJ,EADP,CAEI+M,SAAS,YAAKA,KAEtB,IAAK,oBACD,OAAO,eACA/M,EADP,CAEI+M,SAAU/M,EAAM+M,SAAS6C,QAAO,SAAAvG,GAAS,OAAIA,EAAUnK,KAAOuT,EAAOG,kBAE7E,IAAK,iBACD,OAAO,eACA5S,EADP,CAEIgN,SAAS,GAAD,mBAAMhN,EAAMgN,UAAZ,CAAsByF,EAAOpJ,cAE7C,IAAK,kBACD,IAAM2D,EAAWhN,EAAMgN,SAAShO,KAAI,SAAAqK,GAChC,OAAIA,EAAUnK,KAAOuT,EAAOpJ,UAAUnK,GAC3BuT,EAAOpJ,UAEPA,KAEf,OAAO,eACArJ,EADP,CAEIgN,SAAS,YAAKA,KAEtB,IAAK,oBACD,OAAO,eACAhN,EADP,CAEIgN,SAAS,YAAKhN,EAAMgN,SAAS4C,QAAO,SAAAvG,GAAS,OAAIA,EAAUnK,KAAOuT,EAAOG,mBAEjF,IAAK,qBACD,OAAO,eACA5S,EADP,CAEImJ,aAAa,GAAD,mBAAMnJ,EAAMmJ,cAAZ,CAA0BsJ,EAAOpJ,UAAU+C,aAE/D,IAAK,sBACD,IAAMjD,EAAenJ,EAAMmJ,aAAanK,KAAI,SAAAqK,GACxC,OAAIA,EAAUnK,KAAOuT,EAAOpJ,UAAU+C,SAASlN,GACpCuT,EAAOpJ,UAAU+C,SAEjB/C,KAGf,OAAO,eACArJ,EADP,CAEImJ,aAAa,YAAKA,KAE1B,IAAK,uBACD,OAAO,eACAnJ,EADP,CAEImJ,aAAa,YAAKnJ,EAAMmJ,aAAayG,QAAO,SAAAvG,GAAS,OAAIA,EAAUnK,KAAOuT,EAAOG,mBAEzF,IAAK,qBACD,OAAO,eACA5S,EADP,CAEIoJ,aAAa,GAAD,mBAAMpJ,EAAMoJ,cAAZ,CAA0BqJ,EAAOpJ,UAAUsB,eAE/D,IAAK,sBAED,IAAMvB,EAAepJ,EAAMoJ,aAAapK,KAAI,SAAAqK,GACxC,OAAIA,EAAUnK,KAAOuT,EAAOpJ,UAAUsB,WAAWzL,GACtCuT,EAAOpJ,UAAUsB,WAEjBtB,KAGf,OAAO,eACArJ,EADP,CAEIoJ,aAAa,YAAKA,KAE1B,IAAK,uBACD,OAAO,eACApJ,EADP,CAEIoJ,aAAa,YAAKpJ,EAAMoJ,aAAawG,QAAO,SAAAvG,GAAS,OAAIA,EAAUnK,KAAOuT,EAAOG,mBAEzF,IAAK,mBACD,OAAO,eACA5S,EADP,CAEIqG,SAAUoM,EAAOpJ,YAEzB,IAAK,gBACD,MAAO,CACHzK,OAAQ,GACRiU,aAAc,GACdC,iBAAkB,GAClBzM,SAAU,GACVgH,MAAO,IAEf,QAAS,OAAOrN,KCnIiBmS,OAAOY,8BAAgCZ,OAAOY,gCAEvFC,IAASjB,OAAO,kBAAC,IAAD,CAAUQ,MAAOA,IACb,kBAAC,GAAD,OAEhB9I,SAASC,eAAe,SFqHtB,kBAAmBuJ,WACrBA,UAAUC,cAAcC,MAAMjT,MAAK,SAAAkT,GACjCA,EAAaC,kB","file":"static/js/main.a2039245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/folds.bc4e5cac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lights.a713bd66.jpg\";","export const API_ROOT = 'http://localhost:3000';\nexport const API_WS_ROOT = 'ws://localhost:3000/cable';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\n\n\n// Deployment URL\n// 'https://intense-harbor-90528.herokuapp.com'","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    card: {\n        width: 200,\n        margin: 10\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst CanvasCard = props => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.title}>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.user}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {props.canvas.title}\n                </Typography>\n            </CardContent>  \n        </Card>\n    )\n}\n\nexport default CanvasCard","import React from 'react';\nimport CanvasCard from '../components/presentational/CanvasCard'\nimport { Link } from 'react-router-dom';\n\nconst DisplayCanvases = (props) => {\n    const renderCanvases = () => {\n        if (props.canvases && props.canvases.length > 0) {\n            return props.canvases.map(canvas => {\n                return (\n                    <li key={canvas.id}>\n                        <Link key={canvas.id} to={`/canvases/${canvas.id}`} >\n                            <CanvasCard canvas={canvas} user={canvas.user ? canvas.user.name : \"\"} />\n                        </Link>\n                    </li>\n                )\n            })\n        }\n    }\n\n    return (\n        <ul>\n            {props.title ? <h3>{props.title}</h3> : \"\"}\n            {renderCanvases()}\n        </ul>\n    )\n}\n\nexport default DisplayCanvases","import React from 'react';\nimport { Button, Form } from 'semantic-ui-react'\nimport { API_ROOT, HEADERS } from '../constants/index'\nimport DisplayCanvases from './DisplayCanvases';\n\nclass CanvasesContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            canvases: [],\n            newCanvas: {\n                title: \"\",\n                user_id: localStorage[\"id\"]\n            }\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/pictures`)\n            .then(resp => resp.json())\n            .then(json => {\n                this.setState({\n                    canvases: json\n                })\n            })\n    }\n\n    handleNewCanvas = () => {\n        if (localStorage[\"id\"]) {\n            fetch(`${API_ROOT}/pictures`, {\n                method: 'POST',\n                headers: HEADERS,\n                body: JSON.stringify({\n                    picture: this.state.newCanvas,\n                })\n            })\n                .then(resp => resp.json())\n                .then(json => {\n                    console.log(json)\n                    this.setState(prevState => {\n                        return {\n                            canvases: [...prevState.canvases, json]\n                        }\n                    })\n                })\n        }\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            newCanvas: {\n                ...this.state.newCanvas,\n                [event.target.id]: event.target.value\n            }\n        })\n    }\n    \n    render() {\n        return (\n            <>\n                <div className=\"canvas-list\">\n                    <h3>Active Canvases</h3>\n                    <DisplayCanvases canvases={this.state.canvases} />\n                </div>\n                <div className=\"canvas-form\">\n                    <h2>Create Your Own</h2>\n                    {localStorage[\"id\"] ? <Form onChange={this.handleOnChange}>\n                        <label>Name</label><br/>\n                        <Form.Group >\n                            <Form.Field >\n                                <input value={this.state.newCanvas.title} id=\"title\"/>\n                            </Form.Field>\n                            <Button onClick={() => this.handleNewCanvas()}>New Canvas</Button>\n                        </Form.Group>\n                    </Form> : \"\"}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default CanvasesContainer\n\n","import React from 'react';\nimport CanvasesContainer from './containers/CanvasesContainer'\n\nconst CanvasesIndex = props => {\n\n    return (\n        <div className=\"canvases-index\" >\n            <CanvasesContainer />\n        </div>\n    )\n    \n}\n\nexport default CanvasesIndex","class P5ReactAdapter {\n\n    // Frequency takes in either 'treble', 'bass', or 'mid' as strings and the frequencyMapping parameter is supposed to be assigned the corresponding frequency mapping to sync with the music\n    static readFrequencyShapes(array, frequency, frequencyMapping, p5) {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i].frequency === frequency) {\n                    P5ReactAdapter.readJsonShape(array[i], frequencyMapping, p5)\n            }\n        }\n    }\n\n    static readJsonShape(json, frequencyMapping, p) {\n        p.push()\n\n        p.fill(`rgb(${json.fill})`)\n        p.stroke(`rgb(${json.stroke})`)\n\n        const {width, height, amount, spin, orbit, shape, stagger_radius, stagger_place } = json\n        const radius = frequencyMapping + stagger_radius\n        p.rotate(orbit * p.frameCount/10)\n        switch (shape) {\n            case \"rect\":\n                //This will allow the shape to rotate around its own axis\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount) * i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.rectMode(p.CENTER)\n                            p.rect(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"ellipse\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.ellipseMode(p.CENTER)\n                            p.ellipse(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"triangle\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            const center = 2 * height/3\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.triangle(0, -center, width, height, -width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            case \"line\":\n                for (let i = 0; i < amount; i++) {\n                    p.push()\n                        p.rotate((360/amount)*i + stagger_place)\n                        p.push()\n                            p.translate(radius, radius)\n                            p.rotate(spin * p.frameCount/10)\n                            p.line(0, 0, width, height)\n                        p.pop()\n                    p.pop()\n                }\n                break;\n            default:\n        }\n        p.pop()\n    }\n}\n\nexport default P5ReactAdapter","import React from 'react';\nimport mojs from 'mo-js';\nimport { connect } from 'react-redux'\nimport folds from '../folds.mp3'\nimport p5 from 'p5';\nimport \"p5/lib/addons/p5.sound\";\nimport P5ReactAdapter from '../constants/P5ReactAdapter'\nimport { API_WS_ROOT } from '../constants/index'\nconst actioncable = require(\"actioncable\")\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.state = {\n            connected: false\n        }\n    }\n\n    toggleConnection = () => {\n        this.setState({connected: !this.state.connected})\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5 (this.sketch, this.myRef.current)\n        this.cable = actioncable.createConsumer(API_WS_ROOT)\n    }\n\n    sketch = (p) => {\n        let fft, analyzer\n\n        p.preload = () => {\n            this.song = p.loadSound(folds)\n        }\n      \n        p.setup = () => {\n            p.createCanvas(600, 600);\n        \n            this.toggleBtn = p.createButton(\"Play / Pause\")\n        \n            this.uploadBtn = p.createFileInput(p.uploaded)\n        \n            this.uploadBtn.addClass(\"upload-btn\")\n        \n            this.toggleBtn.addClass(\"toggle-btn\");\n        \n            this.toggleBtn.mousePressed(p.toggleAudio);\n\n            this.canvasChannel = this.cable.subscriptions.create({\n                channel: `PicturesChannel`, \n                id: this.props.paramsId\n            },{\n                connected: () => {\n                    console.log(\"connected!\")\n                    this.toggleConnection()\n                },\n                disconnected: () => this.toggleConnection(),\n                received: data => {\n                    if ('type' in data) {\n                        this.props.dispatch(data)\n                    // } else if ('draw' in data) {\n                    //     p.newDrawing(data.draw.x, data.draw.y)\n                    } else {\n                        this.handleRecievedBurst(data)\n                    } \n            }})\n            analyzer = new p5.Amplitude();\n            fft = new p5.FFT();\n      \n            p.angleMode(p.DEGREES)\n        };\n\n        p.newDrawing = (x,y) => {\n            p.noStroke()\n            p.fill(250)\n            p.ellipse(x, y, 5,5);\n        }\n      \n        p.uploaded = file => {\n          this.uploadLoading = true;\n          this.uploadedAudio = p.loadSound(file.data, p.uploadedAudioPlay);\n        }\n\n        // p.mouseDragged = () => {\n            // if (this.props.selected === \"paint\") {\n            //     this.canvasChannel.send({\n            //         canvas_id: this.props.paramsId,\n            //         draw: {\n            //             x: p.mouseX,\n            //             y: p.mouseY\n            //         }\n            //     })\n            // }\n        // }\n\n        p.mouseClicked = () => {\n            if (this.props.selected === \"bursts\") {\n                if (p.mouseX * p.mouseY > 0 && p.mouseX < 600 && p.mouseY < 600) {\n                    this.canvasChannel.send({\n                        canvas_id: this.props.paramsId,\n                        burst: {\n                            user_id: localStorage[\"id\"],\n                            tune : {\n                                x: p.winMouseX,\n                                y: p.winMouseY\n                            }\n                        }\n                    })\n                }\n            }\n        }\n      \n        p.uploadedAudioPlay = (file) => {\n            this.uploading = false;\n        \n            if (this.song.isPlaying()) {\n                this.song.pause()\n            }\n        \n            this.song = file\n            this.song.play() \n        }\n      \n        p.toggleAudio = () => {\n            if (this.song.isPlaying()) {\n            this.song.pause();\n            } else {\n            this.song.play();\n            }\n        }\n      \n        p.draw = () => {\n            const { background, mid_mapping_1, mid_mapping_2, treble_mapping_1, treble_mapping_2, bass_mapping_1, bass_mapping_2} = this.props.canvas\n    \n            p.background(`rgb(${background})`);\n\n            p.translate(p.width / 2, p.height / 2);\n\n            p.level = analyzer.getLevel();\n            fft.analyze();\n\n            var bass = fft.getEnergy('bass');\n            var treble = fft.getEnergy('treble');\n            var mid = fft.getEnergy(\"mid\");\n\n            var mapMid = p.map(mid, 0, 255, mid_mapping_1, mid_mapping_2);\n            var mapTreble = p.map(treble, 0, 255, treble_mapping_1, treble_mapping_2);\n            var mapBass = p.map(bass, 0, 255, bass_mapping_1, bass_mapping_2);\n\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"treble\", mapTreble, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"mid\", mapMid, p)\n            P5ReactAdapter.readFrequencyShapes( this.props.shapes, \"bass\", mapBass, p)\n        };\n    }\n\n    componentWillUnmount() {\n        this.cable.disconnect()\n        this.props.dispatch({type: \"REMOVE_CANVAS\"})\n        this.song.pause()\n    }\n\n    handleRecievedBurst = response => {\n        const {user_id, tune} = response.burst\n        const { bursts } = this.props\n        console.log(user_id, tune)\n        for (let i = 0; i < bursts.length; i++) {\n            if (bursts[i].user_id == user_id) {\n                bursts[i].burst.tune(tune).replay()\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"canvas\" className=\"canvas\" onClick={this.handleClick} ref={this.myRef}>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        canvas: state.canvas,\n        selected: state.selected,\n        shapes: state.canvasShapes,\n        bursts: state.canvasBursts ? state.canvasBursts.map(animation => {\n            return {\n                user_id: animation.user_id,\n                burst: new mojs.Burst({\n                    parent: document.getElementById(\"canvas\"),\n                    left: 0, top: 0,\n                    count: animation.count,\n                    angle: {0: animation.angle},\n                    radius: {[animation.radius_1]: animation.radius_2},\n                    children: {\n                        shape: animation.shape,\n                        fill:    animation.color,\n                        radius:     20,\n                        strokeWidth: animation.stroke_width,\n                        duration:   animation.duration*100\n                    }\n                })\n            }\n        }) : []\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas)\n\n","import React from 'react'\n\n\nconst PaintEdit = props => {\n\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default PaintEdit","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT, HEADERS } from '../../constants/index';\nimport { Slider, Button, Typography, FormControl, MenuItem, Select, Divider } from '@material-ui/core';\n\nconst BurstEdit = props => {\n\n    useEffect(() => {\n        if (props.animation.id !== burst.id) {\n            setBurst({\n                ...props.animation\n            })\n        }\n    })\n  \n    const [burst, setBurst] = useState({...props.animation})\n\n    const handleInputChange = (name, value) => {\n        console.log(name,value)\n        setBurst({\n                ...burst, \n                [name]: value\n            })\n    }\n\n    const handleSubmit = () => {\n        fetch(`${API_ROOT}/animate_mos/${props.animation.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                animate_mo: {\n                    ...burst\n                }\n            })}\n        )\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_BURST\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        fetch(`${API_ROOT}/animate_mos/${props.animation.id}`, {\n            method: \"DELETE\",\n            headers: HEADERS\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n    \n    return (\n        <>\n        <div className=\"tool-burst\">\n            <div className=\"burst1\">\n            <h3>Burst</h3>\n            <Button onClick={handleSubmit}>Save Burst</Button>\n            <Button onClick={handleDelete}>Delete Burst</Button>\n            <div>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        value={burst.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"circle\" >Circle</MenuItem>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"polygon\" >Polygon</MenuItem>\n                        <MenuItem value=\"zigzag\" >Zigzag</MenuItem>\n                        <MenuItem value=\"curve\" >Curve</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"color-select\"\n                        id=\"color\"\n                        name=\"color\"\n                        value={burst.color} \n                        onChange={(e,v) => handleInputChange(\"color\", e.target.value)}>\n                        <MenuItem value=\"red\" >Red</MenuItem>\n                        <MenuItem value=\"yellow\" >Yellow</MenuItem>\n                        <MenuItem value=\"pink\" >Pink</MenuItem>\n                        <MenuItem value=\"blue\" >Blue</MenuItem>\n                        <MenuItem value=\"cyan\" >Cyan</MenuItem>\n                        <MenuItem value=\"magenta\">Magenta</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n                <div className=\"burst2\">\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 1\n                    </Typography>\n                    <Slider\n                        name=\"radius_1\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_1\"]}\n                        label=\"Radius 1\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_1\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Radius 2\n                    </Typography>\n                    <Slider \n                        name=\"radius_2\"\n                        orientation=\"vertical\"\n                        value={burst[\"radius_2\"]}\n                        label=\"Radius 2\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"radius_2\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Count\n                    </Typography>\n                    <Slider \n                        name=\"count\"\n                        orientation=\"vertical\"\n                        value={burst.count}\n                        label=\"Count\"\n                        max={20}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"count\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Duration\n                    </Typography>\n                    <Slider \n                        name=\"duration\"\n                        value={burst.duration}\n                        orientation=\"vertical\"\n                        label=\"Duration\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"duration\", v)} />\n                    <Typography id=\"slider\" gutterBottom>\n                        Angle\n                    </Typography>\n                    <Slider \n                        name=\"angle\"\n                        orientation=\"vertical\"\n                        value={burst.angle}\n                        label=\"Angle\"\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"angle\", v)} />\n                    {/* <Typography id=\"slider\" gutterBottom>\n                        Stroke Width\n                    </Typography>\n                    <Slider\n                        name=\"stroke_width\"\n                        orientation=\"vertical\"\n                        value={burst[\"stroke_width\"]}\n                        label=\"Stroke Width\"\n                        max={10}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleInputChange(\"stroke_width\", v)} /> */}\n                </div>\n            </div>\n        </div>\n        <Divider />\n    </>\n    )\n}\n\n\n\nexport default connect()(BurstEdit)","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT, HEADERS } from '../../constants/index';\nimport { Slider, Button, FormControl, MenuItem, Select, Typography, Divider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\nconst ShapeEdit = props => {\n\n    useEffect(() => {\n        if (props.shape.id !== shape.id) {\n            setShape({\n                ...props.shape,\n                fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n                stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n            })\n        }\n    })\n\n    const [shape, setShape] = useState({\n        ...props.shape,\n        fill: [...props.shape.fill.split(',').map(num => parseInt(num))],\n        stroke: [...props.shape.stroke.split(',').map(num => parseInt(num))]\n    })\n\n    const handleSubmit = () => {\n        fetch(`${API_ROOT}/p5_shapes/${props.shape.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                p5_shape: {\n                    ...shape,\n                    stroke: shape.stroke.join(','),\n                    fill: shape.fill.join(',')\n                }\n            })}\n        )\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch({type: \"HTTP_EDIT_SHAPE\", animation: json})\n            })\n    }\n\n    const handleDelete = () => {\n        fetch(`${API_ROOT}/p5_shapes/${props.shape.id}`, {\n            method: \"DELETE\",\n            headers: HEADERS\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                props.dispatch(json)\n            })\n    }\n\n    const handleInputChange = (name, value) => {\n        setShape({\n                ...shape, \n                [name]: value\n            })\n    }\n\n    const handleColorChange = (id, name, value) => {\n        setShape({\n            ...shape,\n            [name]: [...shape[name].slice(0,id), value, ...shape[name].slice(id + 1)]\n        })\n    }\n\n    return (\n        <>\n        <div className=\"tool-header\">\n            <Button onClick={handleSubmit}>Save Shape</Button>\n            <Button onClick={handleDelete}>Delete Shape</Button>\n        </div>\n        <div className=\"tool\" >\n            <div className=\"toolbox1\">\n                <FormControl>\n                    <Select \n                        labelId=\"frequency-select\"\n                        id=\"frequency\"\n                        name=\"frequency\"\n                        defaultValue={\"\"}\n                        value={shape.frequency} \n                        onChange={(e,v) => handleInputChange(\"frequency\", e.target.value)}>\n                        <MenuItem value=\"treble\" >Treble</MenuItem>\n                        <MenuItem value=\"mid\" >Mid</MenuItem>\n                        <MenuItem value=\"bass\" >Bass</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select \n                        labelId=\"shape-select\"\n                        id=\"shape\"\n                        name=\"shape\"\n                        defaultValue={\"\"}\n                        value={shape.shape} \n                        onChange={(e,v) => handleInputChange(\"shape\", e.target.value)}>\n                        <MenuItem value=\"rect\" >Rectangle</MenuItem>\n                        <MenuItem value=\"ellipse\" >Ellipse</MenuItem>\n                        <MenuItem value=\"triangle\" >Triangle</MenuItem>\n                        <MenuItem value=\"line\" >Line</MenuItem>\n                    </Select>\n                </FormControl>\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Radius \n                </Typography>\n                <Slider \n                    name=\"stagger_radius\"\n                    label=\"stagger_radius\"\n                    min={-20}\n                    max={20}\n                    value={shape[\"stagger_radius\"]}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_radius\", v)} />\n                <Typography id=\"vertical-slider\" gutterBottom>\n                    Stagger Place\n                </Typography>\n                <Slider \n                    name=\"stagger_place\"\n                    label=\"stagger_place\"\n                    min={-20}\n                    max={20}\n                    value={shape['stagger_place']}\n                    valueLabelDisplay='auto'\n                    onChange={(e,v) => handleInputChange(\"stagger_place\", v)} />\n            </div>\n            <div className=\"toolbox2\">\n                        <Typography id=\"slider\" gutterBottom>\n                            Fill Color\n                        </Typography>\n                    <RedSlider \n                        value={shape.fill[0]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(0, \"fill\", v)} />\n                    <GreenSlider \n                        value={shape.fill[1]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(1, \"fill\", v)} />\n                    <BlueSlider \n                        value={shape.fill[2]}\n                        min={0}\n                        max={255}\n                        valueLabelDisplay='auto'\n                        onChange={(e,v) => handleColorChange(2, \"fill\", v)} />\n          \n            </div>\n            <div className=\"toolbox4\">\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Width\n                        </Typography>\n                        <Slider \n                            name=\"width\"\n                            label=\"Width\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.width}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"width\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Height\n                        </Typography>\n                        <Slider \n                            name=\"height\"\n                            label=\"height\"\n                            min={0}\n                            max={50}\n                            orientation=\"vertical\"\n                            value={shape.height}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"height\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Amount\n                        </Typography>\n                        <Slider \n                            name=\"amount\"\n                            label=\"Amount\"\n                            min={0}\n                            max={20}\n                            orientation=\"vertical\"\n                            value={shape.amount}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"amount\", v)}\n                            />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Orbit\n                        </Typography>\n                        <Slider\n                            name=\"orbit\"\n                            label=\"Orbit\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.orbit}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"orbit\", v)} />\n                        <Typography id=\"vertical-slider\" gutterBottom>\n                            Spin\n                        </Typography>\n                        <Slider\n                            name=\"spin\"\n                            label=\"Spin\"\n                            min={-100}\n                            orientation=\"vertical\"\n                            value={shape.spin}\n                            valueLabelDisplay='auto'\n                            onChange={(e,v) => handleInputChange(\"spin\", v)}\n                            />\n            </div>\n            <div className=\"toolbox3\">\n                    <Typography id=\"slider\" gutterBottom>\n                            Stroke Color\n                        </Typography>\n                    <RedSlider \n                        name=\"stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[0]}\n                        min={0}\n                        max={255}\n                        aria-label=\"Stroke\"\n                        onChange={(e,v) => handleColorChange(0, \"stroke\", v)} />\n                    <GreenSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[1]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(1, \"stroke\", v)} />\n                    <BlueSlider \n                        name=\"stroke\"\n                        label=\"Stroke\"\n                        valueLabelDisplay=\"auto\"\n                        value={shape.stroke[2]}\n                        min={0}\n                        max={255}\n                        onChange={(e,v) => handleColorChange(2, \"stroke\", v)} />\n            </div>  \n            \n        </div>\n        <Divider />\n        </>\n    )\n}\n\n\nexport default connect()(ShapeEdit)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport { HEADERS, API_ROOT } from '../../constants';\nimport { withStyles } from '@material-ui/core/styles'\n\nconst RedSlider = withStyles({\n    root: {\n        color: 'red'\n    },\n    thumb: {\n        color: 'red'\n    }\n})(Slider);\n\nconst GreenSlider = withStyles({\n    root: {\n        color: 'green'\n    },\n    thumb: {\n        color: 'green'\n    }\n})(Slider)\n\nconst BlueSlider = withStyles({\n    root: {\n        color: 'blue'\n    },\n    thumb: {\n        color: 'blue'\n    }\n})(Slider)\n\n// const theme = createMuiTheme({\n//     status: {\n//         red: 'red',\n//         green: 'green',\n//         blue: 'blue'\n//     }\n// })\n\nconst CanvasSettings = props => {\n    const [background, setBackground] = useState([...props.canvas.background.split(',').map(num => parseInt(num))])\n    const [bass, setBass] = useState([props.canvas.bass_mapping_1, props.canvas.bass_mapping_2])\n    const [mid, setMid] = useState([props.canvas.mid_mapping_1, props.canvas.mid_mapping_2])\n    const [treble, setTreble] = useState([props.canvas.treble_mapping_1, props.canvas.treble_mapping_2])\n\n\n    const handleChange = (num,v) => {\n        setBackground([...background.slice(0,num), v, ...background.slice(num+1)])\n    }\n\n    const handleSaveCanvas = () => {\n        fetch(`${API_ROOT}/pictures/${props.canvas.id}`, {\n            method: \"PATCH\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                picture: {\n                    background: background.join(','),\n                    bass_mapping_1: bass[0],\n                    bass_mapping_2: bass[1],\n                    mid_mapping_1: mid[0],\n                    mid_mapping_2: mid[1],\n                    treble_mapping_1: treble[0],\n                    treble_mapping_2: treble[1]\n                }\n            })\n        })\n            .then(resp => resp.json())\n            .then(json => {\n            })\n    }\n\n    return (\n        <>\n        <div className=\"canvas-settings\">\n            <Button onClick={handleSaveCanvas}>Save Canvas</Button>\n            <h3>Background Color</h3>\n            <RedSlider \n                value={background[0]}\n                min={0}\n                max={255}\n                lable=\"Red\" \n                valueLabelDisplay='auto'\n                onChange={(e,v) => handleChange(0, v)} />\n            <GreenSlider \n                value={background[1]}\n                min={0}\n                max={255}\n                valueLabelDisplay='auto'\n                label=\"Green\" \n                onChange={(e,v) => handleChange(1, v)} />\n            <BlueSlider \n                value={background[2]}\n                min={0}\n                max={255}\n                valueLabelDisplay='auto'\n                label=\"Blue\" \n                onChange={(e,v) => handleChange(2, v)} />\n        </div>\n        <div className=\"canvas-settings\">\n            <h3>Frequencies </h3>\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Bass Mapping\n            </Typography>\n            <Slider\n                name=\"bass\"\n                value={bass}\n                max={300}\n                label=\"bass\"\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setBass(v)} />\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Mid Mapping\n            </Typography>\n            <Slider\n                name=\"mid\"\n                value={mid}\n                label=\"mid\"\n                max={300}\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setMid(v)} />\n            <Typography id=\"vertical-slider\" gutterBottom>\n                Treble Mapping\n            </Typography>\n            <Slider\n                name=\"treble\"\n                value={treble}\n                label=\"treble\"\n                max={300}\n                valueLabelDisplay='auto'\n                onChange={(e,v) => setTreble(v)} />\n        </div>\n        <Divider />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        canvas: state.canvas\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasSettings)","import React from 'react';\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport { API_ROOT, HEADERS } from '../constants/index'\nimport PaintEdit from '../components/presentational/PaintEdit'\nimport BurstEdit from '../components/presentational/BurstEdit'\nimport ShapeEdit from '../components/presentational/ShapeEdit'\nimport CanvasSettings from '../components/presentational/CanvasSettings'\n\nconst CanvasTools = (props) => {\n\n    const renderMyAnimations = () => {\n        switch (props.selected) {\n            case \"shapes\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('p5_shape')}>Create New Shape</Button>\n                        {props.myShapes ? props.myShapes.map(shape => <ShapeEdit shape={shape} />) : null}\n                    </div>\n                )\n            case \"bursts\":\n                return (\n                    <div className=\"tools-container\">\n                        <Button onClick={() => handleNewAnimation('animate_mo')} >Create New Burst</Button>\n                        {props.myBursts ? props.myBursts.map(animation => <BurstEdit animation={animation} />) : null}\n                    </div>\n                )\n            case \"paint\":\n                return <PaintEdit />\n            case \"settings\":\n                return (\n                    <div className='tools-container' >\n                        <CanvasSettings />\n                    </div> \n                )\n            default:\n                return <></>\n        }\n    }\n    \n    const handleNewAnimation = (modelName) => {\n        fetch(`${API_ROOT}/${modelName}s`, {\n            method: \"POST\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                [`${modelName}`]: {\n                    user_id: localStorage[\"id\"],\n                    picture_id: props.canvas_id,\n                }\n            })\n        })\n            .then(resp => resp.json())\n            .then(json => {\n                if (modelName == 'animate_mo') {\n                    props.dispatch({type: \"HTTP_NEW_BURST\", animation: json})\n                } else {\n                    props.dispatch({type: \"HTTP_NEW_SHAPE\", animation: json})\n                }\n            })\n    }\n\n    return (\n        <>\n            {renderMyAnimations()}\n        </>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        canvas_id: state.canvas.id,\n        myBursts: state.myBursts,\n        myShapes: state.myShapes,\n        selected: state.selected\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasTools)","import React from 'react';\nimport Canvas from '../components/Canvas';\nimport { connect } from 'react-redux'\nimport CanvasTools from './CanvasTools';\n\nconst CanvasShowContainer = props => {\n    return (\n        <>\n            <div id=\"canvas-container\" className=\"canvas-container\">\n                <Canvas paramsId={props.paramsId} />\n                <CanvasTools />\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShowContainer)","import React from 'react';\nimport CanvasShowContainer from './containers/CanvasShowContainer'\nimport { API_ROOT, HEADERS } from './constants/index'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport { connect } from 'react-redux'\n\nclass CanvasShow extends React.Component {\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/pictures/${this.props.match.params.id}`)\n            .then(resp => resp.json())\n            .then(json => {\n                this.props.dispatch({type: \"LOAD_CANVAS\", canvas: json})\n            })\n    }\n\n    handleSaveCanvas = () => {\n        fetch(`${API_ROOT}/users/${localStorage[\"id\"]}/bookmarks`, {\n            method: \"POST\",\n            headers: HEADERS,\n            body: JSON.stringify({\n                bookmark: {\n                    user_id: localStorage[\"id\"],\n                    picture_id: this.props.canvas.id\n                }\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"canvas-show\">\n                <div className=\"canvas-header\">\n                    <h2>{this.props.canvas.title}</h2> \n                    {localStorage[\"id\"] && !this.props.admin ? <Button onClick={this.handleSaveCanvas}>Bookmark Canvas</Button> : null}\n                    { localStorage[\"id\"] ? <ButtonGroup >\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"shapes\"})}>\n                    Shapes\n                </Button>\n                <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"bursts\"})}>\n                    Bursts\n                </Button>\n                {/* <Button onClick={() => props.dispatch({type: 'SELECT_ANIMATION', animation: \"paint\"})}>\n                    Paint\n                </Button>  */}\n                {localStorage[\"id\"] == this.props.admin ? <Button onClick={() => this.props.dispatch({type: 'SELECT_ANIMATION', animation: \"settings\"})}>\n                    Settings\n                </Button> : \"\"}\n            </ButtonGroup> : \"\" }\n                </div>\n                <CanvasShowContainer \n                    paramsId={this.props.match.params.id} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        canvas: state.canvas,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(CanvasShow)","import React from 'react'\nimport { Header, Modal , Form, Divider, Icon} from 'semantic-ui-react'\n\nclass LoginModal extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state ={\n            login: {\n                email: \"\"\n            },\n            signup: {\n                email: \"\",\n                name: \"\"\n            }\n        }\n    }\n\n    handleOnSignupChange = (event) => {\n        event.persist()\n        this.setState(prevState => {\n            return {\n                signup: {\n                    ...prevState.signup,\n                    [event.target.id]: event.target.value\n                }\n            }\n        })\n    }\n\n    handleLoginClick = () => {\n        this.props.handleOnLogin(this.state.login)\n    }\n\n    handleSignupClick = () => {\n        this.props.handleOnSignup(this.state.signup)\n    }\n\n    handleOnLoginChange = (event) => {\n        this.setState({\n            login: {\n                email: event.target.value\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Modal open={this.props.modal} size=\"small\">\n                <Modal.Header><Icon name=\"times\" onClick={this.props.toggleModal}/>Log in/Sign up</Modal.Header>\n                <Modal.Content image>\n                <Modal.Description>\n                    <Form onChange={this.handleOnLoginChange} key=\"login\">\n                        <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        {/* <Form.Field >\n                            <label>Password</label>\n                            <input placeholder=\"Password\" />\n                        </Form.Field> */}\n                        <Form.Button onClick={this.handleLoginClick} className=\"login\" fluid={true} color=\"green\">Login</Form.Button>\n                    </Form>\n                    <Divider horizontal>Or</Divider>\n                    <Header>Sign Up</Header>\n                    <Form onChange={this.handleOnSignupChange} key=\"signup\">\n                    <Form.Field >\n                            <label>Name</label>\n                            <input placeholder=\"Name\" id=\"name\"/>\n                        </Form.Field>\n                    <Form.Field >\n                            <label>Email</label>\n                            <input placeholder=\"Email\" id=\"email\"/>\n                        </Form.Field>\n                        {/* <Form.Field >\n                            <label>Password</label>\n                            <input placeholder=\"Password\" />\n                        </Form.Field>\n                        <Form.Field >\n                            <label>Password Confirmation</label>\n                            <input placeholder=\"Password Confirmation\" />\n                        </Form.Field> */}\n                        <Form.Button className=\"login\" onClick={this.handleSignupClick} fluid={true} color=\"yellow\">Sign Up</Form.Button>\n                    </Form>\n                </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default LoginModal","import React from 'react'\n\nconst Landing = () => {\n\n    return (\n        <>\n        <div className=\"banner-img\">\n            <div className=\"banner-text\">\n                <h1>\n                    Virtual Canvas\n                </h1>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Landing","import React from 'react'\nimport image from './lights.jpg'\nimport { Link } from 'react-router-dom'\n\nconst About = () => {\n\n    return (\n        <div className=\"about-container\" >\n            <div className=\"left\">\n                <img src={image} alt=\"lights\" />\n            </div>\n            <div className=\"right\" >\n                <div className=\"text\">\n                    <h2>\n                        SHARED CANVASES <br/><span>FOR AUDIO VISUALIZATION</span>\n                    </h2>\n                    <p>\n                        Virtual Canvas is an app that lets you and any of your friends jump on the same canvas to create a visualizer together. Shapes, bursts, and canvas settings all render in real time across your screen and anyone else who wants to join. Using the same technology as instant messaging, users create, update, and delete visualizer shapes in a live and creative shared space.\n                    </p>\n                </div>\n                <div className=\"links\">\n                    <button>\n                        <Link exact to=\"/canvases\" >\n                                Get Started\n                        </Link>\n                    </button>\n                    <button>\n                        <Link to=\"\">\n                            Learn More\n                        </Link>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { API_ROOT, HEADERS } from '../constants/index'\n\n\nconst CreatedCanvasesContainer = props => {\n    const [state, setState] = useState({\n        data: [\n            ...props.canvases.map(canvas => {\n                return {title: canvas.title, creator: canvas.user ? canvas.user.name : '', id: canvas.id}\n            })\n        ]\n    })\n\n    const handleDelete = (id) => {\n        fetch(`${API_ROOT}/pictures/${id}`, {\n                            method: 'DELETE',\n                            headers: HEADERS\n                        })\n                            .then(resp => resp.json())\n                            .then(json => {\n                                if (json.message === \"Successful\") {\n                                    setState(prevState => {\n                                        return { data: [...prevState.data.filter(canvas => canvas.id !== id)]}\n                                    })\n                                }\n    \n                            })\n    }\n\n    const renderRows = () => {\n        return state.data.map(canvas => {\n            return (\n                <tr>\n                    <td><Button onClick={() => handleDelete(canvas.id)}>Delete</Button></td>   \n                    <td>{canvas.title}</td>\n                </tr>\n            )\n        })\n    }\n\n    return (\n        <div className=\"canvas-table\">\n            <h3>Created Canvases</h3>\n            <table >\n                <tr>\n                    <th>Action</th>\n                    <th>Title</th>\n                </tr>\n                {renderRows()}\n            </table>\n        </div>\n    )\n}\n\nexport default CreatedCanvasesContainer","import React from 'react';\nimport { API_ROOT } from './constants/index'\nimport CreatedCanvasesContainer from './containers/CreatedCanvasesContainer'\n\nclass UserShow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${API_ROOT}/users/${localStorage[\"id\"]}`)\n            .then(resp => resp.json())\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    user: json\n                })\n            })\n    }\n\n    render() {\n        const {name, email, bookmarks, pictures} = this.state.user\n        const bookmarkCanvases = bookmarks ? bookmarks.map(bookmark => bookmark.picture) : []\n        console.log(bookmarkCanvases)\n        return (\n            <div className=\"user-show\" >\n                <h2>\n                    Account overview\n                </h2>\n                <h3>\n                    Email: {email}\n                </h3>\n                <h3>\n                    Name: {name}\n                </h3>\n                <div className=\"user-canvases-container\">\n                    { pictures ? <CreatedCanvasesContainer title=\"Created Canvases\" canvases={pictures} deletePath={`${API_ROOT}/pictures/`}/> : \"\" }\n                    {/* { bookmarkCanvases.length > 0 ? <CreatedCanvasesContainer title=\"Bookmarked Canvases\" canvases={bookmarkCanvases} deletePath={`${API_ROOT}/bookmarks/`}/> : \"\"} */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserShow","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst Navbar = props => {\n\n    const conditionalUserLink = () => {\n        if (props.loggedin) {\n            return (\n                <>\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            <button onClick={props.handleLogout}>\n                                Log out\n                            </button>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/user\" >  \n                            Profile\n                        </NavLink>\n                    </li>\n                </>\n            ) \n        } else {\n            return (\n                <button onClick={() => props.toggleModal()}>\n                    Log in\n                </button>\n            )\n        }\n    }\n\n    return (\n        <header >\n            <nav className=\"navbar\">\n                <ul className=\"nav-links\">\n                    <li>\n                        <NavLink exact to=\"/\" >\n                            Home\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/canvases\" >\n                            Canvases\n                        </NavLink>\n                    </li>\n                    <li>\n                        |\n                    </li>\n                    {conditionalUserLink()}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navbar","const firebaseConfig = {\n    apiKey: \"AIzaSyBjEbxXggiBfnzQWTQu09soV9lbRJSA_TA\",\n    authDomain: \"virtual-canvas.firebaseapp.com\",\n    databaseURL: \"https://virtual-canvas.firebaseio.com\",\n    projectId: \"virtual-canvas\",\n    storageBucket: \"virtual-canvas.appspot.com\",\n    messagingSenderId: \"331574050775\",\n    appId: \"1:331574050775:web:199288fb0d1e763ed81592\",\n    measurementId: \"G-KHGVVPE55P\"\n  };\n\nexport default firebaseConfig","import React from 'react';\nimport { connect } from 'react-redux'\nimport CanvasesIndex from \"./CanvasesIndex\"\nimport CanvasShow from './CanvasShow'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { API_ROOT, HEADERS } from './constants/index'\nimport LoginModal from './components/LoginModal'\nimport './App.css';\nimport Landing from './Landing'\nimport About from \"./About\"\nimport UserShow from './UserShow'\nimport Navbar from './components/Navbar';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport firebaseConfig from './constants/firbaseConfig'\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst firebaseAppAuth = firebaseApp.auth()\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n}\n\nclass App extends React.Component {\n\n  state = {\n    loggedin: !!localStorage[\"id\"],\n    modal: false\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      loggedin: false\n    }, () => localStorage.clear())\n  }\n\n  // This takes in a string to specify whether the fetch is to find a user to login or create a user to sign up\n  handleUserFetch = (fetch_route) => {\n    return (user) => {\n      this.fetchUser(`${API_ROOT}/${fetch_route}`, user)\n    }\n  }\n\n  fetchUser = (path, user) => {\n    return fetch(path, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify(user)\n    })\n        .then(resp => resp.json())\n        .then(this.loginCallBack)\n  }\n\n  loginCallBack = (json) => {\n    if (!json.error) {\n        this.setState({\n            loggedin: true,\n            modal: false\n        }, () => {\n            localStorage.setItem('id', json.id)\n            localStorage.setItem('email', json.email)     \n        })\n    } else {\n        console.log(json)\n    }\n  }\n  \n  render() {\n    const { user, signOut, signInWithGoogle } = this.props\n      return (\n          <Router >\n            <LoginModal \n              modal={this.state.modal} \n              handleOnLogin={this.handleUserFetch(\"users/login\")} \n              handleOnSignup={this.handleUserFetch(\"users\")} \n              toggleModal={this.toggleModal}\n            />\n            {/* {user ? <p>Hello, {user.displayName}</p> : null}\n              {user ? (\n                <button\n                  onClick={signOut}\n                >\n                  Sign out\n                </button>\n              ) : (\n                <button\n                  onClick={signInWithGoogle}\n                >\n                  Sign in with Google\n                </button>\n              )} */}\n            <Navbar loggedin={this.state.loggedin} \n              toggleModal={this.toggleModal} \n              handleLogout={this.handleLogout} \n            />\n            <Route exact path=\"/\" render={() => {\n              return (<>\n                <Landing />\n                <About />\n              </>)\n            }}/>\n            <Route path=\"/user\" >\n              {this.state.loggedin ? <UserShow /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route exact path=\"/canvases\" render={() => <CanvasesIndex />} />\n            <Route exact path=\"/canvases/:id\" render={routerProps => (\n              <CanvasShow {...routerProps} />\n            )} />\n          </Router>\n      );\n    }\n  }\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(connect()(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    user_id: '', \n    canvas: {}, \n    canvasBursts: [], \n    myBursts: [], \n    canvasShapes: [], \n    myShapes: [],\n    selected: '',\n    admin: ''\n}\n\nexport default function canvasReducer(state = initialState, action) {\n\n    switch(action.type) {\n        // case \"LOGIN\":\n        //     return {\n        //         ...state,\n        //         user_id: action.user_id\n        //     }\n        // case \"LOGOUT\":\n        //     return {\n        //         ...state,\n\n        //     }\n        case \"LOAD_CANVAS\": \n            return {\n                ...state,\n                canvas: action.canvas,\n                canvasBursts: action.canvas.animate_mos,\n                canvasShapes: action.canvas.p5_shapes,\n                myBursts: action.canvas.animate_mos.filter(animation => animation.user_id == localStorage[\"id\"]),\n                myShapes: action.canvas.p5_shapes.filter(animation => animation.user_id == localStorage[\"id\"]),\n                admin: action.canvas.user.id\n            }\n        case \"PATCH_CANVAS\":\n            return {\n                ...state,\n                canvas: action.canvas.picture\n            }\n        case \"HTTP_NEW_BURST\":\n            return {\n                ...state,\n                myBursts: [...state.myBursts, action.animation]\n            }\n        case \"HTTP_EDIT_BURST\":\n            const myBursts = state.myBursts.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }       \n            })\n            return {\n                ...state,\n                myBursts: [...myBursts]\n            }\n        case \"HTTP_DELETE_BURST\":\n            return {\n                ...state,\n                myBursts: state.myBursts.filter(animation => animation.id !== action.animation_id)\n            }\n        case \"HTTP_NEW_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes, action.animation]\n            }\n        case \"HTTP_EDIT_SHAPE\":\n            const myShapes = state.myShapes.map(animation => {\n                if (animation.id === action.animation.id) {\n                    return action.animation\n                } else {\n                    return animation\n                }})\n            return {\n                ...state,\n                myShapes: [...myShapes]\n            }\n        case \"HTTP_DELETE_SHAPE\":\n            return {\n                ...state,\n                myShapes: [...state.myShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes, action.animation.p5_shape]\n            }\n        case \"CHANNEL_PATCH_SHAPE\":\n            const canvasShapes = state.canvasShapes.map(animation => {\n                if (animation.id === action.animation.p5_shape.id) {\n                    return action.animation.p5_shape\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasShapes: [...canvasShapes]\n            }\n        case \"CHANNEL_DELETE_SHAPE\":\n            return {\n                ...state,\n                canvasShapes: [...state.canvasShapes.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"CHANNEL_POST_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts, action.animation.animate_mo]\n            }\n        case \"CHANNEL_PATCH_BURST\":\n            // const unalteredBursts = state.canvasBursts.filter(animation => animation.id !== action.animation.animate_mo.id)\n            const canvasBursts = state.canvasBursts.map(animation => {\n                if (animation.id === action.animation.animate_mo.id) {\n                    return action.animation.animate_mo\n                } else {\n                    return animation\n                }\n            })\n            return {\n                ...state,\n                canvasBursts: [...canvasBursts]\n            }\n        case \"CHANNEL_DELETE_BURST\":\n            return {\n                ...state,\n                canvasBursts: [...state.canvasBursts.filter(animation => animation.id !== action.animation_id)]\n            }\n        case \"SELECT_ANIMATION\":\n            return {\n                ...state,\n                selected: action.animation\n            }\n        case \"REMOVE_CANVAS\":\n            return {\n                canvas: {},\n                myAnimations: [],\n                canvasAnimations: [],\n                selected: '',\n                admin: ''\n            }\n        default: return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport CanvasReducer from './reducers/CanvasReducer'\n\nconst store = createStore(CanvasReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}